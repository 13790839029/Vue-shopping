{"version":3,"sources":["webpack:///./node_modules/cropperjs/dist/cropper.esm.js","webpack:///src/components/my/Cropper.vue","webpack:///./src/components/my/Cropper.vue?fff6","webpack:///./src/components/my/Cropper.vue","webpack:///src/pages/My.vue","webpack:///./src/pages/My.vue?4fda","webpack:///./src/pages/My.vue"],"names":["_typeof","obj","Symbol","iterator","constructor","prototype","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_toConsumableArray","arr","Array","isArray","arr2","_arrayWithoutHoles","iter","toString","call","from","_iterableToArray","TypeError","_nonIterableSpread","IN_BROWSER","window","WINDOW","CLASS_CROP","concat","CLASS_DISABLED","CLASS_HIDDEN","CLASS_HIDE","CLASS_INVISIBLE","CLASS_MODAL","CLASS_MOVE","DATA_ACTION","DATA_PREVIEW","EVENT_POINTER_DOWN","PointerEvent","EVENT_POINTER_MOVE","EVENT_POINTER_UP","REGEXP_ACTIONS","REGEXP_DATA_URL","REGEXP_DATA_URL_JPEG","REGEXP_TAG_NAME","DEFAULTS","viewMode","dragMode","initialAspectRatio","NaN","aspectRatio","data","preview","responsive","restore","checkCrossOrigin","checkOrientation","modal","guides","center","highlight","background","autoCrop","autoCropArea","movable","rotatable","scalable","zoomable","zoomOnTouch","zoomOnWheel","wheelZoomRatio","cropBoxMovable","cropBoxResizable","toggleDragModeOnDblclick","minCanvasWidth","minCanvasHeight","minCropBoxWidth","minCropBoxHeight","minContainerWidth","minContainerHeight","ready","cropstart","cropmove","cropend","crop","zoom","cropper_esm_isNaN","Number","isNaN","isNumber","value","isUndefined","isObject","cropper_esm_hasOwnProperty","hasOwnProperty","isPlainObject","_constructor","e","isFunction","forEach","callback","keys","cropper_esm_assign","assign","_len","arguments","args","_key","arg","REGEXP_DECIMALS","normalizeDecimalNumber","times","undefined","test","Math","round","REGEXP_SUFFIX","setStyle","element","styles","style","property","addClass","elem","classList","add","className","trim","indexOf","removeClass","remove","replace","toggleClass","added","REGEXP_HYPHENATE","hyphenate","toLowerCase","getData","name","dataset","getAttribute","setData","setAttribute","REGEXP_SPACES","onceSupported","supported","once","listener","options","get","set","addEventListener","removeEventListener","removeListener","type","handler","split","event","listeners","addListener","_handler","_element$listeners","_len2","_key2","apply","dispatchEvent","Event","CustomEvent","detail","bubbles","cancelable","document","createEvent","initCustomEvent","getOffset","box","getBoundingClientRect","left","pageXOffset","documentElement","clientLeft","top","pageYOffset","clientTop","cropper_esm_location","location","REGEXP_ORIGINS","isCrossOriginURL","url","parts","match","protocol","hostname","port","addTimestamp","timestamp","Date","getTime","getTransforms","_ref","rotate","scaleX","scaleY","translateX","translateY","values","push","transform","join","WebkitTransform","msTransform","getPointer","_ref2","endOnly","pageX","pageY","end","endX","endY","startX","startY","cropper_esm_isFinite","isFinite","getAdjustedSizes","_ref4","height","width","isValidNumber","adjustedWidth","fromCharCode","String","REGEXP_DATA_URL_HEAD","resetAndGetOrientation","arrayBuffer","orientation","dataView","DataView","littleEndian","app1Start","ifdStart","getUint8","byteLength","offset","tiffOffset","start","str","getStringFromCharCode","endianness","getUint16","firstIFDOffset","getUint32","_offset","_length","setUint16","render","this","initContainer","initCanvas","initCropBox","renderCanvas","cropped","renderCropBox","container","cropper","containerData","max","offsetWidth","offsetHeight","imageData","rotated","abs","naturalWidth","naturalHeight","canvasWidth","canvasHeight","canvasData","oldLeft","oldTop","limited","limitCanvas","initialImageData","initialCanvasData","sizeLimited","positionLimited","cropBoxData","_getAdjustedSizes","minWidth","minHeight","maxWidth","Infinity","maxHeight","newCanvasLeft","newCanvasTop","minLeft","min","minTop","maxLeft","maxTop","changed","transformed","_getRotatedSizes","_ref5","degree","arc","PI","sinArc","sin","cosArc","cos","newWidth","newHeight","getRotatedSizes","canvas","renderImage","limitCropBox","image","output","initialCropBoxData","maxCropBoxWidth","maxCropBoxHeight","face","cropBox","disabled","initPreview","crossOrigin","crossOriginUrl","createElement","src","viewBox","appendChild","viewBoxImage","previews","ownerDocument","querySelectorAll","querySelector","el","img","html","innerHTML","cssText","resetPreview","removeAttribute","removeData","cropBoxWidth","cropBoxHeight","originalWidth","originalHeight","ratio","getElementsByTagName","events","bind","onCropStart","cropStart","onWheel","wheel","onDblclick","dblclick","onCropMove","cropMove","onCropEnd","cropEnd","onResize","resize","unbind","handlers","getCanvasData","getCropBoxData","setCanvasData","n","setCropBoxData","setDragMode","dragBox","contains","_this","delta","preventDefault","wheeling","setTimeout","deltaY","wheelDelta","action","pointers","changedTouches","touch","identifier","pointerId","originalEvent","cropping","change","right","bottom","renderable","shiftKey","pointer","range","x","y","check","side","move","pointers2","ratios","pointer2","x1","y1","x2","y2","z1","sqrt","sort","a","b","getMaxZoomRatio","p","methods","reset","clear","hasSameSize","isImg","replaced","uncreate","load","enable","disable","destroy","originalUrl","offsetX","offsetY","_this$canvasData","moveTo","_originalEvent","zoomTo","pivot","oldRatio","count","_ref3","getPointersCenter","rotateTo","_scaleX","scale","_scaleY","rounded","getContainerData","getImageData","sized","widthChanged","heightChanged","getCroppedCanvas","HTMLCanvasElement","source","_ref6","_ref7","_ref8","imageAspectRatio","imageNaturalWidth","imageNaturalHeight","_ref6$rotate","_ref6$scaleX","_ref6$scaleY","_ref8$fillColor","fillColor","_ref8$imageSmoothingE","imageSmoothingEnabled","_ref8$imageSmoothingQ","imageSmoothingQuality","_ref8$maxWidth","_ref8$maxHeight","_ref8$minWidth","_ref8$minHeight","context","getContext","maxSizes","minSizes","destMaxSizes","destMinSizes","destWidth","destHeight","params","fillStyle","fillRect","save","translate","drawImage","map","param","floor","getSourceCanvas","_this$getData","initialX","initialY","initialWidth","initialHeight","_options$imageSmoothi","srcWidth","srcHeight","dstX","dstY","dstWidth","dstHeight","sourceWidth","sourceHeight","srcX","srcY","setAspectRatio","mode","croppable","AnotherCropper","Cropper","instance","Constructor","_classCallCheck","tagName","Error","reloading","sizing","init","protoProps","staticProps","toDataURL","ArrayBuffer","read","base64","binary","atob","uint8","Uint8Array","charCodeAt","clone","xhr","XMLHttpRequest","ontimeout","onabort","onerror","onprogress","getResponseHeader","abort","onload","response","onloadend","open","responseType","withCredentials","send","mimeType","chunks","subarray","btoa","arrayBufferToDataURL","_parseOrientation","parseOrientation","stop","parentNode","insertBefore","nextSibling","_this2","IS_SAFARI","navigator","userAgent","done","build","sizingImage","body","removeChild","template","getElementsByClassName","unbuild","cropper_esm","my_Cropper","imgStyle","default","border-radius","widthRate","heightRate","imgUrl","mounted","getElementById","clip","resultObj","aspectWithRatio","aspectHeightRatio","initilize","opt","self","dragCrop","defineProperty_default","outline","app","reagion","id","initFunction","clickBtn","cancelBtn","addEvent","destoried","fileObj","srcElement","files","dataTransfer","picValue","console","log","originUrl","getObjectURL","file","createObjectURL","URL","webkitURL","Image","croppedCanvas","display","imgData","getRoundedCanvas","postImg","compress","Orientation","sourceCanvas","globalCompositeOperation","beginPath","rect","fill","removeEvent","$emit","rotateImg","direction","step","ctx","tCanvas","tctx","initSize","nw","nh","j","ndata","fn","attachEvent","detachEvent","components_my_Cropper","_vm","_h","$createElement","_c","_self","staticClass","attrs","alt","_v","accept","on","$event","staticRenderFns","src_components_my_Cropper","__webpack_require__","normalizeComponent","ssrContext","My","components","show","nickname","username","defaultImg","gender","email","currentDate","columns","maxDate","minDate","birth","showBirth","showGender","year","month","day","loading","orderNum","tabs","status","icon","title","tempAvatar","computed","extends_default","vuex_esm","goBack","setName","noName","$toast","login","$router","path","address","userName","collection","loginOut","asyncToGenerator_default","regenerator_default","mark","_callee","wrap","_context","prev","next","Api","sent","code","reload","localStorage","t0","browse","myOrder","setting","_this3","_callee2","_context2","user","userInfo","_id","confirm","val","d","getFullYear","getMonth","getDate","onChange","picker","post","_this4","_callee3","datas","_context3","avatar","saveUser","msg","query","github","created","_this5","_callee4","_context4","getOrderNum","numList","pages_My","left-arrow","_s","click","srcset","_l","index","class","_e","is-link","position","overlay","model","$$v","expression","click-left","clearable","label","placeholder","min-date","max-date","cancel","show-toolbar","size","My_Component","My_normalizeComponent","__webpack_exports__"],"mappings":";;;;;;;;;;AAUA,SAAAA,EAAAC,GAWA,OATAD,EADA,mBAAAE,QAAA,iBAAAA,OAAAC,SACA,SAAAF,GACA,cAAAA,GAGA,SAAAA,GACA,OAAAA,GAAA,mBAAAC,QAAAD,EAAAG,cAAAF,QAAAD,IAAAC,OAAAG,UAAA,gBAAAJ,IAIAA,GASA,SAAAK,EAAAC,EAAAC,GACA,QAAAC,EAAA,EAAiBA,EAAAD,EAAAE,OAAkBD,IAAA,CACnC,IAAAE,EAAAH,EAAAC,GACAE,EAAAC,WAAAD,EAAAC,aAAA,EACAD,EAAAE,cAAA,EACA,UAAAF,MAAAG,UAAA,GACAC,OAAAC,eAAAT,EAAAI,EAAAM,IAAAN,IAUA,SAAAO,EAAAC,GACA,OAGA,SAAAA,GACA,GAAAC,MAAAC,QAAAF,GAAA,CACA,QAAAV,EAAA,EAAAa,EAAA,IAAAF,MAAAD,EAAAT,QAAiDD,EAAAU,EAAAT,OAAgBD,IAAAa,EAAAb,GAAAU,EAAAV,GAEjE,OAAAa,GAPAC,CAAAJ,IAWA,SAAAK,GACA,GAAAtB,OAAAC,YAAAY,OAAAS,IAAA,uBAAAT,OAAAV,UAAAoB,SAAAC,KAAAF,GAAA,OAAAJ,MAAAO,KAAAH,GAZAI,CAAAT,IAeA,WACA,UAAAU,UAAA,mDAhBAC,GAmBA,IAAAC,EAAA,oBAAAC,OACAC,EAAAF,EAAAC,UAgBAE,EAAA,GAAAC,OAfA,UAeA,SACAC,EAAA,GAAAD,OAhBA,UAgBA,aACAE,EAAA,GAAAF,OAjBA,UAiBA,WACAG,EAAA,GAAAH,OAlBA,UAkBA,SACAI,EAAA,GAAAJ,OAnBA,UAmBA,cACAK,EAAA,GAAAL,OApBA,UAoBA,UACAM,EAAA,GAAAN,OArBA,UAqBA,SAEAO,EAAA,GAAAP,OAvBA,UAuBA,UACAQ,EAAA,GAAAR,OAxBA,UAwBA,WAWAS,EAAAX,EAAAY,aAAA,qCACAC,EAAAb,EAAAY,aAAA,oCACAE,EAAAd,EAAAY,aAAA,yDAQAG,EAAA,+CACAC,EAAA,SACAC,EAAA,4BACAC,EAAA,oBAEAC,GAEAC,SAAA,EAGAC,SA7BA,OAgCAC,mBAAAC,IAEAC,YAAAD,IAEAE,KAAA,KAEAC,QAAA,GAEAC,YAAA,EAEAC,SAAA,EAEAC,kBAAA,EAEAC,kBAAA,EAEAC,OAAA,EAEAC,QAAA,EAEAC,QAAA,EAEAC,WAAA,EAEAC,YAAA,EAEAC,UAAA,EAEAC,aAAA,GAEAC,SAAA,EAEAC,WAAA,EAEAC,UAAA,EAEAC,UAAA,EAEAC,aAAA,EAEAC,aAAA,EAEAC,eAAA,GAEAC,gBAAA,EAEAC,kBAAA,EAEAC,0BAAA,EAEAC,eAAA,EACAC,gBAAA,EACAC,gBAAA,EACAC,iBAAA,EACAC,kBAAA,IACAC,mBAAA,IAEAC,MAAA,KACAC,UAAA,KACAC,SAAA,KACAC,QAAA,KACAC,KAAA,KACAC,KAAA,MASIC,EAAKC,OAAAC,OAAA9D,EAAA8D,MAOT,SAAAC,EAAAC,GACA,uBAAAA,IAAuCJ,EAAKI,GAQ5C,SAAAC,EAAAD,GACA,gBAAAA,EAQA,SAAAE,EAAAF,GACA,iBAAAjG,EAAAiG,IAAA,OAAAA,EAEA,IAAIG,EAAcrF,OAAAV,UAAAgG,eAOlB,SAAAC,EAAAL,GACA,IAAAE,EAAAF,GACA,SAGA,IACA,IAAAM,EAAAN,EAAA7F,YACAC,EAAAkG,EAAAlG,UACA,OAAAkG,GAAAlG,GAAwC+F,EAAc1E,KAAArB,EAAA,iBACnD,MAAAmG,GACH,UASA,SAAAC,EAAAR,GACA,yBAAAA,EASA,SAAAS,EAAAhD,EAAAiD,GACA,GAAAjD,GAAA+C,EAAAE,GACA,GAAAvF,MAAAC,QAAAqC,IAAAsC,EAAAtC,EAAAhD,QAEA,CACA,IACAD,EADAC,EAAAgD,EAAAhD,OAGA,IAAAD,EAAA,EAAmBA,EAAAC,IACnB,IAAAiG,EAAAjF,KAAAgC,IAAAjD,KAAAiD,GAD+BjD,GAAA,SAKxB0F,EAAAzC,IACP3C,OAAA6F,KAAAlD,GAAAgD,QAAA,SAAAzF,GACA0F,EAAAjF,KAAAgC,IAAAzC,KAAAyC,KAKA,OAAAA,EASA,IAAImD,EAAM9F,OAAA+F,QAAA,SAAA7G,GACV,QAAA8G,EAAAC,UAAAtG,OAAAuG,EAAA,IAAA7F,MAAA2F,EAAA,EAAAA,EAAA,KAAAG,EAAA,EAAwFA,EAAAH,EAAaG,IACrGD,EAAAC,EAAA,GAAAF,UAAAE,GAaA,OAVAf,EAAAlG,IAAAgH,EAAAvG,OAAA,GACAuG,EAAAP,QAAA,SAAAS,GACAhB,EAAAgB,IACApG,OAAA6F,KAAAO,GAAAT,QAAA,SAAAzF,GACAhB,EAAAgB,GAAAkG,EAAAlG,OAMAhB,GAEAmH,EAAA,uBASA,SAAAC,EAAApB,GACA,IAAAqB,EAAAN,UAAAtG,OAAA,QAAA6G,IAAAP,UAAA,GAAAA,UAAA,QACA,OAAAI,EAAAI,KAAAvB,GAAAwB,KAAAC,MAAAzB,EAAAqB,KAAArB,EAEA,IAAA0B,EAAA,mDAOA,SAAAC,EAAAC,EAAAC,GACA,IAAAC,EAAAF,EAAAE,MACArB,EAAAoB,EAAA,SAAA7B,EAAA+B,GACAL,EAAAH,KAAAQ,IAAAhC,EAAAC,KACAA,GAAA,MAGA8B,EAAAC,GAAA/B,IAmBA,SAAAgC,EAAAJ,EAAA5B,GACA,GAAAA,EAIA,GAAAD,EAAA6B,EAAAnH,QACAgG,EAAAmB,EAAA,SAAAK,GACAD,EAAAC,EAAAjC,UAKA,GAAA4B,EAAAM,UACAN,EAAAM,UAAAC,IAAAnC,OADA,CAKA,IAAAoC,EAAAR,EAAAQ,UAAAC,OAEAD,EAEGA,EAAAE,QAAAtC,GAAA,IACH4B,EAAAQ,UAAA,GAAAlG,OAAAkG,EAAA,KAAAlG,OAAA8D,IAFA4B,EAAAQ,UAAApC,GAWA,SAAAuC,EAAAX,EAAA5B,GACAA,IAIAD,EAAA6B,EAAAnH,QACAgG,EAAAmB,EAAA,SAAAK,GACAM,EAAAN,EAAAjC,KAKA4B,EAAAM,UACAN,EAAAM,UAAAM,OAAAxC,GAIA4B,EAAAQ,UAAAE,QAAAtC,IAAA,IACA4B,EAAAQ,UAAAR,EAAAQ,UAAAK,QAAAzC,EAAA,MAUA,SAAA0C,EAAAd,EAAA5B,EAAA2C,GACA3C,IAIAD,EAAA6B,EAAAnH,QACAgG,EAAAmB,EAAA,SAAAK,GACAS,EAAAT,EAAAjC,EAAA2C,KAMAA,EACAX,EAAAJ,EAAA5B,GAEAuC,EAAAX,EAAA5B,IAGA,IAAA4C,EAAA,oBAOA,SAAAC,EAAA7C,GACA,OAAAA,EAAAyC,QAAAG,EAAA,SAAAE,cASA,SAAAC,EAAAnB,EAAAoB,GACA,OAAA9C,EAAA0B,EAAAoB,IACApB,EAAAoB,GAGApB,EAAAqB,QACArB,EAAAqB,QAAAD,GAGApB,EAAAsB,aAAA,QAAAhH,OAAA2G,EAAAG,KASA,SAAAG,EAAAvB,EAAAoB,EAAAvF,GACAyC,EAAAzC,GACAmE,EAAAoB,GAAAvF,EACGmE,EAAAqB,QACHrB,EAAAqB,QAAAD,GAAAvF,EAEAmE,EAAAwB,aAAA,QAAAlH,OAAA2G,EAAAG,IAAAvF,GA2BA,IAAA4F,EAAA,QAEAC,GAAA,WACA,IAAAC,GAAA,EAEA,GAAAzH,EAAA,CACA,IAAA0H,GAAA,EAEAC,EAAA,aAEAC,EAAA5I,OAAAC,kBAA0C,QAC1C4I,IAAA,WAEA,OADAJ,GAAA,EACAC,GAQAI,IAAA,SAAA5D,GACAwD,EAAAxD,KAGAhE,EAAA6H,iBAAA,OAAAJ,EAAAC,GACA1H,EAAA8H,oBAAA,OAAAL,EAAAC,GAGA,OAAAH,EA3BA,GAsCA,SAAAQ,GAAAnC,EAAAoC,EAAAP,GACA,IAAAC,EAAA3C,UAAAtG,OAAA,QAAA6G,IAAAP,UAAA,GAAAA,UAAA,MACAkD,EAAAR,EACAO,EAAA3B,OAAA6B,MAAAb,GAAA5C,QAAA,SAAA0D,GACA,IAAAb,GAAA,CACA,IAAAc,EAAAxC,EAAAwC,UAEAA,KAAAD,IAAAC,EAAAD,GAAAV,KACAQ,EAAAG,EAAAD,GAAAV,UACAW,EAAAD,GAAAV,GAEA,IAAA3I,OAAA6F,KAAAyD,EAAAD,IAAA1J,eACA2J,EAAAD,GAGA,IAAArJ,OAAA6F,KAAAyD,GAAA3J,eACAmH,EAAAwC,WAKAxC,EAAAkC,oBAAAK,EAAAF,EAAAP,KAWA,SAAAW,GAAAzC,EAAAoC,EAAAP,GACA,IAAAC,EAAA3C,UAAAtG,OAAA,QAAA6G,IAAAP,UAAA,GAAAA,UAAA,MACAuD,EAAAb,EACAO,EAAA3B,OAAA6B,MAAAb,GAAA5C,QAAA,SAAA0D,GACA,GAAAT,EAAAF,OAAAF,GAAA,CACA,IAAAiB,EAAA3C,EAAAwC,UACAA,OAAA,IAAAG,KAAwDA,EAExDD,EAAA,kBACAF,EAAAD,GAAAV,GACA7B,EAAAkC,oBAAAK,EAAAG,EAAAZ,GAEA,QAAAc,EAAAzD,UAAAtG,OAAAuG,EAAA,IAAA7F,MAAAqJ,GAAAC,EAAA,EAA8EA,EAAAD,EAAeC,IAC7FzD,EAAAyD,GAAA1D,UAAA0D,GAGAhB,EAAAiB,MAAA9C,EAAAZ,IAGAoD,EAAAD,KACAC,EAAAD,OAGAC,EAAAD,GAAAV,IACA7B,EAAAkC,oBAAAK,EAAAC,EAAAD,GAAAV,GAAAC,GAGAU,EAAAD,GAAAV,GAAAa,EACA1C,EAAAwC,YAGAxC,EAAAiC,iBAAAM,EAAAG,EAAAZ,KAWA,SAAAiB,GAAA/C,EAAAoC,EAAAvG,GACA,IAAA0G,EAaA,OAXA3D,EAAAoE,QAAApE,EAAAqE,aACAV,EAAA,IAAAU,YAAAb,GACAc,OAAArH,EACAsH,SAAA,EACAC,YAAA,KAGAb,EAAAc,SAAAC,YAAA,gBACAC,gBAAAnB,GAAA,KAAAvG,GAGAmE,EAAA+C,cAAAR,GAQA,SAAAiB,GAAAxD,GACA,IAAAyD,EAAAzD,EAAA0D,wBACA,OACAC,KAAAF,EAAAE,MAAAxJ,OAAAyJ,YAAAP,SAAAQ,gBAAAC,YACAC,IAAAN,EAAAM,KAAA5J,OAAA6J,YAAAX,SAAAQ,gBAAAI,YAGA,IAAIC,GAAQ9J,EAAA+J,SACZC,GAAA,mCAOA,SAAAC,GAAAC,GACA,IAAAC,EAAAD,EAAAE,MAAAJ,IACA,OAAAG,MAAA,KAAgCL,GAAQO,UAAAF,EAAA,KAA0BL,GAAQQ,UAAAH,EAAA,KAA0BL,GAAQS,MAQ5G,SAAAC,GAAAN,GACA,IAAAO,EAAA,aAAAvK,QAAA,IAAAwK,MAAAC,WACA,OAAAT,IAAA,IAAAA,EAAA5D,QAAA,cAAAmE,EAQA,SAAAG,GAAAC,GACA,IAAAC,EAAAD,EAAAC,OACAC,EAAAF,EAAAE,OACAC,EAAAH,EAAAG,OACAC,EAAAJ,EAAAI,WACAC,EAAAL,EAAAK,WACAC,KAEApH,EAAAkH,IAAA,IAAAA,GACAE,EAAAC,KAAA,cAAAlL,OAAA+K,EAAA,QAGAlH,EAAAmH,IAAA,IAAAA,GACAC,EAAAC,KAAA,cAAAlL,OAAAgL,EAAA,QAIAnH,EAAA+G,IAAA,IAAAA,GACAK,EAAAC,KAAA,UAAAlL,OAAA4K,EAAA,SAGA/G,EAAAgH,IAAA,IAAAA,GACAI,EAAAC,KAAA,UAAAlL,OAAA6K,EAAA,MAGAhH,EAAAiH,IAAA,IAAAA,GACAG,EAAAC,KAAA,UAAAlL,OAAA8K,EAAA,MAGA,IAAAK,EAAAF,EAAA1M,OAAA0M,EAAAG,KAAA,YACA,OACAC,gBAAAF,EACAG,YAAAH,EACAA,aAqCA,SAAAI,GAAAC,EAAAC,GACA,IAAAC,EAAAF,EAAAE,MACAC,EAAAH,EAAAG,MACAC,GACAC,KAAAH,EACAI,KAAAH,GAEA,OAAAF,EAAAG,EAAyBlH,GACzBqH,OAAAL,EACAM,OAAAL,GACGC,GA8BH,IAAIK,GAAQtI,OAAAuI,UAAApM,EAAAoM,SAQZ,SAAAC,GAAAC,GAEA,IAAA9K,EAAA8K,EAAA9K,YACA+K,EAAAD,EAAAC,OACAC,EAAAF,EAAAE,MACAxE,EAAAjD,UAAAtG,OAAA,QAAA6G,IAAAP,UAAA,GAAAA,UAAA,aAEA0H,EAAA,SAAAzI,GACA,OAAWmI,GAAQnI,MAAA,GAGnB,GAAAyI,EAAAD,IAAAC,EAAAF,GAAA,CACA,IAAAG,EAAAH,EAAA/K,EAEA,YAAAwG,GAAA0E,EAAAF,GAAA,UAAAxE,GAAA0E,EAAAF,EACAD,EAAAC,EAAAhL,EAEAgL,EAAAD,EAAA/K,OAEGiL,EAAAD,GACHD,EAAAC,EAAAhL,EACGiL,EAAAF,KACHC,EAAAD,EAAA/K,GAGA,OACAgL,QACAD,UAoHA,IAAAI,GAAAC,OAAAD,aAoBA,IAAAE,GAAA,YA0CA,SAAAC,GAAAC,GACA,IACAC,EADAC,EAAA,IAAAC,SAAAH,GAGA,IACA,IAAAI,EACAC,EACAC,EAEA,SAAAJ,EAAAK,SAAA,UAAAL,EAAAK,SAAA,GAIA,IAHA,IAAA7O,EAAAwO,EAAAM,WACAC,EAAA,EAEAA,EAAA,EAAA/O,GAAA,CACA,SAAAwO,EAAAK,SAAAE,IAAA,MAAAP,EAAAK,SAAAE,EAAA,IACAJ,EAAAI,EACA,MAGAA,GAAA,EAIA,GAAAJ,EAAA,CACA,IACAK,EAAAL,EAAA,GAEA,YAhFA,SAAAH,EAAAS,EAAAjP,GACA,IACAD,EADAmP,EAAA,GAIA,IAFAlP,GAAAiP,EAEAlP,EAAAkP,EAAiBlP,EAAAC,EAAYD,GAAA,EAC7BmP,GAAAhB,GAAAM,EAAAK,SAAA9O,IAGA,OAAAmP,EAuEAC,CAAAX,EAHAG,EAAA,EAGA,IACA,IAAAS,EAAAZ,EAAAa,UAAAL,GAGA,KAFAN,EAAA,QAAAU,IAEA,QAAAA,IAGA,KAAAZ,EAAAa,UAAAL,EAAA,EAAAN,GAAA,CACA,IAAAY,EAAAd,EAAAe,UAAAP,EAAA,EAAAN,GAEAY,GAAA,IACAV,EAAAI,EAAAM,KAOA,GAAAV,EAAA,CACA,IAEAY,EAEAzP,EAJA0P,EAAAjB,EAAAa,UAAAT,EAAAF,GAMA,IAAA3O,EAAA,EAAiBA,EAAA0P,EAAa1P,GAAA,EAG9B,GAFAyP,EAAAZ,EAAA,GAAA7O,EAAA,EAEA,MAAAyO,EAAAa,UAAAG,EAAAd,GAEA,CAEAc,GAAA,EAEAjB,EAAAC,EAAAa,UAAAG,EAAAd,GAEAF,EAAAkB,UAAAF,EAAA,EAAAd,GACA,QAIG,MAAA5I,GACHyI,EAAA,EAGA,OAAAA,EA6DA,IAAAoB,IACAA,OAAA,WACAC,KAAAC,gBACAD,KAAAE,aACAF,KAAAG,cACAH,KAAAI,eAEAJ,KAAAK,SACAL,KAAAM,iBAGAL,cAAA,WACA,IAAA1I,EAAAyI,KAAAzI,QACA8B,EAAA2G,KAAA3G,QACAkH,EAAAP,KAAAO,UACAC,EAAAR,KAAAQ,QACA7I,EAAA6I,EAAAzO,GACAmG,EAAAX,EAAAxF,GACA,IAAA0O,GACAtC,MAAAhH,KAAAuJ,IAAAH,EAAAI,YAAAnL,OAAA6D,EAAAtE,oBAAA,KACAmJ,OAAA/G,KAAAuJ,IAAAH,EAAAK,aAAApL,OAAA6D,EAAArE,qBAAA,MAEAgL,KAAAS,gBACAnJ,EAAAkJ,GACArC,MAAAsC,EAAAtC,MACAD,OAAAuC,EAAAvC,SAEAvG,EAAAJ,EAAAxF,GACAmG,EAAAsI,EAAAzO,IAGAmO,WAAA,WACA,IAAAO,EAAAT,KAAAS,cACAI,EAAAb,KAAAa,UACA9N,EAAAiN,KAAA3G,QAAAtG,SACA+N,EAAA3J,KAAA4J,IAAAF,EAAApE,QAAA,QACAuE,EAAAF,EAAAD,EAAAI,cAAAJ,EAAAG,aACAC,EAAAH,EAAAD,EAAAG,aAAAH,EAAAI,cACA9N,EAAA6N,EAAAC,EACAC,EAAAT,EAAAtC,MACAgD,EAAAV,EAAAvC,OAEAuC,EAAAvC,OAAA/K,EAAAsN,EAAAtC,MACA,IAAApL,EACAmO,EAAAT,EAAAvC,OAAA/K,EAEAgO,EAAAV,EAAAtC,MAAAhL,EAEK,IAAAJ,EACLoO,EAAAV,EAAAtC,MAAAhL,EAEA+N,EAAAT,EAAAvC,OAAA/K,EAGA,IAAAiO,GACAjO,cACA6N,eACAC,gBACA9C,MAAA+C,EACAhD,OAAAiD,GAEAC,EAAAlG,MAAAuF,EAAAtC,MAAA+C,GAAA,EACAE,EAAA9F,KAAAmF,EAAAvC,OAAAiD,GAAA,EACAC,EAAAC,QAAAD,EAAAlG,KACAkG,EAAAE,OAAAF,EAAA9F,IACA0E,KAAAoB,aACApB,KAAAuB,QAAA,IAAAxO,GAAA,IAAAA,EACAiN,KAAAwB,aAAA,MACAxB,KAAAyB,iBAA4BlL,KAASsK,GACrCb,KAAA0B,kBAA6BnL,KAAS6K,IAEtCI,YAAA,SAAAG,EAAAC,GACA,IAAAvI,EAAA2G,KAAA3G,QACAoH,EAAAT,KAAAS,cACAW,EAAApB,KAAAoB,WACAS,EAAA7B,KAAA6B,YACA9O,EAAAsG,EAAAtG,SACAI,EAAAiO,EAAAjO,YACAkN,EAAAL,KAAAK,SAAAwB,EAEA,GAAAF,EAAA,CACA,IAAAhN,EAAAa,OAAA6D,EAAA1E,iBAAA,EACAC,EAAAY,OAAA6D,EAAAzE,kBAAA,EAEA7B,EAAA,GACA4B,EAAAwC,KAAAuJ,IAAA/L,EAAA8L,EAAAtC,OACAvJ,EAAAuC,KAAAuJ,IAAA9L,EAAA6L,EAAAvC,QAEA,IAAAnL,IACA6B,EAAAzB,EAAAwB,EACAA,EAAAC,EAAAzB,EAEAyB,EAAAD,EAAAxB,IAGOJ,EAAA,IACP4B,EACAA,EAAAwC,KAAAuJ,IAAA/L,EAAA0L,EAAAwB,EAAA1D,MAAA,GACSvJ,EACTA,EAAAuC,KAAAuJ,IAAA9L,EAAAyL,EAAAwB,EAAA3D,OAAA,GACSmC,IACT1L,EAAAkN,EAAA1D,OACAvJ,EAAAiN,EAAA3D,QAEA/K,EAAAwB,EACAA,EAAAC,EAAAzB,EAEAyB,EAAAD,EAAAxB,IAKA,IAAA2O,EAAA9D,IACA7K,cACAgL,MAAAxJ,EACAuJ,OAAAtJ,IAGAD,EAAAmN,EAAA3D,MACAvJ,EAAAkN,EAAA5D,OACAkD,EAAAW,SAAApN,EACAyM,EAAAY,UAAApN,EACAwM,EAAAa,SAAAC,IACAd,EAAAe,UAAAD,IAGA,GAAAN,EACA,GAAA7O,GAAAsN,EAAA,MACA,IAAA+B,EAAA3B,EAAAtC,MAAAiD,EAAAjD,MACAkE,EAAA5B,EAAAvC,OAAAkD,EAAAlD,OACAkD,EAAAkB,QAAAnL,KAAAoL,IAAA,EAAAH,GACAhB,EAAAoB,OAAArL,KAAAoL,IAAA,EAAAF,GACAjB,EAAAqB,QAAAtL,KAAAuJ,IAAA,EAAA0B,GACAhB,EAAAsB,OAAAvL,KAAAuJ,IAAA,EAAA2B,GAEAhC,GAAAL,KAAAuB,UACAH,EAAAkB,QAAAnL,KAAAoL,IAAAV,EAAA3G,KAAA2G,EAAA3G,MAAA2G,EAAA1D,MAAAiD,EAAAjD,QACAiD,EAAAoB,OAAArL,KAAAoL,IAAAV,EAAAvG,IAAAuG,EAAAvG,KAAAuG,EAAA3D,OAAAkD,EAAAlD,SACAkD,EAAAqB,QAAAZ,EAAA3G,KACAkG,EAAAsB,OAAAb,EAAAvG,IAEA,IAAAvI,IACAqO,EAAAjD,OAAAsC,EAAAtC,QACAiD,EAAAkB,QAAAnL,KAAAoL,IAAA,EAAAH,GACAhB,EAAAqB,QAAAtL,KAAAuJ,IAAA,EAAA0B,IAGAhB,EAAAlD,QAAAuC,EAAAvC,SACAkD,EAAAoB,OAAArL,KAAAoL,IAAA,EAAAF,GACAjB,EAAAsB,OAAAvL,KAAAuJ,IAAA,EAAA2B,WAKAjB,EAAAkB,SAAAlB,EAAAjD,MACAiD,EAAAoB,QAAApB,EAAAlD,OACAkD,EAAAqB,QAAAhC,EAAAtC,MACAiD,EAAAsB,OAAAjC,EAAAvC,QAIAkC,aAAA,SAAAuC,EAAAC,GACA,IAAAxB,EAAApB,KAAAoB,WACAP,EAAAb,KAAAa,UAEA,GAAA+B,EAAA,CACA,IAAAC,EApdA,SAAAC,GACA,IAAA3E,EAAA2E,EAAA3E,MACAD,EAAA4E,EAAA5E,OACA6E,EAAAD,EAAAC,OAGA,QAFAA,EAAA5L,KAAA4J,IAAAgC,GAAA,KAGA,OACA5E,MAAAD,EACAA,OAAAC,GAIA,IAAA6E,EAAAD,EAAA,GAAA5L,KAAA8L,GAAA,IACAC,EAAA/L,KAAAgM,IAAAH,GACAI,EAAAjM,KAAAkM,IAAAL,GACAM,EAAAnF,EAAAiF,EAAAlF,EAAAgF,EACAK,EAAApF,EAAA+E,EAAAhF,EAAAkF,EACA,OAAAL,EAAA,IACA5E,MAAAoF,EACArF,OAAAoF,IAEAnF,MAAAmF,EACApF,OAAAqF,GA6bAC,EACArF,MAAA0C,EAAAG,aAAA7J,KAAA4J,IAAAF,EAAAnE,QAAA,GACAwB,OAAA2C,EAAAI,cAAA9J,KAAA4J,IAAAF,EAAAlE,QAAA,GACAoG,OAAAlC,EAAApE,QAAA,IAEAuE,EAAA6B,EAAA1E,MACA8C,EAAA4B,EAAA3E,OAEAC,EAAAiD,EAAAjD,OAAA6C,EAAAI,EAAAJ,cACA9C,EAAAkD,EAAAlD,QAAA+C,EAAAG,EAAAH,eACAG,EAAAlG,OAAAiD,EAAAiD,EAAAjD,OAAA,EACAiD,EAAA9F,MAAA4C,EAAAkD,EAAAlD,QAAA,EACAkD,EAAAjD,QACAiD,EAAAlD,SACAkD,EAAAjO,YAAA6N,EAAAC,EACAG,EAAAJ,eACAI,EAAAH,gBACAjB,KAAAwB,aAAA,OAGAJ,EAAAjD,MAAAiD,EAAAa,UAAAb,EAAAjD,MAAAiD,EAAAW,YACAX,EAAAlG,KAAAkG,EAAAC,UAGAD,EAAAlD,OAAAkD,EAAAe,WAAAf,EAAAlD,OAAAkD,EAAAY,aACAZ,EAAA9F,IAAA8F,EAAAE,QAGAF,EAAAjD,MAAAhH,KAAAoL,IAAApL,KAAAuJ,IAAAU,EAAAjD,MAAAiD,EAAAW,UAAAX,EAAAa,UACAb,EAAAlD,OAAA/G,KAAAoL,IAAApL,KAAAuJ,IAAAU,EAAAlD,OAAAkD,EAAAY,WAAAZ,EAAAe,WACAnC,KAAAwB,aAAA,MACAJ,EAAAlG,KAAA/D,KAAAoL,IAAApL,KAAAuJ,IAAAU,EAAAlG,KAAAkG,EAAAkB,SAAAlB,EAAAqB,SACArB,EAAA9F,IAAAnE,KAAAoL,IAAApL,KAAAuJ,IAAAU,EAAA9F,IAAA8F,EAAAoB,QAAApB,EAAAsB,QACAtB,EAAAC,QAAAD,EAAAlG,KACAkG,EAAAE,OAAAF,EAAA9F,IACAhE,EAAA0I,KAAAyD,OAA0BlN,GAC1B4H,MAAAiD,EAAAjD,MACAD,OAAAkD,EAAAlD,QACK3B,IACLK,WAAAwE,EAAAlG,KACA2B,WAAAuE,EAAA9F,QAEA0E,KAAA0D,YAAAf,GAEA3C,KAAAK,SAAAL,KAAAuB,SACAvB,KAAA2D,cAAA,OAGAD,YAAA,SAAAf,GACA,IAAAvB,EAAApB,KAAAoB,WACAP,EAAAb,KAAAa,UACA1C,EAAA0C,EAAAG,cAAAI,EAAAjD,MAAAiD,EAAAJ,cACA9C,EAAA2C,EAAAI,eAAAG,EAAAlD,OAAAkD,EAAAH,eACI1K,EAAMsK,GACV1C,QACAD,SACAhD,MAAAkG,EAAAjD,SAAA,EACA7C,KAAA8F,EAAAlD,UAAA,IAEA5G,EAAA0I,KAAA4D,MAAyBrN,GACzB4H,MAAA0C,EAAA1C,MACAD,OAAA2C,EAAA3C,QACK3B,GAAgBhG,GACrBqG,WAAAiE,EAAA3F,KACA2B,WAAAgE,EAAAvF,KACKuF,MAEL8B,GACA3C,KAAA6D,UAGA1D,YAAA,WACA,IAAA9G,EAAA2G,KAAA3G,QACA+H,EAAApB,KAAAoB,WACAjO,EAAAkG,EAAAlG,aAAAkG,EAAApG,mBACAe,EAAAwB,OAAA6D,EAAArF,eAAA,GACA6N,GACA1D,MAAAiD,EAAAjD,MACAD,OAAAkD,EAAAlD,QAGA/K,IACAiO,EAAAlD,OAAA/K,EAAAiO,EAAAjD,MACA0D,EAAA3D,OAAA2D,EAAA1D,MAAAhL,EAEA0O,EAAA1D,MAAA0D,EAAA3D,OAAA/K,GAIA6M,KAAA6B,cACA7B,KAAA2D,cAAA,MAEA9B,EAAA1D,MAAAhH,KAAAoL,IAAApL,KAAAuJ,IAAAmB,EAAA1D,MAAA0D,EAAAE,UAAAF,EAAAI,UACAJ,EAAA3D,OAAA/G,KAAAoL,IAAApL,KAAAuJ,IAAAmB,EAAA3D,OAAA2D,EAAAG,WAAAH,EAAAM,WAEAN,EAAA1D,MAAAhH,KAAAuJ,IAAAmB,EAAAE,SAAAF,EAAA1D,MAAAnK,GACA6N,EAAA3D,OAAA/G,KAAAuJ,IAAAmB,EAAAG,UAAAH,EAAA3D,OAAAlK,GACA6N,EAAA3G,KAAAkG,EAAAlG,MAAAkG,EAAAjD,MAAA0D,EAAA1D,OAAA,EACA0D,EAAAvG,IAAA8F,EAAA9F,KAAA8F,EAAAlD,OAAA2D,EAAA3D,QAAA,EACA2D,EAAAR,QAAAQ,EAAA3G,KACA2G,EAAAP,OAAAO,EAAAvG,IACA0E,KAAA8D,mBAA8BvN,KAASsL,IAEvC8B,aAAA,SAAAhC,EAAAC,GACA,IAAAvI,EAAA2G,KAAA3G,QACAoH,EAAAT,KAAAS,cACAW,EAAApB,KAAAoB,WACAS,EAAA7B,KAAA6B,YACAN,EAAAvB,KAAAuB,QACApO,EAAAkG,EAAAlG,YAEA,GAAAwO,EAAA,CACA,IAAA9M,EAAAW,OAAA6D,EAAAxE,kBAAA,EACAC,EAAAU,OAAA6D,EAAAvE,mBAAA,EACAiP,EAAAxC,EAAApK,KAAAoL,IAAA9B,EAAAtC,MAAAiD,EAAAjD,MAAAiD,EAAAjD,MAAAiD,EAAAlG,KAAAuF,EAAAtC,MAAAiD,EAAAlG,MAAAuF,EAAAtC,MACA6F,EAAAzC,EAAApK,KAAAoL,IAAA9B,EAAAvC,OAAAkD,EAAAlD,OAAAkD,EAAAlD,OAAAkD,EAAA9F,IAAAmF,EAAAvC,OAAAkD,EAAA9F,KAAAmF,EAAAvC,OAEArJ,EAAAsC,KAAAoL,IAAA1N,EAAA4L,EAAAtC,OACArJ,EAAAqC,KAAAoL,IAAAzN,EAAA2L,EAAAvC,QAEA/K,IACA0B,GAAAC,EACAA,EAAA3B,EAAA0B,EACAC,EAAAD,EAAA1B,EAEA0B,EAAAC,EAAA3B,EAES0B,EACTC,EAAAD,EAAA1B,EACS2B,IACTD,EAAAC,EAAA3B,GAGA6Q,EAAA7Q,EAAA4Q,EACAC,EAAAD,EAAA5Q,EAEA4Q,EAAAC,EAAA7Q,GAKA0O,EAAAE,SAAA5K,KAAAoL,IAAA1N,EAAAkP,GACAlC,EAAAG,UAAA7K,KAAAoL,IAAAzN,EAAAkP,GACAnC,EAAAI,SAAA8B,EACAlC,EAAAM,UAAA6B,EAGApC,IACAL,GACAM,EAAAS,QAAAnL,KAAAuJ,IAAA,EAAAU,EAAAlG,MACA2G,EAAAW,OAAArL,KAAAuJ,IAAA,EAAAU,EAAA9F,KACAuG,EAAAY,QAAAtL,KAAAoL,IAAA9B,EAAAtC,MAAAiD,EAAAlG,KAAAkG,EAAAjD,OAAA0D,EAAA1D,MACA0D,EAAAa,OAAAvL,KAAAoL,IAAA9B,EAAAvC,OAAAkD,EAAA9F,IAAA8F,EAAAlD,QAAA2D,EAAA3D,SAEA2D,EAAAS,QAAA,EACAT,EAAAW,OAAA,EACAX,EAAAY,QAAAhC,EAAAtC,MAAA0D,EAAA1D,MACA0D,EAAAa,OAAAjC,EAAAvC,OAAA2D,EAAA3D,UAIAoC,cAAA,WACA,IAAAjH,EAAA2G,KAAA3G,QACAoH,EAAAT,KAAAS,cACAoB,EAAA7B,KAAA6B,aAEAA,EAAA1D,MAAA0D,EAAAI,UAAAJ,EAAA1D,MAAA0D,EAAAE,YACAF,EAAA3G,KAAA2G,EAAAR,UAGAQ,EAAA3D,OAAA2D,EAAAM,WAAAN,EAAA3D,OAAA2D,EAAAG,aACAH,EAAAvG,IAAAuG,EAAAP,QAGAO,EAAA1D,MAAAhH,KAAAoL,IAAApL,KAAAuJ,IAAAmB,EAAA1D,MAAA0D,EAAAE,UAAAF,EAAAI,UACAJ,EAAA3D,OAAA/G,KAAAoL,IAAApL,KAAAuJ,IAAAmB,EAAA3D,OAAA2D,EAAAG,WAAAH,EAAAM,WACAnC,KAAA2D,cAAA,MACA9B,EAAA3G,KAAA/D,KAAAoL,IAAApL,KAAAuJ,IAAAmB,EAAA3G,KAAA2G,EAAAS,SAAAT,EAAAY,SACAZ,EAAAvG,IAAAnE,KAAAoL,IAAApL,KAAAuJ,IAAAmB,EAAAvG,IAAAuG,EAAAW,QAAAX,EAAAa,QACAb,EAAAR,QAAAQ,EAAA3G,KACA2G,EAAAP,OAAAO,EAAAvG,IAEAjC,EAAApF,SAAAoF,EAAA7E,gBAEAsE,EAAAkH,KAAAiE,KAAA7R,EAAAyP,EAAA1D,OAAAsC,EAAAtC,OAAA0D,EAAA3D,QAAAuC,EAAAvC,OA53CA,OAFA,OAi4CA5G,EAAA0I,KAAAkE,QAA2B3N,GAC3B4H,MAAA0D,EAAA1D,MACAD,OAAA2D,EAAA3D,QACK3B,IACLK,WAAAiF,EAAA3G,KACA2B,WAAAgF,EAAAvG,QAGA0E,KAAAK,SAAAL,KAAAuB,SACAvB,KAAAwB,aAAA,MAGAxB,KAAAmE,UACAnE,KAAA6D,UAGAA,OAAA,WACA7D,KAAA3M,UACAiH,GAAA0F,KAAAzI,QAv3CA,OAu3CAyI,KAAAtH,aAIArF,IACA+Q,YAAA,WACA,IAAAC,EAAArE,KAAAqE,YACAhR,EAAA2M,KAAA3G,QAAAhG,QACAwI,EAAAwI,EAAArE,KAAAsE,eAAAtE,KAAAnE,IACA+H,EAAAhJ,SAAA2J,cAAA,OAUA,GARAF,IACAT,EAAAS,eAGAT,EAAAY,IAAA3I,EACAmE,KAAAyE,QAAAC,YAAAd,GACA5D,KAAA2E,aAAAf,EAEAvQ,EAAA,CAIA,IAAAuR,EAAAvR,EAEA,iBAAAA,EACAuR,EAAA5E,KAAAzI,QAAAsN,cAAAC,iBAAAzR,GACKA,EAAA0R,gBACLH,GAAAvR,IAGA2M,KAAA4E,WACAxO,EAAAwO,EAAA,SAAAI,GACA,IAAAC,EAAArK,SAAA2J,cAAA,OAEAzL,EAAAkM,EAAA3S,GACA8L,MAAA6G,EAAArE,YACAzC,OAAA8G,EAAApE,aACAsE,KAAAF,EAAAG,YAGAd,IACAY,EAAAZ,eAGAY,EAAAT,IAAA3I,EAQAoJ,EAAAxN,MAAA2N,QAAA,0KACAJ,EAAAG,UAAA,GACAH,EAAAN,YAAAO,OAGAI,aAAA,WACAjP,EAAA4J,KAAA4E,SAAA,SAAArN,GACA,IAAAnE,EAAAsF,EAAAnB,EAAAlF,GACAiF,EAAAC,GACA4G,MAAA/K,EAAA+K,MACAD,OAAA9K,EAAA8K,SAEA3G,EAAA4N,UAAA/R,EAAA8R,KAzjCA,SAAA3N,EAAAoB,GACA,GAAA9C,EAAA0B,EAAAoB,IACA,WACApB,EAAAoB,GACK,MAAAzC,GACLqB,EAAAoB,QAAA1B,OAEG,GAAAM,EAAAqB,QAEH,WACArB,EAAAqB,QAAAD,GACK,MAAAzC,GACLqB,EAAAqB,QAAAD,QAAA1B,OAGAM,EAAA+N,gBAAA,QAAAzT,OAAA2G,EAAAG,KA2iCA4M,CAAAhO,EAAAlF,MAGAgB,QAAA,WACA,IAAAwN,EAAAb,KAAAa,UACAO,EAAApB,KAAAoB,WACAS,EAAA7B,KAAA6B,YACA2D,EAAA3D,EAAA1D,MACAsH,EAAA5D,EAAA3D,OACAC,EAAA0C,EAAA1C,MACAD,EAAA2C,EAAA3C,OACAhD,EAAA2G,EAAA3G,KAAAkG,EAAAlG,KAAA2F,EAAA3F,KACAI,EAAAuG,EAAAvG,IAAA8F,EAAA9F,IAAAuF,EAAAvF,IAEA0E,KAAAK,UAAAL,KAAAmE,WAIA7M,EAAA0I,KAAA2E,aAAgCpO,GAChC4H,QACAD,UACK3B,GAAgBhG,GACrBqG,YAAA1B,EACA2B,YAAAvB,GACKuF,MACLzK,EAAA4J,KAAA4E,SAAA,SAAArN,GACA,IAAAnE,EAAAsF,EAAAnB,EAAAlF,GACAqT,EAAAtS,EAAA+K,MACAwH,EAAAvS,EAAA8K,OACAoF,EAAAoC,EACAnC,EAAAoC,EACAC,EAAA,EAEAJ,IAEAjC,EAAAkC,GADAG,EAAAF,EAAAF,IAIAC,GAAAlC,EAAAoC,IAEArC,EAAAkC,GADAI,EAAAD,EAAAF,GAEAlC,EAAAoC,GAGArO,EAAAC,GACA4G,MAAAmF,EACApF,OAAAqF,IAEAjM,EAAAC,EAAAsO,qBAAA,UAAuDtP,GACvD4H,QAAAyH,EACA1H,SAAA0H,GACOrJ,GAAgBhG,GACvBqG,YAAA1B,EAAA0K,EACA/I,YAAAvB,EAAAsK,GACO/E,WAKPiF,IACAC,KAAA,WACA,IAAAxO,EAAAyI,KAAAzI,QACA8B,EAAA2G,KAAA3G,QACAmH,EAAAR,KAAAQ,QAEArK,EAAAkD,EAAAnE,YACA8E,GAAAzC,EAx/CA,YAw/CA8B,EAAAnE,WAGAiB,EAAAkD,EAAAlE,WACA6E,GAAAzC,EA7/CA,WA6/CA8B,EAAAlE,UAGAgB,EAAAkD,EAAAjE,UACA4E,GAAAzC,EAlgDA,UAkgDA8B,EAAAjE,SAGAe,EAAAkD,EAAAhE,OACA2E,GAAAzC,EAvgDA,OAugDA8B,EAAAhE,MAGAc,EAAAkD,EAAA/D,OACA0E,GAAAzC,EAhgDA,OAggDA8B,EAAA/D,MAGA0E,GAAAwG,EAAAlO,EAAA0N,KAAAgG,YAAAhG,KAAAiG,UAAAF,KAAA/F,OAEA3G,EAAAjF,UAAAiF,EAAA/E,aACA0F,GAAAwG,EAvgDA,kCAugDAR,KAAAkG,QAAAlG,KAAAmG,MAAAJ,KAAA/F,OAGA3G,EAAA3E,0BACAsF,GAAAwG,EAjhDA,WAihDAR,KAAAoG,WAAApG,KAAAqG,SAAAN,KAAA/F,OAGAhG,GAAAzC,EAAAsN,cAAArS,EAAAwN,KAAAsG,WAAAtG,KAAAuG,SAAAR,KAAA/F,OACAhG,GAAAzC,EAAAsN,cAAApS,EAAAuN,KAAAwG,UAAAxG,KAAAyG,QAAAV,KAAA/F,OAEA3G,EAAA/F,YACA0G,GAAAtI,OAnhDA,SAmhDAsO,KAAA0G,SAAA1G,KAAA2G,OAAAZ,KAAA/F,QAGA4G,OAAA,WACA,IAAArP,EAAAyI,KAAAzI,QACA8B,EAAA2G,KAAA3G,QACAmH,EAAAR,KAAAQ,QAEArK,EAAAkD,EAAAnE,YACAwE,GAAAnC,EAliDA,YAkiDA8B,EAAAnE,WAGAiB,EAAAkD,EAAAlE,WACAuE,GAAAnC,EAviDA,WAuiDA8B,EAAAlE,UAGAgB,EAAAkD,EAAAjE,UACAsE,GAAAnC,EA5iDA,UA4iDA8B,EAAAjE,SAGAe,EAAAkD,EAAAhE,OACAqE,GAAAnC,EAjjDA,OAijDA8B,EAAAhE,MAGAc,EAAAkD,EAAA/D,OACAoE,GAAAnC,EA1iDA,OA0iDA8B,EAAA/D,MAGAoE,GAAA8G,EAAAlO,EAAA0N,KAAAgG,aAEA3M,EAAAjF,UAAAiF,EAAA/E,aACAoF,GAAA8G,EAjjDA,kCAijDAR,KAAAkG,SAGA7M,EAAA3E,0BACAgF,GAAA8G,EA3jDA,WA2jDAR,KAAAoG,YAGA1M,GAAAnC,EAAAsN,cAAArS,EAAAwN,KAAAsG,YACA5M,GAAAnC,EAAAsN,cAAApS,EAAAuN,KAAAwG,WAEAnN,EAAA/F,YACAoG,GAAAhI,OA7jDA,SA6jDAsO,KAAA0G,YAKAG,IACAF,OAAA,WACA,IAAAtN,EAAA2G,KAAA3G,QACAkH,EAAAP,KAAAO,UACAE,EAAAT,KAAAS,cACA1L,EAAAS,OAAA6D,EAAAtE,oBAAA,IACAC,EAAAQ,OAAA6D,EAAArE,qBAAA,IAEA,KAAAgL,KAAAmE,UAAA1D,EAAAtC,OAAApJ,GAAA0L,EAAAvC,QAAAlJ,GAAA,CAIA,IAGAoM,EACAS,EAJA+D,EAAArF,EAAAI,YAAAF,EAAAtC,MAEA,OAAAyH,GAAArF,EAAAK,eAAAH,EAAAvC,OAIA7E,EAAA9F,UACA6N,EAAApB,KAAA8G,gBACAjF,EAAA7B,KAAA+G,kBAGA/G,KAAAD,SAEA1G,EAAA9F,UACAyM,KAAAgH,cAAA5Q,EAAAgL,EAAA,SAAA6F,EAAA9W,GACAiR,EAAAjR,GAAA8W,EAAArB,KAEA5F,KAAAkH,eAAA9Q,EAAAyL,EAAA,SAAAoF,EAAA9W,GACA0R,EAAA1R,GAAA8W,EAAArB,QAKAS,SAAA,WAx3CA,IAAA9O,EAAA5B,EAy3CAqK,KAAAmE,UAjnDA,SAinDAnE,KAAA3G,QAAArG,UAIAgN,KAAAmH,aA73CA5P,EA63CAyI,KAAAoH,QA73CAzR,EA63CA/D,GA53CA2F,EAAAM,UAAAN,EAAAM,UAAAwP,SAAA1R,GAAA4B,EAAAQ,UAAAE,QAAAtC,IAAA,GA1PA,OADA,UAynDAwQ,MAAA,SAAAjQ,GACA,IAAAoR,EAAAtH,KAEA4F,EAAApQ,OAAAwK,KAAA3G,QAAA9E,iBAAA,GACAgT,EAAA,EAEAvH,KAAAmE,WAIAjO,EAAAsR,iBAEAxH,KAAAyH,WAIAzH,KAAAyH,UAAA,EACAC,WAAA,WACAJ,EAAAG,UAAA,GACK,IAELvR,EAAAyR,OACAJ,EAAArR,EAAAyR,OAAA,OACKzR,EAAA0R,WACLL,GAAArR,EAAA0R,WAAA,IACK1R,EAAAuE,SACL8M,EAAArR,EAAAuE,OAAA,QAGAuF,KAAA1K,MAAAiS,EAAA3B,EAAA1P,MAEA+P,UAAA,SAAA/P,GACA,IAAA8J,KAAAmE,SAAA,CAIA,IAEA0D,EAFAxO,EAAA2G,KAAA3G,QACAyO,EAAA9H,KAAA8H,SAGA5R,EAAA6R,eAEA3R,EAAAF,EAAA6R,eAAA,SAAAC,GACAF,EAAAE,EAAAC,YAAA7K,GAAA4K,KAIAF,EAAA5R,EAAAgS,WAAA,GAAA9K,GAAAlH,GAIA2R,EADApX,OAAA6F,KAAAwR,GAAA1X,OAAA,GAAAiJ,EAAAjF,UAAAiF,EAAAhF,YAhsDA,OAmsDAqE,EAAAxC,EAAAjG,OAAAmC,GAGAM,EAAAwE,KAAA2Q,KAOK,IAHLvN,GAAA0F,KAAAzI,QA9qDA,aA+qDA4Q,cAAAjS,EACA2R,aAMA3R,EAAAsR,iBACAxH,KAAA6H,SACA7H,KAAAoI,UAAA,EAttDA,SAwtDAP,IACA7H,KAAAoI,UAAA,EACAzQ,EAAAqI,KAAAoH,QAAAlV,OAGAqU,SAAA,SAAArQ,GACA,IAAA2R,EAAA7H,KAAA6H,OAEA,IAAA7H,KAAAmE,UAAA0D,EAAA,CAIA,IAAAC,EAAA9H,KAAA8H,SACA5R,EAAAsR,kBAKK,IAHLlN,GAAA0F,KAAAzI,QA1sDA,YA2sDA4Q,cAAAjS,EACA2R,aAKA3R,EAAA6R,eACA3R,EAAAF,EAAA6R,eAAA,SAAAC,GAEQzR,EAAMuR,EAAAE,EAAAC,gBAAiC7K,GAAA4K,GAAA,MAGzCzR,EAAMuR,EAAA5R,EAAAgS,WAAA,OAAiC9K,GAAAlH,GAAA,IAG7C8J,KAAAqI,OAAAnS,MAEAuQ,QAAA,SAAAvQ,GACA,IAAA8J,KAAAmE,SAAA,CAIA,IAAA0D,EAAA7H,KAAA6H,OACAC,EAAA9H,KAAA8H,SAEA5R,EAAA6R,eACA3R,EAAAF,EAAA6R,eAAA,SAAAC,UACAF,EAAAE,EAAAC,qBAGAH,EAAA5R,EAAAgS,WAAA,GAGAL,IAIA3R,EAAAsR,iBAEA/W,OAAA6F,KAAAwR,GAAA1X,SACA4P,KAAA6H,OAAA,IAGA7H,KAAAoI,WACApI,KAAAoI,UAAA,EACA/P,EAAA2H,KAAAoH,QAAAlV,EAAA8N,KAAAK,SAAAL,KAAA3G,QAAA3F,QAGA4G,GAAA0F,KAAAzI,QA5vDA,WA6vDA4Q,cAAAjS,EACA2R,eAKAQ,IACAA,OAAA,SAAAnS,GACA,IAkBAiJ,EAlBA9F,EAAA2G,KAAA3G,QACA+H,EAAApB,KAAAoB,WACAX,EAAAT,KAAAS,cACAoB,EAAA7B,KAAA6B,YACAiG,EAAA9H,KAAA8H,SACAD,EAAA7H,KAAA6H,OACA1U,EAAAkG,EAAAlG,YACA+H,EAAA2G,EAAA3G,KACAI,EAAAuG,EAAAvG,IACA6C,EAAA0D,EAAA1D,MACAD,EAAA2D,EAAA3D,OACAoK,EAAApN,EAAAiD,EACAoK,EAAAjN,EAAA4C,EACAoE,EAAA,EACAE,EAAA,EACAP,EAAAxB,EAAAtC,MACAgE,EAAA1B,EAAAvC,OACAsK,GAAA,GAGArV,GAAA+C,EAAAuS,WACAtV,EAAAgL,GAAAD,EAAAC,EAAAD,EAAA,GAGA8B,KAAAuB,UACAe,EAAAT,EAAAS,QACAE,EAAAX,EAAAW,OACAP,EAAAK,EAAAnL,KAAAoL,IAAA9B,EAAAtC,MAAAiD,EAAAjD,MAAAiD,EAAAlG,KAAAkG,EAAAjD,OACAgE,EAAAK,EAAArL,KAAAoL,IAAA9B,EAAAvC,OAAAkD,EAAAlD,OAAAkD,EAAA9F,IAAA8F,EAAAlD,SAGA,IAAAwK,EAAAZ,EAAArX,OAAA6F,KAAAwR,GAAA,IACAa,GACAC,EAAAF,EAAAhL,KAAAgL,EAAA9K,OACAiL,EAAAH,EAAA/K,KAAA+K,EAAA7K,QAGAiL,EAAA,SAAAC,GACA,OAAAA,GACA,IAr0DA,IAs0DAT,EAAAK,EAAAC,EAAA3G,IACA0G,EAAAC,EAAA3G,EAAAqG,GAGA,MAEA,IA30DA,IA40DApN,EAAAyN,EAAAC,EAAAtG,IACAqG,EAAAC,EAAAtG,EAAApH,GAGA,MAEA,IAh1DA,IAi1DAI,EAAAqN,EAAAE,EAAArG,IACAmG,EAAAE,EAAArG,EAAAlH,GAGA,MAEA,IAx1DA,IAy1DAiN,EAAAI,EAAAE,EAAA1G,IACAwG,EAAAE,EAAA1G,EAAAoG,KASA,OAAAV,GAEA,IA32DA,MA42DA3M,GAAAyN,EAAAC,EACAtN,GAAAqN,EAAAE,EACA,MAGA,IA72DA,IA82DA,GAAAF,EAAAC,GAAA,IAAAN,GAAArG,GAAA9O,IAAAmI,GAAAkH,GAAA+F,GAAApG,IAAA,CACAqG,GAAA,EACA,MAGAM,EAn3DA,MAo3DA3K,GAAAwK,EAAAC,GAEA,IACAf,EAt3DA,IAw3DA3M,GADAiD,MAIAhL,IACA+K,EAAAC,EAAAhL,EACAmI,IAAAuG,EAAA3D,UAAA,GAGA,MAEA,IAh4DA,IAi4DA,GAAAyK,EAAAE,GAAA,IAAAvN,GAAAkH,GAAArP,IAAA+H,GAAAoH,GAAAgG,GAAArG,IAAA,CACAuG,GAAA,EACA,MAGAM,EAt4DA,KAu4DA5K,GAAAyK,EAAAE,EACAvN,GAAAqN,EAAAE,EAEA3K,EAAA,IACA2J,EA54DA,IA84DAvM,GADA4C,MAIA/K,IACAgL,EAAAD,EAAA/K,EACA+H,IAAA2G,EAAA1D,SAAA,GAGA,MAEA,IAz5DA,IA05DA,GAAAwK,EAAAC,GAAA,IAAA1N,GAAAoH,GAAAnP,IAAAmI,GAAAkH,GAAA+F,GAAApG,IAAA,CACAqG,GAAA,EACA,MAGAM,EA/5DA,KAg6DA3K,GAAAwK,EAAAC,EACA1N,GAAAyN,EAAAC,EAEAzK,EAAA,IACA0J,EAr6DA,IAu6DA3M,GADAiD,MAIAhL,IACA+K,EAAAC,EAAAhL,EACAmI,IAAAuG,EAAA3D,UAAA,GAGA,MAEA,IA/6DA,IAg7DA,GAAAyK,EAAAE,GAAA,IAAAN,GAAApG,GAAAhP,IAAA+H,GAAAoH,GAAAgG,GAAArG,IAAA,CACAuG,GAAA,EACA,MAGAM,EAr7DA,MAs7DA5K,GAAAyK,EAAAE,GAEA,IACAhB,EAx7DA,IA07DAvM,GADA4C,MAIA/K,IACAgL,EAAAD,EAAA/K,EACA+H,IAAA2G,EAAA1D,SAAA,GAGA,MAEA,IAn8DA,KAo8DA,GAAAhL,EAAA,CACA,GAAAwV,EAAAE,GAAA,IAAAvN,GAAAkH,GAAA8F,GAAArG,GAAA,CACAuG,GAAA,EACA,MAGAM,EA38DA,KA48DA5K,GAAAyK,EAAAE,EACAvN,GAAAqN,EAAAE,EACA1K,EAAAD,EAAA/K,OAEA2V,EAh9DA,KAi9DAA,EAp9DA,KAs9DAH,EAAAC,GAAA,EACAN,EAAArG,EACA9D,GAAAwK,EAAAC,EACaD,EAAAE,GAAA,GAAAvN,GAAAkH,IACbgG,GAAA,GAGArK,GAAAwK,EAAAC,EAGAD,EAAAE,GAAA,EACAvN,EAAAkH,IACAtE,GAAAyK,EAAAE,EACAvN,GAAAqN,EAAAE,IAGA3K,GAAAyK,EAAAE,EACAvN,GAAAqN,EAAAE,GAIA1K,EAAA,GAAAD,EAAA,GACA2J,EAr+DA,KAw+DAvM,GAFA4C,KAGAhD,GAFAiD,MAGSA,EAAA,GACT0J,EA7+DA,KA++DA3M,GADAiD,MAESD,EAAA,IACT2J,EAh/DA,KAk/DAvM,GADA4C,MAIA,MAEA,IAx/DA,KAy/DA,GAAA/K,EAAA,CACA,GAAAwV,EAAAE,GAAA,IAAAvN,GAAAkH,GAAAtH,GAAAoH,GAAA,CACAkG,GAAA,EACA,MAGAM,EAjgEA,KAkgEA5K,GAAAyK,EAAAE,EACAvN,GAAAqN,EAAAE,EACA1K,EAAAD,EAAA/K,EACA+H,GAAA2G,EAAA1D,aAEA2K,EAvgEA,KAwgEAA,EA1gEA,KA4gEAH,EAAAC,GAAA,EACA1N,EAAAoH,GACAnE,GAAAwK,EAAAC,EACA1N,GAAAyN,EAAAC,GACaD,EAAAE,GAAA,GAAAvN,GAAAkH,IACbgG,GAAA,IAGArK,GAAAwK,EAAAC,EACA1N,GAAAyN,EAAAC,GAGAD,EAAAE,GAAA,EACAvN,EAAAkH,IACAtE,GAAAyK,EAAAE,EACAvN,GAAAqN,EAAAE,IAGA3K,GAAAyK,EAAAE,EACAvN,GAAAqN,EAAAE,GAIA1K,EAAA,GAAAD,EAAA,GACA2J,EA/hEA,KAkiEAvM,GAFA4C,KAGAhD,GAFAiD,MAGSA,EAAA,GACT0J,EAviEA,KAyiEA3M,GADAiD,MAESD,EAAA,IACT2J,EAxiEA,KA0iEAvM,GADA4C,MAIA,MAEA,IA/iEA,KAgjEA,GAAA/K,EAAA,CACA,GAAAwV,EAAAC,GAAA,IAAA1N,GAAAoH,GAAAiG,GAAApG,GAAA,CACAqG,GAAA,EACA,MAGAM,EA5jEA,KA6jEA3K,GAAAwK,EAAAC,EACA1N,GAAAyN,EAAAC,EACA1K,EAAAC,EAAAhL,OAEA2V,EAhkEA,KAikEAA,EAlkEA,KAokEAH,EAAAC,GAAA,EACA1N,EAAAoH,GACAnE,GAAAwK,EAAAC,EACA1N,GAAAyN,EAAAC,GACaD,EAAAE,GAAA,GAAAN,GAAApG,IACbqG,GAAA,IAGArK,GAAAwK,EAAAC,EACA1N,GAAAyN,EAAAC,GAGAD,EAAAE,GAAA,EACAN,EAAApG,IACAjE,GAAAyK,EAAAE,GAGA3K,GAAAyK,EAAAE,EAIA1K,EAAA,GAAAD,EAAA,GACA2J,EAvlEA,KA0lEAvM,GAFA4C,KAGAhD,GAFAiD,MAGSA,EAAA,GACT0J,EA3lEA,KA6lEA3M,GADAiD,MAESD,EAAA,IACT2J,EAhmEA,KAkmEAvM,GADA4C,MAIA,MAEA,IAtmEA,KAumEA,GAAA/K,EAAA,CACA,GAAAwV,EAAAC,GAAA,IAAAN,GAAArG,GAAAsG,GAAApG,GAAA,CACAqG,GAAA,EACA,MAGAM,EAnnEA,KAqnEA5K,GADAC,GAAAwK,EAAAC,GACAzV,OAEA2V,EArnEA,KAsnEAA,EAxnEA,KA0nEAH,EAAAC,GAAA,EACAN,EAAArG,EACA9D,GAAAwK,EAAAC,EACaD,EAAAE,GAAA,GAAAN,GAAApG,IACbqG,GAAA,GAGArK,GAAAwK,EAAAC,EAGAD,EAAAE,GAAA,EACAN,EAAApG,IACAjE,GAAAyK,EAAAE,GAGA3K,GAAAyK,EAAAE,EAIA1K,EAAA,GAAAD,EAAA,GACA2J,EAzoEA,KA4oEAvM,GAFA4C,KAGAhD,GAFAiD,MAGSA,EAAA,GACT0J,EA7oEA,KA+oEA3M,GADAiD,MAESD,EAAA,IACT2J,EAppEA,KAspEAvM,GADA4C,MAIA,MAGA,IAlqEA,OAmqEA8B,KAAAgJ,KAAAL,EAAAC,EAAAD,EAAAE,GACAL,GAAA,EACA,MAGA,IAvqEA,OAwqEAxI,KAAA1K,KAziDA,SAAAwS,GACA,IAAAmB,EAAkB1S,KAASuR,GAC3BoB,KAiBA,OAhBA9S,EAAA0R,EAAA,SAAAY,EAAAR,UACAe,EAAAf,GACA9R,EAAA6S,EAAA,SAAAE,GACA,IAAAC,EAAAjS,KAAA4J,IAAA2H,EAAA9K,OAAAuL,EAAAvL,QACAyL,EAAAlS,KAAA4J,IAAA2H,EAAA7K,OAAAsL,EAAAtL,QACAyL,EAAAnS,KAAA4J,IAAA2H,EAAAhL,KAAAyL,EAAAzL,MACA6L,EAAApS,KAAA4J,IAAA2H,EAAA/K,KAAAwL,EAAAxL,MACA6L,EAAArS,KAAAsS,KAAAL,IAAAC,KAEAzD,GADAzO,KAAAsS,KAAAH,IAAAC,KACAC,KACAN,EAAAnM,KAAA6I,OAGAsD,EAAAQ,KAAA,SAAAC,EAAAC,GACA,OAAAzS,KAAA4J,IAAA4I,GAAAxS,KAAA4J,IAAA6I,KAEAV,EAAA,GAshDAW,CAAA/B,GAAA5R,GACAsS,GAAA,EACA,MAGA,IA/qEA,OAgrEA,IAAAG,EAAAC,IAAAD,EAAAE,EAAA,CACAL,GAAA,EACA,MAGArJ,EAAApE,GAAAiF,KAAAQ,SACAtF,EAAAwN,EAAA9K,OAAAuB,EAAAjE,KACAI,EAAAoN,EAAA7K,OAAAsB,EAAA7D,IACA6C,EAAA0D,EAAAE,SACA7D,EAAA2D,EAAAG,UAEA2G,EAAAC,EAAA,EACAf,EAAAc,EAAAE,EAAA,EAnrEA,KAFA,KAsrESF,EAAAC,EAAA,IACT1N,GAAAiD,EACA0J,EAAAc,EAAAE,EAAA,EArrEA,KAFA,MA0rEAF,EAAAE,EAAA,IACAvN,GAAA4C,GAIA8B,KAAAK,UACAnI,EAAA8H,KAAAkE,QAAAnS,GACAiO,KAAAK,SAAA,EAEAL,KAAAuB,SACAvB,KAAA2D,cAAA,OASA6E,IACA3G,EAAA1D,QACA0D,EAAA3D,SACA2D,EAAA3G,OACA2G,EAAAvG,MACA0E,KAAA6H,SACA7H,KAAAM,iBAIAlK,EAAA0R,EAAA,SAAAgC,GACAA,EAAAlM,OAAAkM,EAAApM,KACAoM,EAAAjM,OAAAiM,EAAAnM,SAKAoM,IAEA1U,KAAA,WAaA,OAZA2K,KAAA/K,OAAA+K,KAAAK,SAAAL,KAAAmE,WACAnE,KAAAK,SAAA,EACAL,KAAA2D,cAAA,MAEA3D,KAAA3G,QAAA3F,OACAiE,EAAAqI,KAAAoH,QAAAlV,GAGAgG,EAAA8H,KAAAkE,QAAAnS,GACAiO,KAAAkH,eAAAlH,KAAA8D,qBAGA9D,MAGAgK,MAAA,WAYA,OAXAhK,KAAA/K,QAAA+K,KAAAmE,WACAnE,KAAAa,UAAuBtK,KAASyJ,KAAAyB,kBAChCzB,KAAAoB,WAAwB7K,KAASyJ,KAAA0B,mBACjC1B,KAAA6B,YAAyBtL,KAASyJ,KAAA8D,oBAClC9D,KAAAI,eAEAJ,KAAAK,SACAL,KAAAM,iBAIAN,MAGAiK,MAAA,WAiBA,OAhBAjK,KAAAK,UAAAL,KAAAmE,WACM5N,EAAMyJ,KAAA6B,aACZ3G,KAAA,EACAI,IAAA,EACA6C,MAAA,EACAD,OAAA,IAEA8B,KAAAK,SAAA,EACAL,KAAAM,gBACAN,KAAAwB,aAAA,MAEAxB,KAAAI,eACAlI,EAAA8H,KAAAoH,QAAAlV,GACAyF,EAAAqI,KAAAkE,QAAAnS,IAGAiO,MASA5H,QAAA,SAAAyD,GACA,IAAAqO,EAAAxT,UAAAtG,OAAA,QAAA6G,IAAAP,UAAA,IAAAA,UAAA,GA4BA,OA1BAsJ,KAAAmE,UAAAtI,IACAmE,KAAAmK,QACAnK,KAAAzI,QAAAiN,IAAA3I,GAGAqO,GACAlK,KAAAnE,MACAmE,KAAA4D,MAAAY,IAAA3I,EAEAmE,KAAA/K,QACA+K,KAAA2E,aAAAH,IAAA3I,EACAzF,EAAA4J,KAAA4E,SAAA,SAAArN,GACAA,EAAAsO,qBAAA,UAAArB,IAAA3I,OAIAmE,KAAAmK,QACAnK,KAAAoK,UAAA,GAGApK,KAAA3G,QAAAjG,KAAA,KACA4M,KAAAqK,WACArK,KAAAsK,KAAAzO,KAIAmE,MAGAuK,OAAA,WAMA,OALAvK,KAAA/K,OAAA+K,KAAAmE,WACAnE,KAAAmE,UAAA,EACAjM,EAAA8H,KAAAQ,QAAA1O,IAGAkO,MAGAwK,QAAA,WAMA,OALAxK,KAAA/K,QAAA+K,KAAAmE,WACAnE,KAAAmE,UAAA,EACAxM,EAAAqI,KAAAQ,QAAA1O,IAGAkO,MAOAyK,QAAA,WACA,IAAAlT,EAAAyI,KAAAzI,QAEA,OAAAA,EAAA,SAIAA,EAAA,aAAAN,EAEA+I,KAAAmK,OAAAnK,KAAAoK,WACA7S,EAAAiN,IAAAxE,KAAA0K,aAGA1K,KAAAqK,WACArK,MAVAA,MAmBAgJ,KAAA,SAAA2B,GACA,IAAAC,EAAAlU,UAAAtG,OAAA,QAAA6G,IAAAP,UAAA,GAAAA,UAAA,GAAAiU,EACAE,EAAA7K,KAAAoB,WACAlG,EAAA2P,EAAA3P,KACAI,EAAAuP,EAAAvP,IACA,OAAA0E,KAAA8K,OAAAlV,EAAA+U,KAAAzP,EAAA1F,OAAAmV,GAAA/U,EAAAgV,KAAAtP,EAAA9F,OAAAoV,KASAE,OAAA,SAAAlC,GACA,IAAAC,EAAAnS,UAAAtG,OAAA,QAAA6G,IAAAP,UAAA,GAAAA,UAAA,GAAAkS,EACAxH,EAAApB,KAAAoB,WACAuB,GAAA,EAoBA,OAnBAiG,EAAApT,OAAAoT,GACAC,EAAArT,OAAAqT,GAEA7I,KAAA/K,QAAA+K,KAAAmE,UAAAnE,KAAA3G,QAAApF,UACAyB,EAAAkT,KACAxH,EAAAlG,KAAA0N,EACAjG,GAAA,GAGAjN,EAAAmT,KACAzH,EAAA9F,IAAAuN,EACAlG,GAAA,GAGAA,GACA3C,KAAAI,cAAA,IAIAJ,MASA1K,KAAA,SAAAsQ,EAAAmF,GACA,IAAA3J,EAAApB,KAAAoB,WASA,OALAwE,GAHAA,EAAApQ,OAAAoQ,IAEA,EACA,KAAAA,GAEA,EAAAA,EAGA5F,KAAAgL,OAAA5J,EAAAjD,MAAAyH,EAAAxE,EAAAJ,aAAA,KAAA+J,IAUAC,OAAA,SAAApF,EAAAqF,EAAAF,GACA,IAAA1R,EAAA2G,KAAA3G,QACA+H,EAAApB,KAAAoB,WACAjD,EAAAiD,EAAAjD,MACAD,EAAAkD,EAAAlD,OACA8C,EAAAI,EAAAJ,aACAC,EAAAG,EAAAH,cAGA,IAFA2E,EAAApQ,OAAAoQ,KAEA,GAAA5F,KAAA/K,QAAA+K,KAAAmE,UAAA9K,EAAAjF,SAAA,CACA,IAAAkP,EAAAtC,EAAA4E,EACArC,EAAAtC,EAAA2E,EAEA,IAIO,IAJPtL,GAAA0F,KAAAzI,QAv5EA,QAw5EAqO,QACAsF,SAAA/M,EAAA6C,EACAmH,cAAA4C,IAEA,OAAA/K,KAGA,GAAA+K,EAAA,CACA,IAAAjD,EAAA9H,KAAA8H,SACA3I,EAAApE,GAAAiF,KAAAQ,SACA5M,EAAAkU,GAAArX,OAAA6F,KAAAwR,GAAA1X,OAzxDA,SAAA0X,GACA,IAAAvK,EAAA,EACAC,EAAA,EACA2N,EAAA,EAUA,OATA/U,EAAA0R,EAAA,SAAAsD,GACA,IAAAxN,EAAAwN,EAAAxN,OACAC,EAAAuN,EAAAvN,OACAN,GAAAK,EACAJ,GAAAK,EACAsN,GAAA,KAKA5N,MAHAA,GAAA4N,EAIA3N,MAHAA,GAAA2N,GA6wDAE,CAAAvD,IACAvK,MAAAwN,EAAAxN,MACAC,MAAAuN,EAAAvN,OAGA4D,EAAAlG,OAAAoI,EAAAnF,KAAAvK,EAAA2J,MAAA4B,EAAAjE,KAAAkG,EAAAlG,MAAAiD,GACAiD,EAAA9F,MAAAiI,EAAArF,KAAAtK,EAAA4J,MAAA2B,EAAA7D,IAAA8F,EAAA9F,KAAA4C,QACOlI,EAAAiV,IAAAvV,EAAAuV,EAAArC,IAAAlT,EAAAuV,EAAApC,IACPzH,EAAAlG,OAAAoI,EAAAnF,KAAA8M,EAAArC,EAAAxH,EAAAlG,MAAAiD,GACAiD,EAAA9F,MAAAiI,EAAArF,KAAA+M,EAAApC,EAAAzH,EAAA9F,KAAA4C,KAGAkD,EAAAlG,OAAAoI,EAAAnF,GAAA,EACAiD,EAAA9F,MAAAiI,EAAArF,GAAA,GAGAkD,EAAAjD,MAAAmF,EACAlC,EAAAlD,OAAAqF,EACAvD,KAAAI,cAAA,GAGA,OAAAJ,MAQAvD,OAAA,SAAAsG,GACA,OAAA/C,KAAAsL,UAAAtL,KAAAa,UAAApE,QAAA,GAAAjH,OAAAuN,KAQAuI,SAAA,SAAAvI,GAQA,OALArN,EAFAqN,EAAAvN,OAAAuN,KAEA/C,KAAA/K,QAAA+K,KAAAmE,UAAAnE,KAAA3G,QAAAnF,YACA8L,KAAAa,UAAApE,OAAAsG,EAAA,IACA/C,KAAAI,cAAA,OAGAJ,MAQAtD,OAAA,SAAA6O,GACA,IAAA5O,EAAAqD,KAAAa,UAAAlE,OACA,OAAAqD,KAAAwL,MAAAD,EAAA7V,EAAAiH,KAAA,IAQAA,OAAA,SAAA8O,GACA,IAAA/O,EAAAsD,KAAAa,UAAAnE,OACA,OAAAsD,KAAAwL,MAAA9V,EAAAgH,KAAA,EAAA+O,IASAD,MAAA,SAAA9O,GACA,IAAAC,EAAAjG,UAAAtG,OAAA,QAAA6G,IAAAP,UAAA,GAAAA,UAAA,GAAAgG,EACAmE,EAAAb,KAAAa,UACA+B,GAAA,EAoBA,OAnBAlG,EAAAlH,OAAAkH,GACAC,EAAAnH,OAAAmH,GAEAqD,KAAA/K,QAAA+K,KAAAmE,UAAAnE,KAAA3G,QAAAlF,WACAuB,EAAAgH,KACAmE,EAAAnE,SACAkG,GAAA,GAGAlN,EAAAiH,KACAkE,EAAAlE,SACAiG,GAAA,GAGAA,GACA5C,KAAAI,cAAA,OAIAJ,MAQAtH,QAAA,WACA,IAKAtF,EALAsY,EAAAhV,UAAAtG,OAAA,QAAA6G,IAAAP,UAAA,IAAAA,UAAA,GACA2C,EAAA2G,KAAA3G,QACAwH,EAAAb,KAAAa,UACAO,EAAApB,KAAAoB,WACAS,EAAA7B,KAAA6B,YAGA,GAAA7B,KAAA/K,OAAA+K,KAAAK,QAAA,CACAjN,GACAwV,EAAA/G,EAAA3G,KAAAkG,EAAAlG,KACA2N,EAAAhH,EAAAvG,IAAA8F,EAAA9F,IACA6C,MAAA0D,EAAA1D,MACAD,OAAA2D,EAAA3D,QAEA,IAAA0H,EAAA/E,EAAA1C,MAAA0C,EAAAG,aAKA,GAJA5K,EAAAhD,EAAA,SAAA6T,EAAA9W,GACAiD,EAAAjD,GAAA8W,EAAArB,IAGA8F,EAAA,CAGA,IAAAnD,EAAApR,KAAAC,MAAAhE,EAAAyV,EAAAzV,EAAA8K,QACAoK,EAAAnR,KAAAC,MAAAhE,EAAAwV,EAAAxV,EAAA+K,OACA/K,EAAAwV,EAAAzR,KAAAC,MAAAhE,EAAAwV,GACAxV,EAAAyV,EAAA1R,KAAAC,MAAAhE,EAAAyV,GACAzV,EAAA+K,MAAAmK,EAAAlV,EAAAwV,EACAxV,EAAA8K,OAAAqK,EAAAnV,EAAAyV,QAGAzV,GACAwV,EAAA,EACAC,EAAA,EACA1K,MAAA,EACAD,OAAA,GAaA,OATA7E,EAAAnF,YACAd,EAAAqJ,OAAAoE,EAAApE,QAAA,GAGApD,EAAAlF,WACAf,EAAAsJ,OAAAmE,EAAAnE,QAAA,EACAtJ,EAAAuJ,OAAAkE,EAAAlE,QAAA,GAGAvJ,GAQA0F,QAAA,SAAA1F,GACA,IAAAiG,EAAA2G,KAAA3G,QACAwH,EAAAb,KAAAa,UACAO,EAAApB,KAAAoB,WACAS,KAEA,GAAA7B,KAAA/K,QAAA+K,KAAAmE,UAAAnO,EAAA5C,GAAA,CACA,IAAAwP,GAAA,EAEAvJ,EAAAnF,WACAwB,EAAAtC,EAAAqJ,SAAArJ,EAAAqJ,SAAAoE,EAAApE,SACAoE,EAAApE,OAAArJ,EAAAqJ,OACAmG,GAAA,GAIAvJ,EAAAlF,WACAuB,EAAAtC,EAAAsJ,SAAAtJ,EAAAsJ,SAAAmE,EAAAnE,SACAmE,EAAAnE,OAAAtJ,EAAAsJ,OACAkG,GAAA,GAGAlN,EAAAtC,EAAAuJ,SAAAvJ,EAAAuJ,SAAAkE,EAAAlE,SACAkE,EAAAlE,OAAAvJ,EAAAuJ,OACAiG,GAAA,IAIAA,GACA5C,KAAAI,cAAA,MAGA,IAAAwF,EAAA/E,EAAA1C,MAAA0C,EAAAG,aAEAtL,EAAAtC,EAAAwV,KACA/G,EAAA3G,KAAA9H,EAAAwV,EAAAhD,EAAAxE,EAAAlG,MAGAxF,EAAAtC,EAAAyV,KACAhH,EAAAvG,IAAAlI,EAAAyV,EAAAjD,EAAAxE,EAAA9F,KAGA5F,EAAAtC,EAAA+K,SACA0D,EAAA1D,MAAA/K,EAAA+K,MAAAyH,GAGAlQ,EAAAtC,EAAA8K,UACA2D,EAAA3D,OAAA9K,EAAA8K,OAAA0H,GAGA5F,KAAAkH,eAAArF,GAGA,OAAA7B,MAOA2L,iBAAA,WACA,OAAA3L,KAAA/K,MAAwBsB,KAASyJ,KAAAS,mBAOjCmL,aAAA,WACA,OAAA5L,KAAA6L,MAAwBtV,KAASyJ,KAAAa,eAOjCiG,cAAA,WACA,IAAA1F,EAAApB,KAAAoB,WACAhO,KAQA,OANA4M,KAAA/K,OACAmB,GAAA,uEAAA6Q,GACA7T,EAAA6T,GAAA7F,EAAA6F,KAIA7T,GAQA4T,cAAA,SAAA5T,GACA,IAAAgO,EAAApB,KAAAoB,WACAjO,EAAAiO,EAAAjO,YAsBA,OApBA6M,KAAA/K,QAAA+K,KAAAmE,UAAAnO,EAAA5C,KACAsC,EAAAtC,EAAA8H,QACAkG,EAAAlG,KAAA9H,EAAA8H,MAGAxF,EAAAtC,EAAAkI,OACA8F,EAAA9F,IAAAlI,EAAAkI,KAGA5F,EAAAtC,EAAA+K,QACAiD,EAAAjD,MAAA/K,EAAA+K,MACAiD,EAAAlD,OAAA9K,EAAA+K,MAAAhL,GACOuC,EAAAtC,EAAA8K,UACPkD,EAAAlD,OAAA9K,EAAA8K,OACAkD,EAAAjD,MAAA/K,EAAA8K,OAAA/K,GAGA6M,KAAAI,cAAA,IAGAJ,MAOA+G,eAAA,WACA,IACA3T,EADAyO,EAAA7B,KAAA6B,YAYA,OATA7B,KAAA/K,OAAA+K,KAAAK,UACAjN,GACA8H,KAAA2G,EAAA3G,KACAI,IAAAuG,EAAAvG,IACA6C,MAAA0D,EAAA1D,MACAD,OAAA2D,EAAA3D,SAIA9K,OAQA8T,eAAA,SAAA9T,GACA,IAEA0Y,EACAC,EAHAlK,EAAA7B,KAAA6B,YACA1O,EAAA6M,KAAA3G,QAAAlG,YAkCA,OA9BA6M,KAAA/K,OAAA+K,KAAAK,UAAAL,KAAAmE,UAAAnO,EAAA5C,KACAsC,EAAAtC,EAAA8H,QACA2G,EAAA3G,KAAA9H,EAAA8H,MAGAxF,EAAAtC,EAAAkI,OACAuG,EAAAvG,IAAAlI,EAAAkI,KAGA5F,EAAAtC,EAAA+K,QAAA/K,EAAA+K,QAAA0D,EAAA1D,QACA2N,GAAA,EACAjK,EAAA1D,MAAA/K,EAAA+K,OAGAzI,EAAAtC,EAAA8K,SAAA9K,EAAA8K,SAAA2D,EAAA3D,SACA6N,GAAA,EACAlK,EAAA3D,OAAA9K,EAAA8K,QAGA/K,IACA2Y,EACAjK,EAAA3D,OAAA2D,EAAA1D,MAAAhL,EACS4Y,IACTlK,EAAA1D,MAAA0D,EAAA3D,OAAA/K,IAIA6M,KAAAM,iBAGAN,MAQAgM,iBAAA,WACA,IAAA3S,EAAA3C,UAAAtG,OAAA,QAAA6G,IAAAP,UAAA,GAAAA,UAAA,MAEA,IAAAsJ,KAAA/K,QAAAvD,OAAAua,kBACA,YAGA,IAAA7K,EAAApB,KAAAoB,WACA8K,EA5hEA,SAAAtI,EAAAuI,EAAAC,EAAAC,GACA,IAAAC,EAAAH,EAAAhZ,YACAoZ,EAAAJ,EAAAnL,aACAwL,EAAAL,EAAAlL,cACAwL,EAAAN,EAAA1P,OACAA,OAAA,IAAAgQ,EAAA,EAAAA,EACAC,EAAAP,EAAAzP,OACAA,OAAA,IAAAgQ,EAAA,EAAAA,EACAC,EAAAR,EAAAxP,OACAA,OAAA,IAAAgQ,EAAA,EAAAA,EACAxZ,EAAAiZ,EAAAjZ,YACA6N,EAAAoL,EAAApL,aACAC,EAAAmL,EAAAnL,cACA2L,EAAAP,EAAAQ,UACAA,OAAA,IAAAD,EAAA,cAAAA,EACAE,EAAAT,EAAAU,sBACAA,OAAA,IAAAD,KACAE,EAAAX,EAAAY,sBACAA,OAAA,IAAAD,EAAA,MAAAA,EACAE,EAAAb,EAAApK,SACAA,OAAA,IAAAiL,EAAAhL,IAAAgL,EACAC,EAAAd,EAAAlK,UACAA,OAAA,IAAAgL,EAAAjL,IAAAiL,EACAC,EAAAf,EAAAtK,SACAA,OAAA,IAAAqL,EAAA,EAAAA,EACAC,EAAAhB,EAAArK,UACAA,OAAA,IAAAqL,EAAA,EAAAA,EACA5J,EAAA7I,SAAA2J,cAAA,UACA+I,EAAA7J,EAAA8J,WAAA,MACAC,EAAAxP,IACA7K,cACAgL,MAAA8D,EACA/D,OAAAiE,IAEAsL,EAAAzP,IACA7K,cACAgL,MAAA4D,EACA7D,OAAA8D,GACG,SACH7D,EAAAhH,KAAAoL,IAAAiL,EAAArP,MAAAhH,KAAAuJ,IAAA+M,EAAAtP,MAAA6C,IACA9C,EAAA/G,KAAAoL,IAAAiL,EAAAtP,OAAA/G,KAAAuJ,IAAA+M,EAAAvP,OAAA+C,IAGAyM,EAAA1P,IACA7K,YAAAmZ,EACAnO,MAAA8D,EACA/D,OAAAiE,IAEAwL,EAAA3P,IACA7K,YAAAmZ,EACAnO,MAAA4D,EACA7D,OAAA8D,GACG,SACH4L,EAAAzW,KAAAoL,IAAAmL,EAAAvP,MAAAhH,KAAAuJ,IAAAiN,EAAAxP,MAAAoO,IACAsB,EAAA1W,KAAAoL,IAAAmL,EAAAxP,OAAA/G,KAAAuJ,IAAAiN,EAAAzP,OAAAsO,IACAsB,IAAAF,EAAA,GAAAC,EAAA,EAAAD,EAAAC,GAeA,OAdApK,EAAAtF,MAAApH,EAAAoH,GACAsF,EAAAvF,OAAAnH,EAAAmH,GACAoP,EAAAS,UAAAlB,EACAS,EAAAU,SAAA,IAAA7P,EAAAD,GACAoP,EAAAW,OACAX,EAAAY,UAAA/P,EAAA,EAAAD,EAAA,GACAoP,EAAA7Q,SAAAtF,KAAA8L,GAAA,KACAqK,EAAA9B,MAAA9O,EAAAC,GACA2Q,EAAAP,wBACAO,EAAAL,wBACAK,EAAAa,UAAA9T,MAAAiT,GAAA1J,GAAA/R,OAAAjB,EAAAkd,EAAAM,IAAA,SAAAC,GACA,OAAAlX,KAAAmX,MAAAvX,EAAAsX,SAEAf,EAAA/Z,UACAkQ,EAs9DA8K,CAAAvO,KAAA4D,MAAA5D,KAAAa,UAAAO,EAAA/H,GAEA,IAAA2G,KAAAK,QACA,OAAA6L,EAGA,IAAAsC,EAAAxO,KAAAtH,UACA+V,EAAAD,EAAA5F,EACA8F,EAAAF,EAAA3F,EACA8F,EAAAH,EAAArQ,MACAyQ,EAAAJ,EAAAtQ,OAEA0H,EAAAsG,EAAA/N,MAAAhH,KAAAmX,MAAAlN,EAAAJ,cAEA,IAAA4E,IACA6I,GAAA7I,EACA8I,GAAA9I,EACA+I,GAAA/I,EACAgJ,GAAAhJ,GAGA,IAAAzS,EAAAwb,EAAAC,EACApB,EAAAxP,IACA7K,cACAgL,MAAA9E,EAAA4I,UAAAC,IACAhE,OAAA7E,EAAA8I,WAAAD,MAEAuL,EAAAzP,IACA7K,cACAgL,MAAA9E,EAAA0I,UAAA,EACA7D,OAAA7E,EAAA2I,WAAA,GACK,SAELF,EAAA9D,IACA7K,cACAgL,MAAA9E,EAAA8E,QAAA,IAAAyH,EAAAsG,EAAA/N,MAAAwQ,GACAzQ,OAAA7E,EAAA6E,SAAA,IAAA0H,EAAAsG,EAAAhO,OAAA0Q,KAEAzQ,EAAA2D,EAAA3D,MACAD,EAAA4D,EAAA5D,OAEAC,EAAAhH,KAAAoL,IAAAiL,EAAArP,MAAAhH,KAAAuJ,IAAA+M,EAAAtP,UACAD,EAAA/G,KAAAoL,IAAAiL,EAAAtP,OAAA/G,KAAAuJ,IAAA+M,EAAAvP,WACA,IAAAuF,EAAA7I,SAAA2J,cAAA,UACA+I,EAAA7J,EAAA8J,WAAA,MACA9J,EAAAtF,MAAApH,EAAAoH,GACAsF,EAAAvF,OAAAnH,EAAAmH,GACAoP,EAAAS,UAAA1U,EAAAwT,WAAA,cACAS,EAAAU,SAAA,IAAA7P,EAAAD,GACA,IAAA2Q,EAAAxV,EAAA0T,sBACAA,OAAA,IAAA8B,KACA5B,EAAA5T,EAAA4T,sBACAK,EAAAP,wBAEAE,IACAK,EAAAL,yBAIA,IAKA6B,EACAC,EAEAC,EACAC,EACAC,EACAC,EAXAC,EAAAlD,EAAA/N,MACAkR,EAAAnD,EAAAhO,OAEAoR,EAAAb,EACAc,EAAAb,EASAY,IAAAX,GAAAW,EAAAF,GACAE,EAAA,EACAR,EAAA,EACAE,EAAA,EACAE,EAAA,GACKI,GAAA,GACLN,GAAAM,EACAA,EAAA,EAEAJ,EADAJ,EAAA3X,KAAAoL,IAAA6M,EAAAT,EAAAW,IAEKA,GAAAF,IACLJ,EAAA,EAEAE,EADAJ,EAAA3X,KAAAoL,IAAAoM,EAAAS,EAAAE,IAIAR,GAAA,GAAAS,IAAAX,GAAAW,EAAAF,GACAE,EAAA,EACAR,EAAA,EACAE,EAAA,EACAE,EAAA,GACKI,GAAA,GACLN,GAAAM,EACAA,EAAA,EAEAJ,EADAJ,EAAA5X,KAAAoL,IAAA8M,EAAAT,EAAAW,IAEKA,GAAAF,IACLJ,EAAA,EAEAE,EADAJ,EAAA5X,KAAAoL,IAAAqM,EAAAS,EAAAE,IAIA,IAAAzB,GAAAwB,EAAAC,EAAAT,EAAAC,GAEA,GAAAG,EAAA,GAAAC,EAAA,GACA,IAAA3D,EAAArN,EAAAwQ,EACAb,EAAA/Q,KAAAiS,EAAAxD,EAAAyD,EAAAzD,EAAA0D,EAAA1D,EAAA2D,EAAA3D,GAQA,OAHA8B,EAAAa,UAAA9T,MAAAiT,GAAApB,GAAAra,OAAAjB,EAAAkd,EAAAM,IAAA,SAAAC,GACA,OAAAlX,KAAAmX,MAAAvX,EAAAsX,SAEA5K,GAQA+L,eAAA,SAAArc,GACA,IAAAkG,EAAA2G,KAAA3G,QAeA,OAbA2G,KAAAmE,UAAAvO,EAAAzC,KAEAkG,EAAAlG,YAAAgE,KAAAuJ,IAAA,EAAAvN,IAAAD,IAEA8M,KAAA/K,QACA+K,KAAAG,cAEAH,KAAAK,SACAL,KAAAM,kBAKAN,MAQAmH,YAAA,SAAAsI,GACA,IAAApW,EAAA2G,KAAA3G,QACA+N,EAAApH,KAAAoH,QACAnD,EAAAjE,KAAAiE,KAEA,GAAAjE,KAAA/K,QAAA+K,KAAAmE,SAAA,CACA,IAAAuL,EAn7FA,SAm7FAD,EACAxb,EAAAoF,EAAApF,SAn7FA,SAm7FAwb,EACAA,EAAAC,GAAAzb,EAAAwb,EAn7FA,OAo7FApW,EAAArG,SAAAyc,EACA3W,EAAAsO,EAAAhV,EAAAqd,GACApX,EAAA+O,EAAAxV,EAAA8d,GACArX,EAAA+O,EAAAjV,EAAA8B,GAEAoF,EAAA7E,iBAEAsE,EAAAmL,EAAA7R,EAAAqd,GACApX,EAAA4L,EAAArS,EAAA8d,GACArX,EAAA4L,EAAA9R,EAAA8B,IAIA,OAAA+L,OAIA2P,GAAAhe,EAAAie,QAEAA,GAEA,WAMA,SAAAA,EAAArY,GACA,IAAA8B,EAAA3C,UAAAtG,OAAA,QAAA6G,IAAAP,UAAA,GAAAA,UAAA,MAIA,GA5hGA,SAAAmZ,EAAAC,GACA,KAAAD,aAAAC,GACA,UAAAve,UAAA,qCAwhGAwe,CAAA/P,KAAA4P,IAEArY,IAAA1E,EAAAqE,KAAAK,EAAAyY,SACA,UAAAC,MAAA,4EAGAjQ,KAAAzI,UACAyI,KAAA3G,QAAmB9C,KAASzD,EAAAkD,EAAAqD,OAC5B2G,KAAAK,SAAA,EACAL,KAAAmE,UAAA,EACAnE,KAAA8H,YACA9H,KAAA/K,OAAA,EACA+K,KAAAkQ,WAAA,EACAlQ,KAAAoK,UAAA,EACApK,KAAA6L,OAAA,EACA7L,KAAAmQ,QAAA,EACAnQ,KAAAoQ,OA1hGA,IAAAN,EAAAO,EAAAC,EA24GA,OA34GAR,EA6hGAF,EA7hGAU,IA03GA3f,IAAA,aACAgF,MAAA,WAEA,OADAjE,OAAAke,QAAAD,GACAC,KAQAjf,IAAA,cACAgF,MAAA,SAAA0D,GACM9C,EAAMzD,EAAAkD,EAAAqD,WAv4GZgX,IA8hGA1f,IAAA,OACAgF,MAAA,WACA,IAEAkG,EAFAtE,EAAAyI,KAAAzI,QACAyY,EAAAzY,EAAAyY,QAAAvX,cAGA,IAAAlB,EAAA,SAMA,GAFAA,EAAA,QAAAyI,KAEA,QAAAgQ,EAAA,CAMA,GALAhQ,KAAAmK,OAAA,EAEAtO,EAAAtE,EAAAsB,aAAA,WACAmH,KAAA0K,YAAA7O,GAEAA,EACA,OAIAA,EAAAtE,EAAAiN,QACO,WAAAwL,GAAAte,OAAAua,oBACPpQ,EAAAtE,EAAAgZ,aAGAvQ,KAAAsK,KAAAzO,OAGAlL,IAAA,OACAgF,MAAA,SAAAkG,GACA,IAAAyL,EAAAtH,KAEA,GAAAnE,EAAA,CAIAmE,KAAAnE,MACAmE,KAAAa,aACA,IAAAtJ,EAAAyI,KAAAzI,QACA8B,EAAA2G,KAAA3G,QAOA,GALAA,EAAAnF,WAAAmF,EAAAlF,WACAkF,EAAA5F,kBAAA,GAIA4F,EAAA5F,kBAAA/B,OAAA8e,YAMA,GAAA7d,EAAAuE,KAAA2E,GACAjJ,EAAAsE,KAAA2E,GACAmE,KAAAyQ,MAhsEAC,EAgsEA7U,EAhsEAzD,QAAAoG,GAAA,IACAmS,EAAAC,KAAAF,GACAhS,EAAA,IAAA8R,YAAAG,EAAAvgB,QAEAgG,EADAya,EAAA,IAAAC,WAAApS,GACA,SAAA/I,EAAAxF,GACA0gB,EAAA1gB,GAAAwgB,EAAAI,WAAA5gB,KAEAuO,IA2rEAsB,KAAAgR,YAJA,CA/rEA,IACAN,EACAC,EACAjS,EACAmS,EAqsEAI,EAAA,IAAAC,eACAF,EAAAhR,KAAAgR,MAAAjL,KAAA/F,MACAA,KAAAkQ,WAAA,EACAlQ,KAAAiR,MACAA,EAAAE,UAAAH,EACAC,EAAAG,QAAAJ,EACAC,EAAAI,QAAAL,EAEAC,EAAAK,WAAA,WAhiGA,eAiiGAL,EAAAM,kBAAA,iBACAN,EAAAO,SAIAP,EAAAQ,OAAA,WACAnK,EAAAmJ,KAAAQ,EAAAS,WAGAT,EAAAU,UAAA,WACArK,EAAA4I,WAAA,EACA5I,EAAA2J,IAAA,MAIA5X,EAAA7F,kBAAAoI,GAAAC,IAAAtE,EAAA8M,cACAxI,EAAAM,GAAAN,IAGAoV,EAAAW,KAAA,MAAA/V,GACAoV,EAAAY,aAAA,cACAZ,EAAAa,gBAAA,oBAAAva,EAAA8M,YACA4M,EAAAc,YA9CA/R,KAAAgR,YAiDArgB,IAAA,OACAgF,MAAA,SAAA+I,GACA,IAAArF,EAAA2G,KAAA3G,QACAwH,EAAAb,KAAAa,UACAlC,EAAAF,GAAAC,GACAjC,EAAA,EACAC,EAAA,EACAC,EAAA,EAEA,GAAAgC,EAAA,GAGAqB,KAAAnE,IAtuEA,SAAA6C,EAAAsT,GAKA,IAJA,IAAAC,KAEApB,EAAA,IAAAC,WAAApS,GAEAmS,EAAAzgB,OAAA,GACA6hB,EAAAlV,KAAAuB,GAAAjE,WAAA,EAAAzJ,EAAAigB,EAAAqB,SAAA,EAJA,SAKArB,IAAAqB,SALA,MAQA,cAAArgB,OAAAmgB,EAAA,YAAoCngB,OAAAsgB,KAAAF,EAAAhV,KAAA,MA4tEpCmV,CAAA1T,EAtkGA,cAwkGA,IAAA2T,EAtoEA,SAAA1T,GACA,IAAAlC,EAAA,EACAC,EAAA,EACAC,EAAA,EAEA,OAAAgC,GAEA,OACAjC,GAAA,EACA,MAGA,OACAD,GAAA,IACA,MAGA,OACAE,GAAA,EACA,MAGA,OACAF,EAAA,GACAE,GAAA,EACA,MAGA,OACAF,EAAA,GACA,MAGA,OACAA,EAAA,GACAC,GAAA,EACA,MAGA,OACAD,GAAA,GAMA,OACAA,SACAC,SACAC,UAqlEA2V,CAAA3T,GAEAlC,EAAA4V,EAAA5V,OACAC,EAAA2V,EAAA3V,OACAC,EAAA0V,EAAA1V,OAGAtD,EAAAnF,YACA2M,EAAApE,UAGApD,EAAAlF,WACA0M,EAAAnE,SACAmE,EAAAlE,UAGAqD,KAAAgR,WAGArgB,IAAA,QACAgF,MAAA,WACA,IAEA0O,EACAC,EAHA/M,EAAAyI,KAAAzI,QACAsE,EAAAmE,KAAAnE,IAIAmE,KAAA3G,QAAA7F,kBAAAoI,GAAAC,MACAwI,EAAA9M,EAAA8M,aAGAC,EAAAzI,GAEAwI,EAAA,YAEAC,EAAAnI,GAAAN,KAIAmE,KAAAqE,cACArE,KAAAsE,iBACA,IAAAV,EAAAhJ,SAAA2J,cAAA,OAEAF,IACAT,EAAAS,eAGAT,EAAAY,IAAAF,GAAAzI,EACAmE,KAAA4D,QACAA,EAAA6N,OAAAzR,KAAAX,MAAA0G,KAAA/F,MACA4D,EAAAyN,QAAArR,KAAAuS,KAAAxM,KAAA/F,MACArI,EAAAiM,EAAA5R,GACAuF,EAAAib,WAAAC,aAAA7O,EAAArM,EAAAmb,gBAGA/hB,IAAA,QACAgF,MAAA,WACA,IAAAgd,EAAA3S,KAEA4D,EAAA5D,KAAAmK,MAAAnK,KAAAzI,QAAAyI,KAAA4D,MACAA,EAAA6N,OAAA,KACA7N,EAAAyN,QAAA,KACArR,KAAAmQ,QAAA,EACA,IAAAyC,EAAAjhB,EAAAkhB,WAAA,6CAAA3b,KAAAvF,EAAAkhB,UAAAC,WAEAC,EAAA,SAAA/R,EAAAC,GACQ1K,EAAMoc,EAAA9R,WACdG,eACAC,gBACA9N,YAAA6N,EAAAC,IAEA0R,EAAAxC,QAAA,EACAwC,EAAA9G,OAAA,EAEA8G,EAAAK,SAIA,IAAApP,EAAA5C,cAAA4R,EAAA,CAKA,IAAAK,EAAArY,SAAA2J,cAAA,OACA2O,EAAAtY,SAAAsY,MAAAtY,SAAAQ,gBACA4E,KAAAiT,cAEAA,EAAAxB,OAAA,WACAsB,EAAAE,EAAA9U,MAAA8U,EAAA/U,QAEA0U,GACAM,EAAAC,YAAAF,IAIAA,EAAAzO,IAAAZ,EAAAY,IAGAoO,IACAK,EAAAxb,MAAA2N,QAAA,uJACA8N,EAAAxO,YAAAuO,SArBAF,EAAAnP,EAAA5C,aAAA4C,EAAA3C,kBAyBAtQ,IAAA,OACAgF,MAAA,WACA,IAAAiO,EAAA5D,KAAA4D,MACAA,EAAA6N,OAAA,KACA7N,EAAAyN,QAAA,KACAzN,EAAA4O,WAAAW,YAAAvP,GACA5D,KAAA4D,MAAA,QAGAjT,IAAA,QACAgF,MAAA,WACA,GAAAqK,KAAA6L,QAAA7L,KAAA/K,MAAA,CAIA,IAAAsC,EAAAyI,KAAAzI,QACA8B,EAAA2G,KAAA3G,QACAuK,EAAA5D,KAAA4D,MAEArD,EAAAhJ,EAAAib,WACAY,EAAAxY,SAAA2J,cAAA,OACA6O,EAAAjO,UApnGA,orCAqnGA,IAAA3E,EAAA4S,EAAArO,cAAA,IAAAlT,OAhvGA,UAgvGA,eACA4R,EAAAjD,EAAAuE,cAAA,IAAAlT,OAjvGA,UAivGA,YACAuV,EAAA5G,EAAAuE,cAAA,IAAAlT,OAlvGA,UAkvGA,cACAqS,EAAA1D,EAAAuE,cAAA,IAAAlT,OAnvGA,UAmvGA,cACAoS,EAAAC,EAAAa,cAAA,IAAAlT,OApvGA,UAovGA,UACAmO,KAAAO,YACAP,KAAAQ,UACAR,KAAAyD,SACAzD,KAAAoH,UACApH,KAAAkE,UACAlE,KAAAyE,QAAAjE,EAAAuE,cAAA,IAAAlT,OA1vGA,UA0vGA,cACAmO,KAAAiE,OACAR,EAAAiB,YAAAd,GAEAjM,EAAAJ,EAAAxF,GAEAwO,EAAAkS,aAAAjS,EAAAjJ,EAAAmb,aAEA1S,KAAAmK,OACAjS,EAAA0L,EAAA5R,GAGAgO,KAAAoE,cACApE,KAAA+F,OACA1M,EAAApG,mBAAAkE,KAAAuJ,IAAA,EAAArH,EAAApG,qBAAAC,IACAmG,EAAAlG,YAAAgE,KAAAuJ,IAAA,EAAArH,EAAAlG,cAAAD,IACAmG,EAAAtG,SAAAoE,KAAAuJ,IAAA,EAAAvJ,KAAAoL,IAAA,EAAApL,KAAAC,MAAAiC,EAAAtG,aAAA,EACA4E,EAAAuM,EAAAnS,GAEAsH,EAAA1F,QACAgE,EAAAuM,EAAAmP,uBAAA,GAAAxhB,OA9wGA,UA8wGA,YAAAE,GAGAsH,EAAAzF,QACA+D,EAAAuM,EAAAmP,uBAAA,GAAAxhB,OAlxGA,UAkxGA,YAAAE,GAGAsH,EAAAvF,YACA6D,EAAA6I,EAAA,GAAA3O,OAtxGA,UAsxGA,QAGAwH,EAAAxF,WACA8D,EAAAsM,EAAAhS,GAGAoH,EAAA7E,iBACAmD,EAAAsM,EAAA9R,GACA2G,EAAAmL,EAAA7R,EA7xGA,QAgyGAiH,EAAA5E,mBACAkD,EAAAuM,EAAAmP,uBAAA,GAAAxhB,OAnyGA,UAmyGA,UAAAE,GACA4F,EAAAuM,EAAAmP,uBAAA,GAAAxhB,OApyGA,UAoyGA,WAAAE,IAGAiO,KAAAD,SACAC,KAAA/K,OAAA,EACA+K,KAAAmH,YAAA9N,EAAArG,UAEAqG,EAAAtF,UACAiM,KAAA3K,OAGA2K,KAAAlH,QAAAO,EAAAjG,MAEA+C,EAAAkD,EAAApE,QACA+E,GAAAzC,EA5wGA,QA4wGA8B,EAAApE,OACAkE,MAAA,IAIAmB,GAAA/C,EAjxGA,aAoxGA5G,IAAA,UACAgF,MAAA,WACAqK,KAAA/K,QAIA+K,KAAA/K,OAAA,EACA+K,KAAA4G,SACA5G,KAAAqF,eACArF,KAAAQ,QAAAgS,WAAAW,YAAAnT,KAAAQ,SACAtI,EAAA8H,KAAAzI,QAAAxF,OAGApB,IAAA,WACAgF,MAAA,WACAqK,KAAA/K,OACA+K,KAAAsT,UACAtT,KAAA/K,OAAA,EACA+K,KAAAK,SAAA,GACOL,KAAAmQ,QACPnQ,KAAAiT,YAAAxB,OAAA,KACAzR,KAAAmQ,QAAA,EACAnQ,KAAA6L,OAAA,GACO7L,KAAAkQ,WACPlQ,KAAAiR,IAAAG,QAAA,KACApR,KAAAiR,IAAAO,SACOxR,KAAA4D,OACP5D,KAAAuS,YAh3GAviB,EAAA8f,EAAA/f,UAAAsgB,GACAC,GAAAtgB,EAAA8f,EAAAQ,GAy4GAV,EA1YA,GA6YArZ,EAAMqZ,GAAA7f,UAAAgQ,GAAA1M,GAAAyS,GAAAe,GAAAwB,GAAA0B,IAES,IAAAwJ,GAAA,GC/6GfC,IACAtjB,OACAujB,UAEA9Z,KAAAlJ,OACAijB,SACAvV,MAAA,OACAD,OAAA,OACAyV,gBAAA,QAIAC,WACAja,KAAAnE,OACAke,QAAA,KAGAG,YACAla,KAAAnE,OACAke,QAAA,KAEAI,QACAna,KAAA4E,OACAmV,QAAA,WACA,YAIAtgB,KA5BA,WA6BA,UAEA2gB,QA/BA,aAkCAhK,SACA1B,OADA,SACAvO,GACA,IAAA8J,EAAAhJ,SAAAoZ,eAAA,OACAhU,KAAAiU,KAAAna,GACAoa,UAAAtQ,EACAuQ,gBAAA3e,OAAAwK,KAAA4T,WACAQ,kBAAA5e,OAAAwK,KAAA6T,eAIAQ,UAVA,SAUAC,GAAA,IAAA9X,EACA+X,EAAAvU,KACAA,KAAA3G,QAAAib,EAEAtU,KAAAuE,gBACAvE,KAAAkU,UAAAI,EAAAJ,UAEAlU,KAAAQ,QAAA,IAAA+S,GAAAvT,KAAA3M,SAAAmJ,GACArJ,YAAAmhB,EAAAH,gBAAAG,EAAAF,kBAEApgB,aAAAsgB,EAAAtgB,cAAA,GACAjB,SAAA,EACAY,QAAA,EACAc,kBAAA,EACAD,gBAAA,EACAggB,UAAA,EACAxhB,SAAA,OACAY,QAAA,EACAQ,UAAA,EACAC,aAAA,EACAF,UAAA,EAGAL,YAAA,EACAL,kBAAA,EACAD,kBAAA,GAlBAihB,IAAAjY,EAAA,YAmBA,GAnBAiY,IAAAjY,EAAA,eAoBA,GApBAiY,IAAAjY,EAAA,UAqBA,GArBAiY,IAAAjY,EAAA,4BAsBA,GAtBAiY,IAAAjY,EAAA,QAuBA,WAEA,QAAA8X,EAAAnhB,cACAohB,EAAA/T,QAAA0D,QACAa,cAAA,yBAAAtN,MAAAid,QACA,OACAH,EAAA/T,QAAAgK,aA7BAhO,KAmCA+H,cApDA,WAsDAvE,KAAA3M,QAAA,KAEA,IAAAiM,EACA,uJACAA,GACA,wGACAA,GACA,kFAGA,IAAAqV,EAAA/Z,SAAAoZ,eAAA,aACAhU,KAAA4U,QAAAha,SAAA2J,cAAA,OACAvE,KAAA4U,QAAAC,GAAA,iBACA7U,KAAA4U,QAAA7c,UAAA,YACAiI,KAAA4U,QAAAzP,UAAA7F,EAEAqV,EAAAjQ,YAAA1E,KAAA4U,SACA5U,KAAA3M,QAAAuH,SAAAoZ,eAAA,cAGAhU,KAAA8U,gBAGAA,aA7EA,WA8EA,IAAAP,EAAAvU,KACAA,KAAA+U,SAAAna,SAAAoZ,eAAA,eACAhU,KAAAgV,UAAApa,SAAAoZ,eAAA,eAEAhU,KAAAiV,SAAAjV,KAAA+U,SAAA,mBACAR,EAAAlf,SAGA2K,KAAAiV,SAAAjV,KAAAgV,UAAA,mBACAT,EAAAW,cAGAlV,KAAAiV,SAAAjV,KAAAmV,QAAA,mBACAnV,KAAArK,MAAA,MAIAse,KA/FA,SA+FA/d,EAAAoe,GAGAtU,KAAAmV,QAAAjf,EAAAkf,WAEA,IAAAC,EAAAnf,EAAAjG,OAAAolB,OAAAnf,EAAAof,aAAAD,MAEA,IAAAA,EAAAjlB,OAAA,SAGA4P,KAAAqU,UAAAC,GAGAtU,KAAAuV,SAAAF,EAAA,GAEAG,QAAAC,IAAAzV,KAAAuV,UAGAvV,KAAA0V,UAAA1V,KAAA2V,aAAA3V,KAAAuV,UAGAvV,KAAAQ,SACAR,KAAAQ,QAAApI,QAAA4H,KAAA0V,YAIAC,aAzHA,SAyHAC,GACA,IAAA/Z,EAAA,KAWA,YAVA5E,GAAAvF,OAAAmkB,gBAEAha,EAAAnK,OAAAmkB,gBAAAD,QACA3e,GAAAvF,OAAAokB,IAEAja,EAAAnK,OAAAokB,IAAAD,gBAAAD,QACA3e,GAAAvF,OAAAqkB,YAEAla,EAAAnK,OAAAqkB,UAAAF,gBAAAD,IAEA/Z,GAGAxG,KAxIA,WAyIA,IAAAkf,EAAAvU,KACA4D,EAAA,IAAAoS,MACAC,OAAA,EAIArb,SAAAmK,cAAA,iBAAAtN,MAAAye,QAAA,QAEAxO,WAAA,WACAuO,EAAA1B,EAAA/T,QAAAwL,mBAIA,IAAAmK,EAFA5B,EAAA6B,iBAAAH,GAEA1F,YACA3M,EAAAY,IAAA2R,EAGAA,EAAA/lB,OAAA,QACAmkB,EAAAL,UAAA1P,IAAA2R,EAEA5B,EAAA8B,QAAAF,IAEAvS,EAAA6N,OAAA,WAEA,IAAAre,EAAAmhB,EAAA+B,SAAA1S,EAAA2Q,EAAAgC,aACAhC,EAAAL,UAAA1P,IAAApR,EAEAmhB,EAAA8B,QAAAjjB,KAGA,KAGAgjB,iBA1KA,SA0KAI,GACA,IAAA/S,EAAA7I,SAAA2J,cAAA,UACA+I,EAAA7J,EAAA8J,WAAA,MACApP,EAAAqY,EAAArY,MACAD,EAAAsY,EAAAtY,OAYA,OAVAuF,EAAAtF,QACAsF,EAAAvF,SAEAoP,EAAAP,uBAAA,EACAO,EAAAa,UAAAqI,EAAA,IAAArY,EAAAD,GACAoP,EAAAmJ,yBAAA,iBACAnJ,EAAAoJ,YACApJ,EAAAqJ,KAAA,IAAAxY,EAAAD,GACAoP,EAAAsJ,OAEAnT,GAGAyR,UA7LA,WAgMAlV,KAAA6W,YAAA7W,KAAA+U,SAAA,cACA/U,KAAA6W,YAAA7W,KAAAgV,UAAA,cACAhV,KAAA6W,YAAA7W,KAAAmV,QAAA,cAEAnV,KAAA4U,QAAApC,WAAAW,YAAAnT,KAAA4U,SAGA5U,KAAAQ,QAAAiK,UACAzK,KAAAQ,QAAA,MAGA6V,QA3MA,SA2MAxV,GAGAb,KAAA8W,MAAA,WAAAjW,GAEAb,KACAkV,aAUA6B,UA3NA,SA2NA9R,EAAA+R,EAAAvT,GAIA,SAAAwB,EAAA,CAEA,IAAA/G,EAAA+G,EAAA/G,OACAC,EAAA8G,EAAA9G,MACA8Y,EAAA,EACA,MAAAA,IACAA,EARA,GAUA,SAAAD,IACAC,EAVA,IAYAA,EAbA,KAeAA,EAfA,IAgBAA,EAfA,GAkBA,IAAAlU,EAAA,GAAAkU,EAAA9f,KAAA8L,GAAA,IACAiU,EAAAzT,EAAA8J,WAAA,MACA,OAAA0J,GACA,OACAxT,EAAAtF,QACAsF,EAAAvF,SACAgZ,EAAA/I,UAAAlJ,EAAA,KACA,MACA,OACAxB,EAAAtF,MAAAD,EACAuF,EAAAvF,OAAAC,EACA+Y,EAAAza,OAAAsG,GACAmU,EAAA/I,UAAAlJ,EAAA,GAAA/G,GACA,MACA,OACAuF,EAAAtF,QACAsF,EAAAvF,SACAgZ,EAAAza,OAAAsG,GACAmU,EAAA/I,UAAAlJ,GAAA9G,GAAAD,GACA,MACA,OACAuF,EAAAtF,MAAAD,EACAuF,EAAAvF,OAAAC,EACA+Y,EAAAza,OAAAsG,GACAmU,EAAA/I,UAAAlJ,GAAA9G,EAAA,MAKAmY,SA7QA,SA6QArR,EAAAsR,GACA,IAAA9S,EAAA7I,SAAA2J,cAAA,UACA2S,EAAAzT,EAAA8J,WAAA,MAEA4J,EAAAvc,SAAA2J,cAAA,UACA6S,EAAAD,EAAA5J,WAAA,MACA8J,EAAApS,EAAAT,IAAApU,OACA+N,EAAA8G,EAAA9G,MACAD,EAAA+G,EAAA/G,OAGA0H,OAAA,GACAA,EAAAzH,EAAAD,EAAA,QACAsX,QAAAC,IAAA,YAEAtX,GADAyH,EAAAzO,KAAAsS,KAAA7D,GAEA1H,GAAA0H,GAEAA,EAAA,EAEAnC,EAAAtF,QACAsF,EAAAvF,SAEAgZ,EAAAnJ,UAAA,OACAmJ,EAAAlJ,SAAA,IAAAvK,EAAAtF,MAAAsF,EAAAvF,QAEA,IAAAiN,OAAA,EACA,IAAAA,EAAAhN,EAAAD,EAAA,QAGA,IAAAoZ,KAAAnZ,GAFAgN,KAAAhU,KAAAsS,KAAA0B,GAAA,KAGAoM,KAAArZ,EAAAiN,GACAgM,EAAAhZ,MAAAmZ,EACAH,EAAAjZ,OAAAqZ,EACA,QAAApnB,EAAA,EAAAA,EAAAgb,EAAAhb,IACA,QAAAqnB,EAAA,EAAAA,EAAArM,EAAAqM,IACAJ,EAAAjJ,UACAlJ,EACA9U,EAAAmnB,EAAA1R,EACA4R,EAAAD,EAAA3R,EACA0R,EAAA1R,EACA2R,EAAA3R,EACA,EACA,EACA0R,EACAC,GAEAL,EAAA/I,UAAAgJ,EAAAhnB,EAAAmnB,EAAAE,EAAAD,EAAAD,EAAAC,QAIAL,EAAA/I,UAAAlJ,EAAA,IAAA9G,EAAAD,GAGA,OAAAqY,GAAA,GAAAA,EACA,OAAAA,GACA,OACAvW,KAAA+W,UAAA9R,EAAA,OAAAxB,GACA,MACA,OACAzD,KAAA+W,UAAA9R,EAAA,QAAAxB,GACA,MACA,OACAzD,KAAA+W,UAAA9R,EAAA,QAAAxB,GACAzD,KAAA+W,UAAA9R,EAAA,QAAAxB,GAMA,IAAAgU,EAAAhU,EAAA8M,UAAA,gBAQA,OAPAiF,QAAAC,IAAA,OAAA4B,GACA7B,QAAAC,IAAA,OAAAgC,EAAArnB,QACAolB,QAAAC,IACA,eAAA4B,EAAAI,EAAArnB,QAAAinB,GAAA,KAEAF,EAAAhZ,MAAAgZ,EAAAjZ,OAAAuF,EAAAtF,MAAAsF,EAAAvF,OAAA,EAEAuZ,GAGAxC,SA9VA,SA8VAtlB,EAAAgK,EAAA+d,GACA/nB,EAAA6J,iBACA7J,EAAA6J,iBAAAG,EAAA+d,GAAA,GAEA/nB,EAAAgoB,YAAA,KAAAhe,EAAA+d,IAIAb,YAtWA,SAsWAlnB,EAAAgK,EAAA+d,GACA/nB,EAAA8J,oBACA9J,EAAA8J,oBAAAE,EAAA+d,GAAA,GAEA/nB,EAAAioB,YAAA,KAAAje,EAAA+d,MClZeG,IADE9X,OAFP,WAAgB,IAAA+X,EAAA9X,KAAa+X,EAAAD,EAAAE,eAA0BC,EAAAH,EAAAI,MAAAD,IAAAF,EAAwB,OAAAE,EAAA,OAAiBE,YAAA,YAAsBF,EAAA,OAAYxgB,MAAAqgB,EAAA,SAAAM,OAA4B5T,IAAAsT,EAAAhE,OAAAuE,IAAA,GAAAxD,GAAA,SAAsCiD,EAAAQ,GAAA,KAAAL,EAAA,SAA0BE,YAAA,OAAAC,OAA0Bze,KAAA,OAAA4e,OAAA,WAAiCC,IAAKnQ,OAAA,SAAAoQ,GAA0BX,EAAAzP,OAAAoQ,UAElSC,oBCChC,IAuBeC,GAvBUC,EAAQ,OAcjCC,CACErF,GACAqE,IATF,EAVA,SAAAiB,GACEF,EAAQ,SAaV,kBAEA,MAUgC,qBCuGhCG,IACApgB,KAAA,KACAqgB,YACApJ,QAAA+I,IAGAvlB,KANA,WAOA,OACA6lB,MAAA,EACAC,SAAA,GACAC,SAAA,GACAC,WAAA,aAAAR,EAAA,YACAS,OAAA,IACAC,MAAA,GACAC,YAAA,IAAAld,KACAmd,SAAA,cACAC,QAAA,IAAApd,KACAqd,QAAA,IAAArd,KAAA,YACAsd,MAAA,GACAC,WAAA,EACAC,YAAA,EACAC,KAAA,GACAC,MAAA,GACAC,IAAA,GACAC,SAAA,EACAC,SAAA,GAEAC,OACAC,OAAA,EAAAC,KAAA,2BAAAC,MAAA,QACAF,OAAA,EAAAC,KAAA,2BAAAC,MAAA,QACAF,OAAA,EAAAC,KAAA,qBAAAC,MAAA,QACAF,OAAA,EAAAC,KAAA,0BAAAC,MAAA,OACAF,OAAA,EAAAC,KAAA,oBAAAC,MAAA,QAEA7G,UACAtV,MAAA,OACAD,OAAA,OACAyV,gBAAA,MACAuC,QAAA,QAEAqE,WAAA,KAIAC,SAAcC,OACdhqB,OAAAiqB,GAAA,EAAAjqB,EAAA,cAIAsZ,QAAa0Q,KACbE,OADA,WACA,IAAArT,EAAAtH,KACAA,KAAAiZ,MAAA,EACAvR,WAAA,WACAJ,EAAAiT,WAAA,IACA,MAGAlkB,SARA,SAQA4O,GACAuQ,QAAAC,IAAAxQ,GAEAjF,KAAAua,WAAAtV,IAEAxU,OAAAiqB,GAAA,EAAAjqB,EACAmqB,QAAA,cAGAC,OAjBA,WAkBA7a,KAAA8a,OAAA,iBAGAC,MArBA,WAsBA/a,KAAAgb,QAAAje,MAAAke,KAAA,YAGAC,QAzBA,WA0BAlb,KAAAmb,SACAnb,KAAAgb,QAAAje,MAAAke,KAAA,aAEAjb,KAAAgb,QAAAje,MAAAke,KAAA,YAIAG,WAjCA,WAkCApb,KAAAgb,QAAAje,MAAAke,KAAA,iBAIAI,SAtCA,WAsCA,IAAA1I,EAAA3S,KAAA,OAAAsb,IAAAC,EAAA5R,EAAA6R,KAAA,SAAAC,IAAA,IAAAjf,EAAA,OAAA+e,EAAA5R,EAAA+R,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEAlJ,EAAAmJ,IAAAT,WAFA,OAAA7e,EAAAmf,EAAAI,KAGA,GAHAvf,EAEApJ,KACA4oB,OACAtqB,OAAAgK,SAAAugB,SACAC,aAAAjS,SALA0R,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAQ,GAAAR,EAAA,SAQAhJ,EAAAmI,OAAA,QARA,yBAAAa,EAAApJ,SAAAkJ,EAAA9I,IAAA,SAAA2I,IAaAc,OAnDA,WAoDApc,KAAAgb,QAAAje,MAAAke,KAAA,aAGAoB,QAvDA,WAwDArc,KAAAgb,QAAAje,MAAAke,KAAA,YAIAqB,QA5DA,WA4DA,IAAAC,EAAAvc,KAAA,OAAAsb,IAAAC,EAAA5R,EAAA6R,KAAA,SAAAgB,IAAA,IAAAnf,EAAAjK,EAAA,OAAAmoB,EAAA5R,EAAA+R,KAAA,SAAAe,GAAA,cAAAA,EAAAb,KAAAa,EAAAZ,MAAA,cACAU,EAAAtD,MAAA,EADAwD,EAAAb,KAAA,EAAAa,EAAAZ,KAAA,EAGAU,EAAAT,IAAAY,OAHA,OAAArf,EAAAof,EAAAV,KAIA,MADA3oB,EAHAiK,EAGAjK,MACA4oB,OACAO,EAAApD,SAAA/lB,EAAAupB,SAAAxD,SACAoD,EAAAlD,OAAAjmB,EAAAupB,SAAAtD,OACAkD,EAAA5C,MAAAvmB,EAAAupB,SAAA7C,KAAA,IAAA1mB,EAAAupB,SAAA5C,MAAA,IAAA3mB,EAAAupB,SAAA3C,IAAA,IACAuC,EAAAzC,KAAA1mB,EAAAupB,SAAA7C,KACAyC,EAAAxC,MAAA3mB,EAAAupB,SAAA5C,MACAwC,EAAAvC,IAAA5mB,EAAAupB,SAAA3C,IACAuC,EAAAjD,MAAAlmB,EAAAupB,SAAArD,MACAiD,EAAA1H,GAAAzhB,EAAAupB,SAAAC,IACAL,EAAArD,SAAA9lB,EAAAupB,SAAAzD,UAbAuD,EAAAZ,KAAA,gBAAAY,EAAAb,KAAA,EAAAa,EAAAN,GAAAM,EAAA,SAgBAF,EAAAzB,OAAA,YAhBA,yBAAA2B,EAAAlK,SAAAiK,EAAAD,IAAA,SAAAjB,IAoBAuB,QAhFA,SAgFAC,GACA,IAAAC,EAAA,IAAA1gB,KAAAygB,GACA9c,KAAA8Z,KAAAiD,EAAAC,cACAhd,KAAA+Z,MAAAgD,EAAAE,WAAA,EACAjd,KAAAga,IAAA+C,EAAAG,UACAld,KAAA2Z,MAAA3Z,KAAA8Z,KAAA,IAAA9Z,KAAA+Z,MAAA,IAAA/Z,KAAAga,IAAA,IACAha,KAAA4Z,WAAA,GAGAuD,SAzFA,SAyFAC,EAAAznB,GACAqK,KAAAqZ,OAAA1jB,GAIA0nB,KA9FA,WA8FA,IAAAC,EAAAtd,KAAA,OAAAsb,IAAAC,EAAA5R,EAAA6R,KAAA,SAAA+B,IAAA,IAAAC,EAAApS,EAAAhY,EAAA,OAAAmoB,EAAA5R,EAAA+R,KAAA,SAAA+B,GAAA,cAAAA,EAAA7B,KAAA6B,EAAA5B,MAAA,cACAyB,EAAArD,SAAA,EACAuD,GACAnE,OAAAiE,EAAAjE,OACAC,MAAAgE,EAAAhE,MACAQ,KAAAwD,EAAAxD,KACAC,MAAAuD,EAAAvD,MACAC,IAAAsD,EAAAtD,IACAnF,GAAAyI,EAAAzI,GACAqE,SAAAoE,EAAApE,SACAwE,OAAAJ,EAAA/C,WAAA+C,EAAA/C,gBAAAtjB,GAVAwmB,EAAA7B,KAAA,EAAA6B,EAAA5B,KAAA,EAaAyB,EAAAxB,IAAA6B,SAAAH,GAbA,OAAApS,EAAAqS,EAAA1B,KAcA,MADA3oB,EAbAgY,EAaAhY,MACA4oB,MACAsB,EAAArD,SAAA,EACAqD,EAAA1C,QAAAxnB,EAAAspB,MACAY,EAAAxC,OAAA1nB,EAAAwqB,OAEAN,EAAAxC,OAAA1nB,EAAAwqB,KACAN,EAAArD,SAAA,GApBAwD,EAAA5B,KAAA,iBAAA4B,EAAA7B,KAAA,GAAA6B,EAAAtB,GAAAsB,EAAA,SAuBAH,EAAArD,SAAA,EACAqD,EAAAxC,OAAA,aAxBA,yBAAA2C,EAAAlL,SAAAgL,EAAAD,IAAA,UAAAhC,IA4BAlB,OA1HA,SA0HAjqB,GACA,GAAAA,EACA6P,KAAAgb,QAAAje,MAAAke,KAAA,eAEA,GAAA9qB,IACAA,EAAA,GAEA6P,KAAAgb,QAAAje,MAAAke,KAAA,SAAA4C,OAAAzD,OAAAjqB,OAIA2tB,OArIA,WAsIApsB,OAAAkgB,KAAA,sDAIAmM,QA3LA,WA2LA,IAAAC,EAAAhe,KAAA,OAAAsb,IAAAC,EAAA5R,EAAA6R,KAAA,SAAAyC,IAAA,IAAAhgB,EAAA7K,EAAA,OAAAmoB,EAAA5R,EAAA+R,KAAA,SAAAwC,GAAA,cAAAA,EAAAtC,KAAAsC,EAAArC,MAAA,cAAAqC,EAAAtC,KAAA,EAAAsC,EAAArC,KAAA,EAEAmC,EAAAlC,IAAAqC,cAFA,OAAAlgB,EAAAigB,EAAAnC,KAGA,MADA3oB,EAFA6K,EAEA7K,MACA4oB,OACAgC,EAAA9D,SAAA9mB,EAAAgrB,SAJAF,EAAArC,KAAA,gBAAAqC,EAAAtC,KAAA,EAAAsC,EAAA/B,GAAA+B,EAAA,SAOAF,EAAAlD,OAAA,QAPA,yBAAAoD,EAAA3L,SAAA0L,EAAAD,IAAA,SAAA1C,KCzTe+C,IADEte,OAFP,WAAgB,IAAA+X,EAAA9X,KAAa+X,EAAAD,EAAAE,eAA0BC,EAAAH,EAAAI,MAAAD,IAAAF,EAAwB,OAAAE,EAAA,OAAiBG,OAAOvD,GAAA,gBAAmBoD,EAAA,eAAoBG,OAAOkC,MAAA,OAAAgE,cAAA,KAAmCxG,EAAAQ,GAAA,KAAAR,EAAAqD,SAA+NlD,EAAA,OAAgCE,YAAA,WAAqBF,EAAA,OAAYG,OAAO5T,IAAAsT,EAAAqD,SAAAuC,OAAArM,QAAAyG,EAAAsB,cAAoDtB,EAAAQ,GAAA,KAAAL,EAAA,KAAsBE,YAAA,YAAsBL,EAAAQ,GAAA,OAAAR,EAAAyG,GAAAzG,EAAAqD,SAAAjC,aAAApB,EAAAQ,GAAA,KAAAL,EAAA,KAAqEO,IAAIgG,MAAA1G,EAAAuD,YAAsBvD,EAAAQ,GAAA,UAAAR,EAAAQ,GAAA,KAAAL,EAAA,YAA8CE,YAAA,UAAAC,OAA6Bzf,KAAA,WAAiB6f,IAAKgG,MAAA1G,EAAAwE,YAAqB,GAA5lBrE,EAAA,OAAwCE,YAAA,WAAqBF,EAAA,OAAYG,OAAO5T,IAAA,sEAAA6T,IAAA,GAAAoG,OAAA,MAAkG3G,EAAAQ,GAAA,KAAAL,EAAA,KAAsBO,IAAIgG,MAAA1G,EAAAiD,SAAmBjD,EAAAQ,GAAA,aAA6XR,EAAAQ,GAAA,KAAAL,EAAA,OAA4BE,YAAA,sBAAiCL,EAAA4G,GAAA5G,EAAA,cAAAgF,EAAA6B,GAAuC,OAAA1G,EAAA,OAAiBtnB,IAAAmsB,EAAA1C,OAAAjC,YAAA,6BAAAK,IAA4DgG,MAAA,SAAA/F,GAAyBX,EAAAsC,OAAA0C,EAAA1C,YAAyBnC,EAAA,KAAUE,YAAA,WAAAyG,MAAA9B,EAAAzC,OAAsCvC,EAAAQ,GAAA,KAAAL,EAAA,QAAAH,EAAAQ,GAAAR,EAAAyG,GAAAzB,EAAAxC,UAAAxC,EAAAQ,GAAA,KAAAR,EAAAoC,UAAA,GAAApC,EAAAoC,SAAAyE,GAAA1G,EAAA,QAAqHE,YAAA,QAAkBL,EAAAQ,GAAAR,EAAAyG,GAAAzG,EAAAoC,SAAAyE,OAAA7G,EAAA+G,UAAmD/G,EAAAQ,GAAA,KAAAL,EAAA,kBAAoCE,YAAA,eAAyBF,EAAA,YAAiBG,OAAOiC,KAAA,UAAAC,MAAA,OAAAwE,UAAA,IAA6CtG,IAAKgG,MAAA1G,EAAAuE,YAAqB,GAAAvE,EAAAQ,GAAA,KAAAL,EAAA,kBAAAA,EAAA,YAAsDG,OAAOiC,KAAA,WAAAC,MAAA,OAAAwE,UAAA,IAA8CtG,IAAKgG,MAAA1G,EAAAsD,cAAwBtD,EAAAQ,GAAA,KAAAL,EAAA,YAA6BG,OAAOiC,KAAA,YAAAC,MAAA,OAAAwE,UAAA,IAA+CtG,IAAKgG,MAAA1G,EAAAoD,WAAqBpD,EAAAQ,GAAA,KAAAL,EAAA,YAA6BG,OAAOiC,KAAA,OAAAC,MAAA,OAAAwE,UAAA,IAA0CtG,IAAKgG,MAAA1G,EAAAsE,WAAoB,GAAAtE,EAAAQ,GAAA,KAAAL,EAAA,aAAkCE,YAAA,QAAAC,OAA2B2G,SAAA,QAAAC,SAAA,GAAmCC,OAAQtpB,MAAAmiB,EAAA,KAAAzhB,SAAA,SAAA6oB,GAA0CpH,EAAAmB,KAAAiG,GAAaC,WAAA,UAAoBlH,EAAA,eAAoBG,OAAOkC,MAAA,OAAAgE,aAAA,IAA+B9F,IAAK4G,aAAAtH,EAAA6C,UAAyB7C,EAAAQ,GAAA,KAAAL,EAAA,kBAAAA,EAAA,KAA2CO,IAAIgG,MAAA1G,EAAAgG,UAAoB7F,EAAA,aAAkBE,YAAA,gBAAAC,OAAmCziB,MAAA,yCAAAwO,SAAA,GAAAkb,UAAA,GAAAC,MAAA,aAAgG,GAAAxH,EAAAQ,GAAA,KAAAL,EAAA,OAA4BE,YAAA,2BAAAC,OAA8CvD,GAAA,eAAkBoD,EAAA,QAAAH,EAAAQ,GAAA,QAAAR,EAAAQ,GAAA,KAAAL,EAAA,OAAAH,EAAA,SAAAG,EAAA,OAA2EG,OAAO/G,QAAAyG,EAAAsB,WAAA5U,IAAAsT,EAAAyC,YAAAzC,EAAAqD,SAAAuC,OAAArF,IAAA,GAAAoG,OAAA,MAA2F3G,EAAA+G,KAAA/G,EAAAQ,GAAA,KAAAL,EAAA,YAAsCG,OAAOzf,KAAA,YAAgB,GAAAmf,EAAAQ,GAAA,KAAAL,EAAA,OAA4BE,YAAA,YAAsBF,EAAA,WAAgBG,OAAO3E,SAAAqE,EAAArE,UAAwB+E,IAAKniB,SAAAyhB,EAAAzhB,aAAyB,KAAAyhB,EAAAQ,GAAA,KAAAL,EAAA,KAA4BO,IAAIgG,MAAA1G,EAAA+C,UAAoB5C,EAAA,aAAkBE,YAAA,gBAAAC,OAAmCjU,SAAA,GAAAkb,UAAA,GAAAC,MAAA,OAA2CL,OAAQtpB,MAAAmiB,EAAA,SAAAzhB,SAAA,SAAA6oB,GAA8CpH,EAAAqB,SAAA+F,GAAiBC,WAAA,eAAwB,GAAArH,EAAAQ,GAAA,KAAAL,EAAA,aAAkCG,OAAOiH,UAAA,GAAAC,MAAA,KAAAC,YAAA,SAAkDN,OAAQtpB,MAAAmiB,EAAA,SAAAzhB,SAAA,SAAA6oB,GAA8CpH,EAAAoB,SAAAgG,GAAiBC,WAAA,cAAwBrH,EAAAQ,GAAA,KAAAL,EAAA,KAAsBE,YAAA,SAAAK,IAAyBgG,MAAA,SAAA/F,GAAyBX,EAAA+B,YAAA,MAAsB5B,EAAA,aAAkBE,YAAA,gBAAAC,OAAmCiH,UAAA,GAAAlb,SAAA,GAAAmb,MAAA,KAAAC,YAAA,KAA4DN,OAAQtpB,MAAAmiB,EAAA,OAAAzhB,SAAA,SAAA6oB,GAA4CpH,EAAAuB,OAAA6F,GAAeC,WAAA,aAAsB,GAAArH,EAAAQ,GAAA,KAAAL,EAAA,aAAkCG,OAAOiH,UAAA,GAAAC,MAAA,KAAAC,YAAA,SAAkDN,OAAQtpB,MAAAmiB,EAAA,MAAAzhB,SAAA,SAAA6oB,GAA2CpH,EAAAwB,MAAA4F,GAAcC,WAAA,WAAqBrH,EAAAQ,GAAA,KAAAL,EAAA,KAAsBE,YAAA,QAAAK,IAAwBgG,MAAA,SAAA/F,GAAyBX,EAAA8B,WAAA,MAAwB3B,EAAA,aAAkBG,OAAOiH,UAAA,GAAAlb,SAAA,GAAAmb,MAAA,OAAAC,YAAA,QAAiEN,OAAQtpB,MAAAmiB,EAAA,MAAAzhB,SAAA,SAAA6oB,GAA2CpH,EAAA6B,MAAAuF,GAAcC,WAAA,YAAqB,OAAArH,EAAAQ,GAAA,KAAAL,EAAA,aAAsCG,OAAO2G,SAAA,SAAAC,SAAA,GAAmCC,OAAQtpB,MAAAmiB,EAAA,UAAAzhB,SAAA,SAAA6oB,GAA+CpH,EAAA8B,UAAAsF,GAAkBC,WAAA,eAAyBlH,EAAA,uBAA4BG,OAAOze,KAAA,OAAA6lB,WAAA1H,EAAA4B,QAAA+F,WAAA3H,EAAA2B,SAA4DjB,IAAKqE,QAAA/E,EAAA+E,QAAA6C,OAAA,SAAAjH,GAAgDX,EAAA8B,WAAA,IAAuBqF,OAAQtpB,MAAAmiB,EAAA,YAAAzhB,SAAA,SAAA6oB,GAAiDpH,EAAAyB,YAAA2F,GAAoBC,WAAA,kBAA2B,GAAArH,EAAAQ,GAAA,KAAAL,EAAA,aAAkCG,OAAO2G,SAAA,SAAAC,SAAA,GAAmCC,OAAQtpB,MAAAmiB,EAAA,WAAAzhB,SAAA,SAAA6oB,GAAgDpH,EAAA+B,WAAAqF,GAAmBC,WAAA,gBAA0BlH,EAAA,cAAmBE,YAAA,gBAAAC,OAAmCoB,QAAA1B,EAAA0B,QAAAmG,eAAA,GAAArF,MAAA,MAAqD9B,IAAKnQ,OAAAyP,EAAAqF,SAAAuC,OAAA,SAAAjH,GAAgDX,EAAA+B,YAAA,GAAqBgD,QAAA,SAAApE,GAA4BX,EAAA+B,YAAA,OAAuB,GAAA/B,EAAAQ,GAAA,KAAAL,EAAA,OAA4BE,YAAA,WAAqBF,EAAA,cAAmBE,YAAA,aAAAC,OAAgCwH,KAAA,SAAAjmB,KAAA,UAAAsgB,QAAAnC,EAAAmC,SAAuDzB,IAAKgG,MAAA1G,EAAAuF,QAAkBvF,EAAAQ,GAAA,QAAAR,EAAAQ,GAAA,KAAAL,EAAA,cAA8CE,YAAA,gCAAAC,OAAmDwH,KAAA,UAAgBpH,IAAKgG,MAAA,SAAA/F,GAAyBX,EAAAmB,MAAA,MAAiBnB,EAAAQ,GAAA,gBAAAR,EAAAQ,GAAA,KAAAL,EAAA,cAAsDG,OAAOzf,KAAA,UAAesf,EAAA,wBAE5/JS,oBCChC,IAcImH,GAdqBjH,EAAQ,OAcjBkH,CACd/G,GACAsF,IAT6B,EAV/B,SAAoBvF,GAClBF,EAAQ,SAaS,kBAEU,MAUdmH,EAAA,QAAAF,GAAiB","file":"static/js/8.fb3092b5ed1bcbcb3b67.js","sourcesContent":["/*!\n * Cropper.js v1.4.3\n * https://fengyuanchen.github.io/cropperjs\n *\n * Copyright 2015-present Chen Fengyuan\n * Released under the MIT license\n *\n * Date: 2018-10-24T13:07:15.032Z\n */\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function (obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function (obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];\n\n    return arr2;\n  }\n}\n\nfunction _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n\nvar IN_BROWSER = typeof window !== 'undefined';\nvar WINDOW = IN_BROWSER ? window : {};\nvar NAMESPACE = 'cropper'; // Actions\n\nvar ACTION_ALL = 'all';\nvar ACTION_CROP = 'crop';\nvar ACTION_MOVE = 'move';\nvar ACTION_ZOOM = 'zoom';\nvar ACTION_EAST = 'e';\nvar ACTION_WEST = 'w';\nvar ACTION_SOUTH = 's';\nvar ACTION_NORTH = 'n';\nvar ACTION_NORTH_EAST = 'ne';\nvar ACTION_NORTH_WEST = 'nw';\nvar ACTION_SOUTH_EAST = 'se';\nvar ACTION_SOUTH_WEST = 'sw'; // Classes\n\nvar CLASS_CROP = \"\".concat(NAMESPACE, \"-crop\");\nvar CLASS_DISABLED = \"\".concat(NAMESPACE, \"-disabled\");\nvar CLASS_HIDDEN = \"\".concat(NAMESPACE, \"-hidden\");\nvar CLASS_HIDE = \"\".concat(NAMESPACE, \"-hide\");\nvar CLASS_INVISIBLE = \"\".concat(NAMESPACE, \"-invisible\");\nvar CLASS_MODAL = \"\".concat(NAMESPACE, \"-modal\");\nvar CLASS_MOVE = \"\".concat(NAMESPACE, \"-move\"); // Data keys\n\nvar DATA_ACTION = \"\".concat(NAMESPACE, \"Action\");\nvar DATA_PREVIEW = \"\".concat(NAMESPACE, \"Preview\"); // Drag modes\n\nvar DRAG_MODE_CROP = 'crop';\nvar DRAG_MODE_MOVE = 'move';\nvar DRAG_MODE_NONE = 'none'; // Events\n\nvar EVENT_CROP = 'crop';\nvar EVENT_CROP_END = 'cropend';\nvar EVENT_CROP_MOVE = 'cropmove';\nvar EVENT_CROP_START = 'cropstart';\nvar EVENT_DBLCLICK = 'dblclick';\nvar EVENT_POINTER_DOWN = WINDOW.PointerEvent ? 'pointerdown' : 'touchstart mousedown';\nvar EVENT_POINTER_MOVE = WINDOW.PointerEvent ? 'pointermove' : 'touchmove mousemove';\nvar EVENT_POINTER_UP = WINDOW.PointerEvent ? 'pointerup pointercancel' : 'touchend touchcancel mouseup';\nvar EVENT_READY = 'ready';\nvar EVENT_RESIZE = 'resize';\nvar EVENT_WHEEL = 'wheel mousewheel DOMMouseScroll';\nvar EVENT_ZOOM = 'zoom'; // Mime types\n\nvar MIME_TYPE_JPEG = 'image/jpeg'; // RegExps\n\nvar REGEXP_ACTIONS = /^(?:e|w|s|n|se|sw|ne|nw|all|crop|move|zoom)$/;\nvar REGEXP_DATA_URL = /^data:/;\nvar REGEXP_DATA_URL_JPEG = /^data:image\\/jpeg;base64,/;\nvar REGEXP_TAG_NAME = /^(?:img|canvas)$/i;\n\nvar DEFAULTS = {\n  // Define the view mode of the cropper\n  viewMode: 0,\n  // 0, 1, 2, 3\n  // Define the dragging mode of the cropper\n  dragMode: DRAG_MODE_CROP,\n  // 'crop', 'move' or 'none'\n  // Define the initial aspect ratio of the crop box\n  initialAspectRatio: NaN,\n  // Define the aspect ratio of the crop box\n  aspectRatio: NaN,\n  // An object with the previous cropping result data\n  data: null,\n  // A selector for adding extra containers to preview\n  preview: '',\n  // Re-render the cropper when resize the window\n  responsive: true,\n  // Restore the cropped area after resize the window\n  restore: true,\n  // Check if the current image is a cross-origin image\n  checkCrossOrigin: true,\n  // Check the current image's Exif Orientation information\n  checkOrientation: true,\n  // Show the black modal\n  modal: true,\n  // Show the dashed lines for guiding\n  guides: true,\n  // Show the center indicator for guiding\n  center: true,\n  // Show the white modal to highlight the crop box\n  highlight: true,\n  // Show the grid background\n  background: true,\n  // Enable to crop the image automatically when initialize\n  autoCrop: true,\n  // Define the percentage of automatic cropping area when initializes\n  autoCropArea: 0.8,\n  // Enable to move the image\n  movable: true,\n  // Enable to rotate the image\n  rotatable: true,\n  // Enable to scale the image\n  scalable: true,\n  // Enable to zoom the image\n  zoomable: true,\n  // Enable to zoom the image by dragging touch\n  zoomOnTouch: true,\n  // Enable to zoom the image by wheeling mouse\n  zoomOnWheel: true,\n  // Define zoom ratio when zoom the image by wheeling mouse\n  wheelZoomRatio: 0.1,\n  // Enable to move the crop box\n  cropBoxMovable: true,\n  // Enable to resize the crop box\n  cropBoxResizable: true,\n  // Toggle drag mode between \"crop\" and \"move\" when click twice on the cropper\n  toggleDragModeOnDblclick: true,\n  // Size limitation\n  minCanvasWidth: 0,\n  minCanvasHeight: 0,\n  minCropBoxWidth: 0,\n  minCropBoxHeight: 0,\n  minContainerWidth: 200,\n  minContainerHeight: 100,\n  // Shortcuts of events\n  ready: null,\n  cropstart: null,\n  cropmove: null,\n  cropend: null,\n  crop: null,\n  zoom: null\n};\n\nvar TEMPLATE = '<div class=\"cropper-container\" touch-action=\"none\">' + '<div class=\"cropper-wrap-box\">' + '<div class=\"cropper-canvas\"></div>' + '</div>' + '<div class=\"cropper-drag-box\"></div>' + '<div class=\"cropper-crop-box\">' + '<span class=\"cropper-view-box\"></span>' + '<span class=\"cropper-dashed dashed-h\"></span>' + '<span class=\"cropper-dashed dashed-v\"></span>' + '<span class=\"cropper-center\"></span>' + '<span class=\"cropper-face\"></span>' + '<span class=\"cropper-line line-e\" data-cropper-action=\"e\"></span>' + '<span class=\"cropper-line line-n\" data-cropper-action=\"n\"></span>' + '<span class=\"cropper-line line-w\" data-cropper-action=\"w\"></span>' + '<span class=\"cropper-line line-s\" data-cropper-action=\"s\"></span>' + '<span class=\"cropper-point point-e\" data-cropper-action=\"e\"></span>' + '<span class=\"cropper-point point-n\" data-cropper-action=\"n\"></span>' + '<span class=\"cropper-point point-w\" data-cropper-action=\"w\"></span>' + '<span class=\"cropper-point point-s\" data-cropper-action=\"s\"></span>' + '<span class=\"cropper-point point-ne\" data-cropper-action=\"ne\"></span>' + '<span class=\"cropper-point point-nw\" data-cropper-action=\"nw\"></span>' + '<span class=\"cropper-point point-sw\" data-cropper-action=\"sw\"></span>' + '<span class=\"cropper-point point-se\" data-cropper-action=\"se\"></span>' + '</div>' + '</div>';\n\n/**\n * Check if the given value is not a number.\n */\n\nvar isNaN = Number.isNaN || WINDOW.isNaN;\n/**\n * Check if the given value is a number.\n * @param {*} value - The value to check.\n * @returns {boolean} Returns `true` if the given value is a number, else `false`.\n */\n\nfunction isNumber(value) {\n  return typeof value === 'number' && !isNaN(value);\n}\n/**\n * Check if the given value is undefined.\n * @param {*} value - The value to check.\n * @returns {boolean} Returns `true` if the given value is undefined, else `false`.\n */\n\nfunction isUndefined(value) {\n  return typeof value === 'undefined';\n}\n/**\n * Check if the given value is an object.\n * @param {*} value - The value to check.\n * @returns {boolean} Returns `true` if the given value is an object, else `false`.\n */\n\nfunction isObject(value) {\n  return _typeof(value) === 'object' && value !== null;\n}\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n/**\n * Check if the given value is a plain object.\n * @param {*} value - The value to check.\n * @returns {boolean} Returns `true` if the given value is a plain object, else `false`.\n */\n\nfunction isPlainObject(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n\n  try {\n    var _constructor = value.constructor;\n    var prototype = _constructor.prototype;\n    return _constructor && prototype && hasOwnProperty.call(prototype, 'isPrototypeOf');\n  } catch (e) {\n    return false;\n  }\n}\n/**\n * Check if the given value is a function.\n * @param {*} value - The value to check.\n * @returns {boolean} Returns `true` if the given value is a function, else `false`.\n */\n\nfunction isFunction(value) {\n  return typeof value === 'function';\n}\n/**\n * Iterate the given data.\n * @param {*} data - The data to iterate.\n * @param {Function} callback - The process function for each element.\n * @returns {*} The original data.\n */\n\nfunction forEach(data, callback) {\n  if (data && isFunction(callback)) {\n    if (Array.isArray(data) || isNumber(data.length)\n    /* array-like */\n    ) {\n        var length = data.length;\n        var i;\n\n        for (i = 0; i < length; i += 1) {\n          if (callback.call(data, data[i], i, data) === false) {\n            break;\n          }\n        }\n      } else if (isObject(data)) {\n      Object.keys(data).forEach(function (key) {\n        callback.call(data, data[key], key, data);\n      });\n    }\n  }\n\n  return data;\n}\n/**\n * Extend the given object.\n * @param {*} obj - The object to be extended.\n * @param {*} args - The rest objects which will be merged to the first object.\n * @returns {Object} The extended object.\n */\n\nvar assign = Object.assign || function assign(obj) {\n  for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    args[_key - 1] = arguments[_key];\n  }\n\n  if (isObject(obj) && args.length > 0) {\n    args.forEach(function (arg) {\n      if (isObject(arg)) {\n        Object.keys(arg).forEach(function (key) {\n          obj[key] = arg[key];\n        });\n      }\n    });\n  }\n\n  return obj;\n};\nvar REGEXP_DECIMALS = /\\.\\d*(?:0|9){12}\\d*$/;\n/**\n * Normalize decimal number.\n * Check out {@link http://0.30000000000000004.com/}\n * @param {number} value - The value to normalize.\n * @param {number} [times=100000000000] - The times for normalizing.\n * @returns {number} Returns the normalized number.\n */\n\nfunction normalizeDecimalNumber(value) {\n  var times = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 100000000000;\n  return REGEXP_DECIMALS.test(value) ? Math.round(value * times) / times : value;\n}\nvar REGEXP_SUFFIX = /^(?:width|height|left|top|marginLeft|marginTop)$/;\n/**\n * Apply styles to the given element.\n * @param {Element} element - The target element.\n * @param {Object} styles - The styles for applying.\n */\n\nfunction setStyle(element, styles) {\n  var style = element.style;\n  forEach(styles, function (value, property) {\n    if (REGEXP_SUFFIX.test(property) && isNumber(value)) {\n      value += 'px';\n    }\n\n    style[property] = value;\n  });\n}\n/**\n * Check if the given element has a special class.\n * @param {Element} element - The element to check.\n * @param {string} value - The class to search.\n * @returns {boolean} Returns `true` if the special class was found.\n */\n\nfunction hasClass(element, value) {\n  return element.classList ? element.classList.contains(value) : element.className.indexOf(value) > -1;\n}\n/**\n * Add classes to the given element.\n * @param {Element} element - The target element.\n * @param {string} value - The classes to be added.\n */\n\nfunction addClass(element, value) {\n  if (!value) {\n    return;\n  }\n\n  if (isNumber(element.length)) {\n    forEach(element, function (elem) {\n      addClass(elem, value);\n    });\n    return;\n  }\n\n  if (element.classList) {\n    element.classList.add(value);\n    return;\n  }\n\n  var className = element.className.trim();\n\n  if (!className) {\n    element.className = value;\n  } else if (className.indexOf(value) < 0) {\n    element.className = \"\".concat(className, \" \").concat(value);\n  }\n}\n/**\n * Remove classes from the given element.\n * @param {Element} element - The target element.\n * @param {string} value - The classes to be removed.\n */\n\nfunction removeClass(element, value) {\n  if (!value) {\n    return;\n  }\n\n  if (isNumber(element.length)) {\n    forEach(element, function (elem) {\n      removeClass(elem, value);\n    });\n    return;\n  }\n\n  if (element.classList) {\n    element.classList.remove(value);\n    return;\n  }\n\n  if (element.className.indexOf(value) >= 0) {\n    element.className = element.className.replace(value, '');\n  }\n}\n/**\n * Add or remove classes from the given element.\n * @param {Element} element - The target element.\n * @param {string} value - The classes to be toggled.\n * @param {boolean} added - Add only.\n */\n\nfunction toggleClass(element, value, added) {\n  if (!value) {\n    return;\n  }\n\n  if (isNumber(element.length)) {\n    forEach(element, function (elem) {\n      toggleClass(elem, value, added);\n    });\n    return;\n  } // IE10-11 doesn't support the second parameter of `classList.toggle`\n\n\n  if (added) {\n    addClass(element, value);\n  } else {\n    removeClass(element, value);\n  }\n}\nvar REGEXP_HYPHENATE = /([a-z\\d])([A-Z])/g;\n/**\n * Transform the given string from camelCase to kebab-case\n * @param {string} value - The value to transform.\n * @returns {string} The transformed value.\n */\n\nfunction hyphenate(value) {\n  return value.replace(REGEXP_HYPHENATE, '$1-$2').toLowerCase();\n}\n/**\n * Get data from the given element.\n * @param {Element} element - The target element.\n * @param {string} name - The data key to get.\n * @returns {string} The data value.\n */\n\nfunction getData(element, name) {\n  if (isObject(element[name])) {\n    return element[name];\n  }\n\n  if (element.dataset) {\n    return element.dataset[name];\n  }\n\n  return element.getAttribute(\"data-\".concat(hyphenate(name)));\n}\n/**\n * Set data to the given element.\n * @param {Element} element - The target element.\n * @param {string} name - The data key to set.\n * @param {string} data - The data value.\n */\n\nfunction setData(element, name, data) {\n  if (isObject(data)) {\n    element[name] = data;\n  } else if (element.dataset) {\n    element.dataset[name] = data;\n  } else {\n    element.setAttribute(\"data-\".concat(hyphenate(name)), data);\n  }\n}\n/**\n * Remove data from the given element.\n * @param {Element} element - The target element.\n * @param {string} name - The data key to remove.\n */\n\nfunction removeData(element, name) {\n  if (isObject(element[name])) {\n    try {\n      delete element[name];\n    } catch (e) {\n      element[name] = undefined;\n    }\n  } else if (element.dataset) {\n    // #128 Safari not allows to delete dataset property\n    try {\n      delete element.dataset[name];\n    } catch (e) {\n      element.dataset[name] = undefined;\n    }\n  } else {\n    element.removeAttribute(\"data-\".concat(hyphenate(name)));\n  }\n}\nvar REGEXP_SPACES = /\\s\\s*/;\n\nvar onceSupported = function () {\n  var supported = false;\n\n  if (IN_BROWSER) {\n    var once = false;\n\n    var listener = function listener() {};\n\n    var options = Object.defineProperty({}, 'once', {\n      get: function get() {\n        supported = true;\n        return once;\n      },\n\n      /**\n       * This setter can fix a `TypeError` in strict mode\n       * {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Errors/Getter_only}\n       * @param {boolean} value - The value to set\n       */\n      set: function set(value) {\n        once = value;\n      }\n    });\n    WINDOW.addEventListener('test', listener, options);\n    WINDOW.removeEventListener('test', listener, options);\n  }\n\n  return supported;\n}();\n/**\n * Remove event listener from the target element.\n * @param {Element} element - The event target.\n * @param {string} type - The event type(s).\n * @param {Function} listener - The event listener.\n * @param {Object} options - The event options.\n */\n\n\nfunction removeListener(element, type, listener) {\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  var handler = listener;\n  type.trim().split(REGEXP_SPACES).forEach(function (event) {\n    if (!onceSupported) {\n      var listeners = element.listeners;\n\n      if (listeners && listeners[event] && listeners[event][listener]) {\n        handler = listeners[event][listener];\n        delete listeners[event][listener];\n\n        if (Object.keys(listeners[event]).length === 0) {\n          delete listeners[event];\n        }\n\n        if (Object.keys(listeners).length === 0) {\n          delete element.listeners;\n        }\n      }\n    }\n\n    element.removeEventListener(event, handler, options);\n  });\n}\n/**\n * Add event listener to the target element.\n * @param {Element} element - The event target.\n * @param {string} type - The event type(s).\n * @param {Function} listener - The event listener.\n * @param {Object} options - The event options.\n */\n\nfunction addListener(element, type, listener) {\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  var _handler = listener;\n  type.trim().split(REGEXP_SPACES).forEach(function (event) {\n    if (options.once && !onceSupported) {\n      var _element$listeners = element.listeners,\n          listeners = _element$listeners === void 0 ? {} : _element$listeners;\n\n      _handler = function handler() {\n        delete listeners[event][listener];\n        element.removeEventListener(event, _handler, options);\n\n        for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n          args[_key2] = arguments[_key2];\n        }\n\n        listener.apply(element, args);\n      };\n\n      if (!listeners[event]) {\n        listeners[event] = {};\n      }\n\n      if (listeners[event][listener]) {\n        element.removeEventListener(event, listeners[event][listener], options);\n      }\n\n      listeners[event][listener] = _handler;\n      element.listeners = listeners;\n    }\n\n    element.addEventListener(event, _handler, options);\n  });\n}\n/**\n * Dispatch event on the target element.\n * @param {Element} element - The event target.\n * @param {string} type - The event type(s).\n * @param {Object} data - The additional event data.\n * @returns {boolean} Indicate if the event is default prevented or not.\n */\n\nfunction dispatchEvent(element, type, data) {\n  var event; // Event and CustomEvent on IE9-11 are global objects, not constructors\n\n  if (isFunction(Event) && isFunction(CustomEvent)) {\n    event = new CustomEvent(type, {\n      detail: data,\n      bubbles: true,\n      cancelable: true\n    });\n  } else {\n    event = document.createEvent('CustomEvent');\n    event.initCustomEvent(type, true, true, data);\n  }\n\n  return element.dispatchEvent(event);\n}\n/**\n * Get the offset base on the document.\n * @param {Element} element - The target element.\n * @returns {Object} The offset data.\n */\n\nfunction getOffset(element) {\n  var box = element.getBoundingClientRect();\n  return {\n    left: box.left + (window.pageXOffset - document.documentElement.clientLeft),\n    top: box.top + (window.pageYOffset - document.documentElement.clientTop)\n  };\n}\nvar location = WINDOW.location;\nvar REGEXP_ORIGINS = /^(https?:)\\/\\/([^:/?#]+):?(\\d*)/i;\n/**\n * Check if the given URL is a cross origin URL.\n * @param {string} url - The target URL.\n * @returns {boolean} Returns `true` if the given URL is a cross origin URL, else `false`.\n */\n\nfunction isCrossOriginURL(url) {\n  var parts = url.match(REGEXP_ORIGINS);\n  return parts && (parts[1] !== location.protocol || parts[2] !== location.hostname || parts[3] !== location.port);\n}\n/**\n * Add timestamp to the given URL.\n * @param {string} url - The target URL.\n * @returns {string} The result URL.\n */\n\nfunction addTimestamp(url) {\n  var timestamp = \"timestamp=\".concat(new Date().getTime());\n  return url + (url.indexOf('?') === -1 ? '?' : '&') + timestamp;\n}\n/**\n * Get transforms base on the given object.\n * @param {Object} obj - The target object.\n * @returns {string} A string contains transform values.\n */\n\nfunction getTransforms(_ref) {\n  var rotate = _ref.rotate,\n      scaleX = _ref.scaleX,\n      scaleY = _ref.scaleY,\n      translateX = _ref.translateX,\n      translateY = _ref.translateY;\n  var values = [];\n\n  if (isNumber(translateX) && translateX !== 0) {\n    values.push(\"translateX(\".concat(translateX, \"px)\"));\n  }\n\n  if (isNumber(translateY) && translateY !== 0) {\n    values.push(\"translateY(\".concat(translateY, \"px)\"));\n  } // Rotate should come first before scale to match orientation transform\n\n\n  if (isNumber(rotate) && rotate !== 0) {\n    values.push(\"rotate(\".concat(rotate, \"deg)\"));\n  }\n\n  if (isNumber(scaleX) && scaleX !== 1) {\n    values.push(\"scaleX(\".concat(scaleX, \")\"));\n  }\n\n  if (isNumber(scaleY) && scaleY !== 1) {\n    values.push(\"scaleY(\".concat(scaleY, \")\"));\n  }\n\n  var transform = values.length ? values.join(' ') : 'none';\n  return {\n    WebkitTransform: transform,\n    msTransform: transform,\n    transform: transform\n  };\n}\n/**\n * Get the max ratio of a group of pointers.\n * @param {string} pointers - The target pointers.\n * @returns {number} The result ratio.\n */\n\nfunction getMaxZoomRatio(pointers) {\n  var pointers2 = assign({}, pointers);\n  var ratios = [];\n  forEach(pointers, function (pointer, pointerId) {\n    delete pointers2[pointerId];\n    forEach(pointers2, function (pointer2) {\n      var x1 = Math.abs(pointer.startX - pointer2.startX);\n      var y1 = Math.abs(pointer.startY - pointer2.startY);\n      var x2 = Math.abs(pointer.endX - pointer2.endX);\n      var y2 = Math.abs(pointer.endY - pointer2.endY);\n      var z1 = Math.sqrt(x1 * x1 + y1 * y1);\n      var z2 = Math.sqrt(x2 * x2 + y2 * y2);\n      var ratio = (z2 - z1) / z1;\n      ratios.push(ratio);\n    });\n  });\n  ratios.sort(function (a, b) {\n    return Math.abs(a) < Math.abs(b);\n  });\n  return ratios[0];\n}\n/**\n * Get a pointer from an event object.\n * @param {Object} event - The target event object.\n * @param {boolean} endOnly - Indicates if only returns the end point coordinate or not.\n * @returns {Object} The result pointer contains start and/or end point coordinates.\n */\n\nfunction getPointer(_ref2, endOnly) {\n  var pageX = _ref2.pageX,\n      pageY = _ref2.pageY;\n  var end = {\n    endX: pageX,\n    endY: pageY\n  };\n  return endOnly ? end : assign({\n    startX: pageX,\n    startY: pageY\n  }, end);\n}\n/**\n * Get the center point coordinate of a group of pointers.\n * @param {Object} pointers - The target pointers.\n * @returns {Object} The center point coordinate.\n */\n\nfunction getPointersCenter(pointers) {\n  var pageX = 0;\n  var pageY = 0;\n  var count = 0;\n  forEach(pointers, function (_ref3) {\n    var startX = _ref3.startX,\n        startY = _ref3.startY;\n    pageX += startX;\n    pageY += startY;\n    count += 1;\n  });\n  pageX /= count;\n  pageY /= count;\n  return {\n    pageX: pageX,\n    pageY: pageY\n  };\n}\n/**\n * Check if the given value is a finite number.\n */\n\nvar isFinite = Number.isFinite || WINDOW.isFinite;\n/**\n * Get the max sizes in a rectangle under the given aspect ratio.\n * @param {Object} data - The original sizes.\n * @param {string} [type='contain'] - The adjust type.\n * @returns {Object} The result sizes.\n */\n\nfunction getAdjustedSizes(_ref4) // or 'cover'\n{\n  var aspectRatio = _ref4.aspectRatio,\n      height = _ref4.height,\n      width = _ref4.width;\n  var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'contain';\n\n  var isValidNumber = function isValidNumber(value) {\n    return isFinite(value) && value > 0;\n  };\n\n  if (isValidNumber(width) && isValidNumber(height)) {\n    var adjustedWidth = height * aspectRatio;\n\n    if (type === 'contain' && adjustedWidth > width || type === 'cover' && adjustedWidth < width) {\n      height = width / aspectRatio;\n    } else {\n      width = height * aspectRatio;\n    }\n  } else if (isValidNumber(width)) {\n    height = width / aspectRatio;\n  } else if (isValidNumber(height)) {\n    width = height * aspectRatio;\n  }\n\n  return {\n    width: width,\n    height: height\n  };\n}\n/**\n * Get the new sizes of a rectangle after rotated.\n * @param {Object} data - The original sizes.\n * @returns {Object} The result sizes.\n */\n\nfunction getRotatedSizes(_ref5) {\n  var width = _ref5.width,\n      height = _ref5.height,\n      degree = _ref5.degree;\n  degree = Math.abs(degree) % 180;\n\n  if (degree === 90) {\n    return {\n      width: height,\n      height: width\n    };\n  }\n\n  var arc = degree % 90 * Math.PI / 180;\n  var sinArc = Math.sin(arc);\n  var cosArc = Math.cos(arc);\n  var newWidth = width * cosArc + height * sinArc;\n  var newHeight = width * sinArc + height * cosArc;\n  return degree > 90 ? {\n    width: newHeight,\n    height: newWidth\n  } : {\n    width: newWidth,\n    height: newHeight\n  };\n}\n/**\n * Get a canvas which drew the given image.\n * @param {HTMLImageElement} image - The image for drawing.\n * @param {Object} imageData - The image data.\n * @param {Object} canvasData - The canvas data.\n * @param {Object} options - The options.\n * @returns {HTMLCanvasElement} The result canvas.\n */\n\nfunction getSourceCanvas(image, _ref6, _ref7, _ref8) {\n  var imageAspectRatio = _ref6.aspectRatio,\n      imageNaturalWidth = _ref6.naturalWidth,\n      imageNaturalHeight = _ref6.naturalHeight,\n      _ref6$rotate = _ref6.rotate,\n      rotate = _ref6$rotate === void 0 ? 0 : _ref6$rotate,\n      _ref6$scaleX = _ref6.scaleX,\n      scaleX = _ref6$scaleX === void 0 ? 1 : _ref6$scaleX,\n      _ref6$scaleY = _ref6.scaleY,\n      scaleY = _ref6$scaleY === void 0 ? 1 : _ref6$scaleY;\n  var aspectRatio = _ref7.aspectRatio,\n      naturalWidth = _ref7.naturalWidth,\n      naturalHeight = _ref7.naturalHeight;\n  var _ref8$fillColor = _ref8.fillColor,\n      fillColor = _ref8$fillColor === void 0 ? 'transparent' : _ref8$fillColor,\n      _ref8$imageSmoothingE = _ref8.imageSmoothingEnabled,\n      imageSmoothingEnabled = _ref8$imageSmoothingE === void 0 ? true : _ref8$imageSmoothingE,\n      _ref8$imageSmoothingQ = _ref8.imageSmoothingQuality,\n      imageSmoothingQuality = _ref8$imageSmoothingQ === void 0 ? 'low' : _ref8$imageSmoothingQ,\n      _ref8$maxWidth = _ref8.maxWidth,\n      maxWidth = _ref8$maxWidth === void 0 ? Infinity : _ref8$maxWidth,\n      _ref8$maxHeight = _ref8.maxHeight,\n      maxHeight = _ref8$maxHeight === void 0 ? Infinity : _ref8$maxHeight,\n      _ref8$minWidth = _ref8.minWidth,\n      minWidth = _ref8$minWidth === void 0 ? 0 : _ref8$minWidth,\n      _ref8$minHeight = _ref8.minHeight,\n      minHeight = _ref8$minHeight === void 0 ? 0 : _ref8$minHeight;\n  var canvas = document.createElement('canvas');\n  var context = canvas.getContext('2d');\n  var maxSizes = getAdjustedSizes({\n    aspectRatio: aspectRatio,\n    width: maxWidth,\n    height: maxHeight\n  });\n  var minSizes = getAdjustedSizes({\n    aspectRatio: aspectRatio,\n    width: minWidth,\n    height: minHeight\n  }, 'cover');\n  var width = Math.min(maxSizes.width, Math.max(minSizes.width, naturalWidth));\n  var height = Math.min(maxSizes.height, Math.max(minSizes.height, naturalHeight)); // Note: should always use image's natural sizes for drawing as\n  // imageData.naturalWidth === canvasData.naturalHeight when rotate % 180 === 90\n\n  var destMaxSizes = getAdjustedSizes({\n    aspectRatio: imageAspectRatio,\n    width: maxWidth,\n    height: maxHeight\n  });\n  var destMinSizes = getAdjustedSizes({\n    aspectRatio: imageAspectRatio,\n    width: minWidth,\n    height: minHeight\n  }, 'cover');\n  var destWidth = Math.min(destMaxSizes.width, Math.max(destMinSizes.width, imageNaturalWidth));\n  var destHeight = Math.min(destMaxSizes.height, Math.max(destMinSizes.height, imageNaturalHeight));\n  var params = [-destWidth / 2, -destHeight / 2, destWidth, destHeight];\n  canvas.width = normalizeDecimalNumber(width);\n  canvas.height = normalizeDecimalNumber(height);\n  context.fillStyle = fillColor;\n  context.fillRect(0, 0, width, height);\n  context.save();\n  context.translate(width / 2, height / 2);\n  context.rotate(rotate * Math.PI / 180);\n  context.scale(scaleX, scaleY);\n  context.imageSmoothingEnabled = imageSmoothingEnabled;\n  context.imageSmoothingQuality = imageSmoothingQuality;\n  context.drawImage.apply(context, [image].concat(_toConsumableArray(params.map(function (param) {\n    return Math.floor(normalizeDecimalNumber(param));\n  }))));\n  context.restore();\n  return canvas;\n}\nvar fromCharCode = String.fromCharCode;\n/**\n * Get string from char code in data view.\n * @param {DataView} dataView - The data view for read.\n * @param {number} start - The start index.\n * @param {number} length - The read length.\n * @returns {string} The read result.\n */\n\nfunction getStringFromCharCode(dataView, start, length) {\n  var str = '';\n  var i;\n  length += start;\n\n  for (i = start; i < length; i += 1) {\n    str += fromCharCode(dataView.getUint8(i));\n  }\n\n  return str;\n}\nvar REGEXP_DATA_URL_HEAD = /^data:.*,/;\n/**\n * Transform Data URL to array buffer.\n * @param {string} dataURL - The Data URL to transform.\n * @returns {ArrayBuffer} The result array buffer.\n */\n\nfunction dataURLToArrayBuffer(dataURL) {\n  var base64 = dataURL.replace(REGEXP_DATA_URL_HEAD, '');\n  var binary = atob(base64);\n  var arrayBuffer = new ArrayBuffer(binary.length);\n  var uint8 = new Uint8Array(arrayBuffer);\n  forEach(uint8, function (value, i) {\n    uint8[i] = binary.charCodeAt(i);\n  });\n  return arrayBuffer;\n}\n/**\n * Transform array buffer to Data URL.\n * @param {ArrayBuffer} arrayBuffer - The array buffer to transform.\n * @param {string} mimeType - The mime type of the Data URL.\n * @returns {string} The result Data URL.\n */\n\nfunction arrayBufferToDataURL(arrayBuffer, mimeType) {\n  var chunks = [];\n  var chunkSize = 8192;\n  var uint8 = new Uint8Array(arrayBuffer);\n\n  while (uint8.length > 0) {\n    chunks.push(fromCharCode.apply(void 0, _toConsumableArray(uint8.subarray(0, chunkSize))));\n    uint8 = uint8.subarray(chunkSize);\n  }\n\n  return \"data:\".concat(mimeType, \";base64,\").concat(btoa(chunks.join('')));\n}\n/**\n * Get orientation value from given array buffer.\n * @param {ArrayBuffer} arrayBuffer - The array buffer to read.\n * @returns {number} The read orientation value.\n */\n\nfunction resetAndGetOrientation(arrayBuffer) {\n  var dataView = new DataView(arrayBuffer);\n  var orientation; // Ignores range error when the image does not have correct Exif information\n\n  try {\n    var littleEndian;\n    var app1Start;\n    var ifdStart; // Only handle JPEG image (start by 0xFFD8)\n\n    if (dataView.getUint8(0) === 0xFF && dataView.getUint8(1) === 0xD8) {\n      var length = dataView.byteLength;\n      var offset = 2;\n\n      while (offset + 1 < length) {\n        if (dataView.getUint8(offset) === 0xFF && dataView.getUint8(offset + 1) === 0xE1) {\n          app1Start = offset;\n          break;\n        }\n\n        offset += 1;\n      }\n    }\n\n    if (app1Start) {\n      var exifIDCode = app1Start + 4;\n      var tiffOffset = app1Start + 10;\n\n      if (getStringFromCharCode(dataView, exifIDCode, 4) === 'Exif') {\n        var endianness = dataView.getUint16(tiffOffset);\n        littleEndian = endianness === 0x4949;\n\n        if (littleEndian || endianness === 0x4D4D\n        /* bigEndian */\n        ) {\n            if (dataView.getUint16(tiffOffset + 2, littleEndian) === 0x002A) {\n              var firstIFDOffset = dataView.getUint32(tiffOffset + 4, littleEndian);\n\n              if (firstIFDOffset >= 0x00000008) {\n                ifdStart = tiffOffset + firstIFDOffset;\n              }\n            }\n          }\n      }\n    }\n\n    if (ifdStart) {\n      var _length = dataView.getUint16(ifdStart, littleEndian);\n\n      var _offset;\n\n      var i;\n\n      for (i = 0; i < _length; i += 1) {\n        _offset = ifdStart + i * 12 + 2;\n\n        if (dataView.getUint16(_offset, littleEndian) === 0x0112\n        /* Orientation */\n        ) {\n            // 8 is the offset of the current tag's value\n            _offset += 8; // Get the original orientation value\n\n            orientation = dataView.getUint16(_offset, littleEndian); // Override the orientation with its default value\n\n            dataView.setUint16(_offset, 1, littleEndian);\n            break;\n          }\n      }\n    }\n  } catch (e) {\n    orientation = 1;\n  }\n\n  return orientation;\n}\n/**\n * Parse Exif Orientation value.\n * @param {number} orientation - The orientation to parse.\n * @returns {Object} The parsed result.\n */\n\nfunction parseOrientation(orientation) {\n  var rotate = 0;\n  var scaleX = 1;\n  var scaleY = 1;\n\n  switch (orientation) {\n    // Flip horizontal\n    case 2:\n      scaleX = -1;\n      break;\n    // Rotate left 180°\n\n    case 3:\n      rotate = -180;\n      break;\n    // Flip vertical\n\n    case 4:\n      scaleY = -1;\n      break;\n    // Flip vertical and rotate right 90°\n\n    case 5:\n      rotate = 90;\n      scaleY = -1;\n      break;\n    // Rotate right 90°\n\n    case 6:\n      rotate = 90;\n      break;\n    // Flip horizontal and rotate right 90°\n\n    case 7:\n      rotate = 90;\n      scaleX = -1;\n      break;\n    // Rotate left 90°\n\n    case 8:\n      rotate = -90;\n      break;\n\n    default:\n  }\n\n  return {\n    rotate: rotate,\n    scaleX: scaleX,\n    scaleY: scaleY\n  };\n}\n\nvar render = {\n  render: function render() {\n    this.initContainer();\n    this.initCanvas();\n    this.initCropBox();\n    this.renderCanvas();\n\n    if (this.cropped) {\n      this.renderCropBox();\n    }\n  },\n  initContainer: function initContainer() {\n    var element = this.element,\n        options = this.options,\n        container = this.container,\n        cropper = this.cropper;\n    addClass(cropper, CLASS_HIDDEN);\n    removeClass(element, CLASS_HIDDEN);\n    var containerData = {\n      width: Math.max(container.offsetWidth, Number(options.minContainerWidth) || 200),\n      height: Math.max(container.offsetHeight, Number(options.minContainerHeight) || 100)\n    };\n    this.containerData = containerData;\n    setStyle(cropper, {\n      width: containerData.width,\n      height: containerData.height\n    });\n    addClass(element, CLASS_HIDDEN);\n    removeClass(cropper, CLASS_HIDDEN);\n  },\n  // Canvas (image wrapper)\n  initCanvas: function initCanvas() {\n    var containerData = this.containerData,\n        imageData = this.imageData;\n    var viewMode = this.options.viewMode;\n    var rotated = Math.abs(imageData.rotate) % 180 === 90;\n    var naturalWidth = rotated ? imageData.naturalHeight : imageData.naturalWidth;\n    var naturalHeight = rotated ? imageData.naturalWidth : imageData.naturalHeight;\n    var aspectRatio = naturalWidth / naturalHeight;\n    var canvasWidth = containerData.width;\n    var canvasHeight = containerData.height;\n\n    if (containerData.height * aspectRatio > containerData.width) {\n      if (viewMode === 3) {\n        canvasWidth = containerData.height * aspectRatio;\n      } else {\n        canvasHeight = containerData.width / aspectRatio;\n      }\n    } else if (viewMode === 3) {\n      canvasHeight = containerData.width / aspectRatio;\n    } else {\n      canvasWidth = containerData.height * aspectRatio;\n    }\n\n    var canvasData = {\n      aspectRatio: aspectRatio,\n      naturalWidth: naturalWidth,\n      naturalHeight: naturalHeight,\n      width: canvasWidth,\n      height: canvasHeight\n    };\n    canvasData.left = (containerData.width - canvasWidth) / 2;\n    canvasData.top = (containerData.height - canvasHeight) / 2;\n    canvasData.oldLeft = canvasData.left;\n    canvasData.oldTop = canvasData.top;\n    this.canvasData = canvasData;\n    this.limited = viewMode === 1 || viewMode === 2;\n    this.limitCanvas(true, true);\n    this.initialImageData = assign({}, imageData);\n    this.initialCanvasData = assign({}, canvasData);\n  },\n  limitCanvas: function limitCanvas(sizeLimited, positionLimited) {\n    var options = this.options,\n        containerData = this.containerData,\n        canvasData = this.canvasData,\n        cropBoxData = this.cropBoxData;\n    var viewMode = options.viewMode;\n    var aspectRatio = canvasData.aspectRatio;\n    var cropped = this.cropped && cropBoxData;\n\n    if (sizeLimited) {\n      var minCanvasWidth = Number(options.minCanvasWidth) || 0;\n      var minCanvasHeight = Number(options.minCanvasHeight) || 0;\n\n      if (viewMode > 1) {\n        minCanvasWidth = Math.max(minCanvasWidth, containerData.width);\n        minCanvasHeight = Math.max(minCanvasHeight, containerData.height);\n\n        if (viewMode === 3) {\n          if (minCanvasHeight * aspectRatio > minCanvasWidth) {\n            minCanvasWidth = minCanvasHeight * aspectRatio;\n          } else {\n            minCanvasHeight = minCanvasWidth / aspectRatio;\n          }\n        }\n      } else if (viewMode > 0) {\n        if (minCanvasWidth) {\n          minCanvasWidth = Math.max(minCanvasWidth, cropped ? cropBoxData.width : 0);\n        } else if (minCanvasHeight) {\n          minCanvasHeight = Math.max(minCanvasHeight, cropped ? cropBoxData.height : 0);\n        } else if (cropped) {\n          minCanvasWidth = cropBoxData.width;\n          minCanvasHeight = cropBoxData.height;\n\n          if (minCanvasHeight * aspectRatio > minCanvasWidth) {\n            minCanvasWidth = minCanvasHeight * aspectRatio;\n          } else {\n            minCanvasHeight = minCanvasWidth / aspectRatio;\n          }\n        }\n      }\n\n      var _getAdjustedSizes = getAdjustedSizes({\n        aspectRatio: aspectRatio,\n        width: minCanvasWidth,\n        height: minCanvasHeight\n      });\n\n      minCanvasWidth = _getAdjustedSizes.width;\n      minCanvasHeight = _getAdjustedSizes.height;\n      canvasData.minWidth = minCanvasWidth;\n      canvasData.minHeight = minCanvasHeight;\n      canvasData.maxWidth = Infinity;\n      canvasData.maxHeight = Infinity;\n    }\n\n    if (positionLimited) {\n      if (viewMode > (cropped ? 0 : 1)) {\n        var newCanvasLeft = containerData.width - canvasData.width;\n        var newCanvasTop = containerData.height - canvasData.height;\n        canvasData.minLeft = Math.min(0, newCanvasLeft);\n        canvasData.minTop = Math.min(0, newCanvasTop);\n        canvasData.maxLeft = Math.max(0, newCanvasLeft);\n        canvasData.maxTop = Math.max(0, newCanvasTop);\n\n        if (cropped && this.limited) {\n          canvasData.minLeft = Math.min(cropBoxData.left, cropBoxData.left + (cropBoxData.width - canvasData.width));\n          canvasData.minTop = Math.min(cropBoxData.top, cropBoxData.top + (cropBoxData.height - canvasData.height));\n          canvasData.maxLeft = cropBoxData.left;\n          canvasData.maxTop = cropBoxData.top;\n\n          if (viewMode === 2) {\n            if (canvasData.width >= containerData.width) {\n              canvasData.minLeft = Math.min(0, newCanvasLeft);\n              canvasData.maxLeft = Math.max(0, newCanvasLeft);\n            }\n\n            if (canvasData.height >= containerData.height) {\n              canvasData.minTop = Math.min(0, newCanvasTop);\n              canvasData.maxTop = Math.max(0, newCanvasTop);\n            }\n          }\n        }\n      } else {\n        canvasData.minLeft = -canvasData.width;\n        canvasData.minTop = -canvasData.height;\n        canvasData.maxLeft = containerData.width;\n        canvasData.maxTop = containerData.height;\n      }\n    }\n  },\n  renderCanvas: function renderCanvas(changed, transformed) {\n    var canvasData = this.canvasData,\n        imageData = this.imageData;\n\n    if (transformed) {\n      var _getRotatedSizes = getRotatedSizes({\n        width: imageData.naturalWidth * Math.abs(imageData.scaleX || 1),\n        height: imageData.naturalHeight * Math.abs(imageData.scaleY || 1),\n        degree: imageData.rotate || 0\n      }),\n          naturalWidth = _getRotatedSizes.width,\n          naturalHeight = _getRotatedSizes.height;\n\n      var width = canvasData.width * (naturalWidth / canvasData.naturalWidth);\n      var height = canvasData.height * (naturalHeight / canvasData.naturalHeight);\n      canvasData.left -= (width - canvasData.width) / 2;\n      canvasData.top -= (height - canvasData.height) / 2;\n      canvasData.width = width;\n      canvasData.height = height;\n      canvasData.aspectRatio = naturalWidth / naturalHeight;\n      canvasData.naturalWidth = naturalWidth;\n      canvasData.naturalHeight = naturalHeight;\n      this.limitCanvas(true, false);\n    }\n\n    if (canvasData.width > canvasData.maxWidth || canvasData.width < canvasData.minWidth) {\n      canvasData.left = canvasData.oldLeft;\n    }\n\n    if (canvasData.height > canvasData.maxHeight || canvasData.height < canvasData.minHeight) {\n      canvasData.top = canvasData.oldTop;\n    }\n\n    canvasData.width = Math.min(Math.max(canvasData.width, canvasData.minWidth), canvasData.maxWidth);\n    canvasData.height = Math.min(Math.max(canvasData.height, canvasData.minHeight), canvasData.maxHeight);\n    this.limitCanvas(false, true);\n    canvasData.left = Math.min(Math.max(canvasData.left, canvasData.minLeft), canvasData.maxLeft);\n    canvasData.top = Math.min(Math.max(canvasData.top, canvasData.minTop), canvasData.maxTop);\n    canvasData.oldLeft = canvasData.left;\n    canvasData.oldTop = canvasData.top;\n    setStyle(this.canvas, assign({\n      width: canvasData.width,\n      height: canvasData.height\n    }, getTransforms({\n      translateX: canvasData.left,\n      translateY: canvasData.top\n    })));\n    this.renderImage(changed);\n\n    if (this.cropped && this.limited) {\n      this.limitCropBox(true, true);\n    }\n  },\n  renderImage: function renderImage(changed) {\n    var canvasData = this.canvasData,\n        imageData = this.imageData;\n    var width = imageData.naturalWidth * (canvasData.width / canvasData.naturalWidth);\n    var height = imageData.naturalHeight * (canvasData.height / canvasData.naturalHeight);\n    assign(imageData, {\n      width: width,\n      height: height,\n      left: (canvasData.width - width) / 2,\n      top: (canvasData.height - height) / 2\n    });\n    setStyle(this.image, assign({\n      width: imageData.width,\n      height: imageData.height\n    }, getTransforms(assign({\n      translateX: imageData.left,\n      translateY: imageData.top\n    }, imageData))));\n\n    if (changed) {\n      this.output();\n    }\n  },\n  initCropBox: function initCropBox() {\n    var options = this.options,\n        canvasData = this.canvasData;\n    var aspectRatio = options.aspectRatio || options.initialAspectRatio;\n    var autoCropArea = Number(options.autoCropArea) || 0.8;\n    var cropBoxData = {\n      width: canvasData.width,\n      height: canvasData.height\n    };\n\n    if (aspectRatio) {\n      if (canvasData.height * aspectRatio > canvasData.width) {\n        cropBoxData.height = cropBoxData.width / aspectRatio;\n      } else {\n        cropBoxData.width = cropBoxData.height * aspectRatio;\n      }\n    }\n\n    this.cropBoxData = cropBoxData;\n    this.limitCropBox(true, true); // Initialize auto crop area\n\n    cropBoxData.width = Math.min(Math.max(cropBoxData.width, cropBoxData.minWidth), cropBoxData.maxWidth);\n    cropBoxData.height = Math.min(Math.max(cropBoxData.height, cropBoxData.minHeight), cropBoxData.maxHeight); // The width/height of auto crop area must large than \"minWidth/Height\"\n\n    cropBoxData.width = Math.max(cropBoxData.minWidth, cropBoxData.width * autoCropArea);\n    cropBoxData.height = Math.max(cropBoxData.minHeight, cropBoxData.height * autoCropArea);\n    cropBoxData.left = canvasData.left + (canvasData.width - cropBoxData.width) / 2;\n    cropBoxData.top = canvasData.top + (canvasData.height - cropBoxData.height) / 2;\n    cropBoxData.oldLeft = cropBoxData.left;\n    cropBoxData.oldTop = cropBoxData.top;\n    this.initialCropBoxData = assign({}, cropBoxData);\n  },\n  limitCropBox: function limitCropBox(sizeLimited, positionLimited) {\n    var options = this.options,\n        containerData = this.containerData,\n        canvasData = this.canvasData,\n        cropBoxData = this.cropBoxData,\n        limited = this.limited;\n    var aspectRatio = options.aspectRatio;\n\n    if (sizeLimited) {\n      var minCropBoxWidth = Number(options.minCropBoxWidth) || 0;\n      var minCropBoxHeight = Number(options.minCropBoxHeight) || 0;\n      var maxCropBoxWidth = limited ? Math.min(containerData.width, canvasData.width, canvasData.width + canvasData.left, containerData.width - canvasData.left) : containerData.width;\n      var maxCropBoxHeight = limited ? Math.min(containerData.height, canvasData.height, canvasData.height + canvasData.top, containerData.height - canvasData.top) : containerData.height; // The min/maxCropBoxWidth/Height must be less than container's width/height\n\n      minCropBoxWidth = Math.min(minCropBoxWidth, containerData.width);\n      minCropBoxHeight = Math.min(minCropBoxHeight, containerData.height);\n\n      if (aspectRatio) {\n        if (minCropBoxWidth && minCropBoxHeight) {\n          if (minCropBoxHeight * aspectRatio > minCropBoxWidth) {\n            minCropBoxHeight = minCropBoxWidth / aspectRatio;\n          } else {\n            minCropBoxWidth = minCropBoxHeight * aspectRatio;\n          }\n        } else if (minCropBoxWidth) {\n          minCropBoxHeight = minCropBoxWidth / aspectRatio;\n        } else if (minCropBoxHeight) {\n          minCropBoxWidth = minCropBoxHeight * aspectRatio;\n        }\n\n        if (maxCropBoxHeight * aspectRatio > maxCropBoxWidth) {\n          maxCropBoxHeight = maxCropBoxWidth / aspectRatio;\n        } else {\n          maxCropBoxWidth = maxCropBoxHeight * aspectRatio;\n        }\n      } // The minWidth/Height must be less than maxWidth/Height\n\n\n      cropBoxData.minWidth = Math.min(minCropBoxWidth, maxCropBoxWidth);\n      cropBoxData.minHeight = Math.min(minCropBoxHeight, maxCropBoxHeight);\n      cropBoxData.maxWidth = maxCropBoxWidth;\n      cropBoxData.maxHeight = maxCropBoxHeight;\n    }\n\n    if (positionLimited) {\n      if (limited) {\n        cropBoxData.minLeft = Math.max(0, canvasData.left);\n        cropBoxData.minTop = Math.max(0, canvasData.top);\n        cropBoxData.maxLeft = Math.min(containerData.width, canvasData.left + canvasData.width) - cropBoxData.width;\n        cropBoxData.maxTop = Math.min(containerData.height, canvasData.top + canvasData.height) - cropBoxData.height;\n      } else {\n        cropBoxData.minLeft = 0;\n        cropBoxData.minTop = 0;\n        cropBoxData.maxLeft = containerData.width - cropBoxData.width;\n        cropBoxData.maxTop = containerData.height - cropBoxData.height;\n      }\n    }\n  },\n  renderCropBox: function renderCropBox() {\n    var options = this.options,\n        containerData = this.containerData,\n        cropBoxData = this.cropBoxData;\n\n    if (cropBoxData.width > cropBoxData.maxWidth || cropBoxData.width < cropBoxData.minWidth) {\n      cropBoxData.left = cropBoxData.oldLeft;\n    }\n\n    if (cropBoxData.height > cropBoxData.maxHeight || cropBoxData.height < cropBoxData.minHeight) {\n      cropBoxData.top = cropBoxData.oldTop;\n    }\n\n    cropBoxData.width = Math.min(Math.max(cropBoxData.width, cropBoxData.minWidth), cropBoxData.maxWidth);\n    cropBoxData.height = Math.min(Math.max(cropBoxData.height, cropBoxData.minHeight), cropBoxData.maxHeight);\n    this.limitCropBox(false, true);\n    cropBoxData.left = Math.min(Math.max(cropBoxData.left, cropBoxData.minLeft), cropBoxData.maxLeft);\n    cropBoxData.top = Math.min(Math.max(cropBoxData.top, cropBoxData.minTop), cropBoxData.maxTop);\n    cropBoxData.oldLeft = cropBoxData.left;\n    cropBoxData.oldTop = cropBoxData.top;\n\n    if (options.movable && options.cropBoxMovable) {\n      // Turn to move the canvas when the crop box is equal to the container\n      setData(this.face, DATA_ACTION, cropBoxData.width >= containerData.width && cropBoxData.height >= containerData.height ? ACTION_MOVE : ACTION_ALL);\n    }\n\n    setStyle(this.cropBox, assign({\n      width: cropBoxData.width,\n      height: cropBoxData.height\n    }, getTransforms({\n      translateX: cropBoxData.left,\n      translateY: cropBoxData.top\n    })));\n\n    if (this.cropped && this.limited) {\n      this.limitCanvas(true, true);\n    }\n\n    if (!this.disabled) {\n      this.output();\n    }\n  },\n  output: function output() {\n    this.preview();\n    dispatchEvent(this.element, EVENT_CROP, this.getData());\n  }\n};\n\nvar preview = {\n  initPreview: function initPreview() {\n    var crossOrigin = this.crossOrigin;\n    var preview = this.options.preview;\n    var url = crossOrigin ? this.crossOriginUrl : this.url;\n    var image = document.createElement('img');\n\n    if (crossOrigin) {\n      image.crossOrigin = crossOrigin;\n    }\n\n    image.src = url;\n    this.viewBox.appendChild(image);\n    this.viewBoxImage = image;\n\n    if (!preview) {\n      return;\n    }\n\n    var previews = preview;\n\n    if (typeof preview === 'string') {\n      previews = this.element.ownerDocument.querySelectorAll(preview);\n    } else if (preview.querySelector) {\n      previews = [preview];\n    }\n\n    this.previews = previews;\n    forEach(previews, function (el) {\n      var img = document.createElement('img'); // Save the original size for recover\n\n      setData(el, DATA_PREVIEW, {\n        width: el.offsetWidth,\n        height: el.offsetHeight,\n        html: el.innerHTML\n      });\n\n      if (crossOrigin) {\n        img.crossOrigin = crossOrigin;\n      }\n\n      img.src = url;\n      /**\n       * Override img element styles\n       * Add `display:block` to avoid margin top issue\n       * Add `height:auto` to override `height` attribute on IE8\n       * (Occur only when margin-top <= -height)\n       */\n\n      img.style.cssText = 'display:block;' + 'width:100%;' + 'height:auto;' + 'min-width:0!important;' + 'min-height:0!important;' + 'max-width:none!important;' + 'max-height:none!important;' + 'image-orientation:0deg!important;\"';\n      el.innerHTML = '';\n      el.appendChild(img);\n    });\n  },\n  resetPreview: function resetPreview() {\n    forEach(this.previews, function (element) {\n      var data = getData(element, DATA_PREVIEW);\n      setStyle(element, {\n        width: data.width,\n        height: data.height\n      });\n      element.innerHTML = data.html;\n      removeData(element, DATA_PREVIEW);\n    });\n  },\n  preview: function preview() {\n    var imageData = this.imageData,\n        canvasData = this.canvasData,\n        cropBoxData = this.cropBoxData;\n    var cropBoxWidth = cropBoxData.width,\n        cropBoxHeight = cropBoxData.height;\n    var width = imageData.width,\n        height = imageData.height;\n    var left = cropBoxData.left - canvasData.left - imageData.left;\n    var top = cropBoxData.top - canvasData.top - imageData.top;\n\n    if (!this.cropped || this.disabled) {\n      return;\n    }\n\n    setStyle(this.viewBoxImage, assign({\n      width: width,\n      height: height\n    }, getTransforms(assign({\n      translateX: -left,\n      translateY: -top\n    }, imageData))));\n    forEach(this.previews, function (element) {\n      var data = getData(element, DATA_PREVIEW);\n      var originalWidth = data.width;\n      var originalHeight = data.height;\n      var newWidth = originalWidth;\n      var newHeight = originalHeight;\n      var ratio = 1;\n\n      if (cropBoxWidth) {\n        ratio = originalWidth / cropBoxWidth;\n        newHeight = cropBoxHeight * ratio;\n      }\n\n      if (cropBoxHeight && newHeight > originalHeight) {\n        ratio = originalHeight / cropBoxHeight;\n        newWidth = cropBoxWidth * ratio;\n        newHeight = originalHeight;\n      }\n\n      setStyle(element, {\n        width: newWidth,\n        height: newHeight\n      });\n      setStyle(element.getElementsByTagName('img')[0], assign({\n        width: width * ratio,\n        height: height * ratio\n      }, getTransforms(assign({\n        translateX: -left * ratio,\n        translateY: -top * ratio\n      }, imageData))));\n    });\n  }\n};\n\nvar events = {\n  bind: function bind() {\n    var element = this.element,\n        options = this.options,\n        cropper = this.cropper;\n\n    if (isFunction(options.cropstart)) {\n      addListener(element, EVENT_CROP_START, options.cropstart);\n    }\n\n    if (isFunction(options.cropmove)) {\n      addListener(element, EVENT_CROP_MOVE, options.cropmove);\n    }\n\n    if (isFunction(options.cropend)) {\n      addListener(element, EVENT_CROP_END, options.cropend);\n    }\n\n    if (isFunction(options.crop)) {\n      addListener(element, EVENT_CROP, options.crop);\n    }\n\n    if (isFunction(options.zoom)) {\n      addListener(element, EVENT_ZOOM, options.zoom);\n    }\n\n    addListener(cropper, EVENT_POINTER_DOWN, this.onCropStart = this.cropStart.bind(this));\n\n    if (options.zoomable && options.zoomOnWheel) {\n      addListener(cropper, EVENT_WHEEL, this.onWheel = this.wheel.bind(this));\n    }\n\n    if (options.toggleDragModeOnDblclick) {\n      addListener(cropper, EVENT_DBLCLICK, this.onDblclick = this.dblclick.bind(this));\n    }\n\n    addListener(element.ownerDocument, EVENT_POINTER_MOVE, this.onCropMove = this.cropMove.bind(this));\n    addListener(element.ownerDocument, EVENT_POINTER_UP, this.onCropEnd = this.cropEnd.bind(this));\n\n    if (options.responsive) {\n      addListener(window, EVENT_RESIZE, this.onResize = this.resize.bind(this));\n    }\n  },\n  unbind: function unbind() {\n    var element = this.element,\n        options = this.options,\n        cropper = this.cropper;\n\n    if (isFunction(options.cropstart)) {\n      removeListener(element, EVENT_CROP_START, options.cropstart);\n    }\n\n    if (isFunction(options.cropmove)) {\n      removeListener(element, EVENT_CROP_MOVE, options.cropmove);\n    }\n\n    if (isFunction(options.cropend)) {\n      removeListener(element, EVENT_CROP_END, options.cropend);\n    }\n\n    if (isFunction(options.crop)) {\n      removeListener(element, EVENT_CROP, options.crop);\n    }\n\n    if (isFunction(options.zoom)) {\n      removeListener(element, EVENT_ZOOM, options.zoom);\n    }\n\n    removeListener(cropper, EVENT_POINTER_DOWN, this.onCropStart);\n\n    if (options.zoomable && options.zoomOnWheel) {\n      removeListener(cropper, EVENT_WHEEL, this.onWheel);\n    }\n\n    if (options.toggleDragModeOnDblclick) {\n      removeListener(cropper, EVENT_DBLCLICK, this.onDblclick);\n    }\n\n    removeListener(element.ownerDocument, EVENT_POINTER_MOVE, this.onCropMove);\n    removeListener(element.ownerDocument, EVENT_POINTER_UP, this.onCropEnd);\n\n    if (options.responsive) {\n      removeListener(window, EVENT_RESIZE, this.onResize);\n    }\n  }\n};\n\nvar handlers = {\n  resize: function resize() {\n    var options = this.options,\n        container = this.container,\n        containerData = this.containerData;\n    var minContainerWidth = Number(options.minContainerWidth) || 200;\n    var minContainerHeight = Number(options.minContainerHeight) || 100;\n\n    if (this.disabled || containerData.width <= minContainerWidth || containerData.height <= minContainerHeight) {\n      return;\n    }\n\n    var ratio = container.offsetWidth / containerData.width; // Resize when width changed or height changed\n\n    if (ratio !== 1 || container.offsetHeight !== containerData.height) {\n      var canvasData;\n      var cropBoxData;\n\n      if (options.restore) {\n        canvasData = this.getCanvasData();\n        cropBoxData = this.getCropBoxData();\n      }\n\n      this.render();\n\n      if (options.restore) {\n        this.setCanvasData(forEach(canvasData, function (n, i) {\n          canvasData[i] = n * ratio;\n        }));\n        this.setCropBoxData(forEach(cropBoxData, function (n, i) {\n          cropBoxData[i] = n * ratio;\n        }));\n      }\n    }\n  },\n  dblclick: function dblclick() {\n    if (this.disabled || this.options.dragMode === DRAG_MODE_NONE) {\n      return;\n    }\n\n    this.setDragMode(hasClass(this.dragBox, CLASS_CROP) ? DRAG_MODE_MOVE : DRAG_MODE_CROP);\n  },\n  wheel: function wheel(e) {\n    var _this = this;\n\n    var ratio = Number(this.options.wheelZoomRatio) || 0.1;\n    var delta = 1;\n\n    if (this.disabled) {\n      return;\n    }\n\n    e.preventDefault(); // Limit wheel speed to prevent zoom too fast (#21)\n\n    if (this.wheeling) {\n      return;\n    }\n\n    this.wheeling = true;\n    setTimeout(function () {\n      _this.wheeling = false;\n    }, 50);\n\n    if (e.deltaY) {\n      delta = e.deltaY > 0 ? 1 : -1;\n    } else if (e.wheelDelta) {\n      delta = -e.wheelDelta / 120;\n    } else if (e.detail) {\n      delta = e.detail > 0 ? 1 : -1;\n    }\n\n    this.zoom(-delta * ratio, e);\n  },\n  cropStart: function cropStart(e) {\n    if (this.disabled) {\n      return;\n    }\n\n    var options = this.options,\n        pointers = this.pointers;\n    var action;\n\n    if (e.changedTouches) {\n      // Handle touch event\n      forEach(e.changedTouches, function (touch) {\n        pointers[touch.identifier] = getPointer(touch);\n      });\n    } else {\n      // Handle mouse event and pointer event\n      pointers[e.pointerId || 0] = getPointer(e);\n    }\n\n    if (Object.keys(pointers).length > 1 && options.zoomable && options.zoomOnTouch) {\n      action = ACTION_ZOOM;\n    } else {\n      action = getData(e.target, DATA_ACTION);\n    }\n\n    if (!REGEXP_ACTIONS.test(action)) {\n      return;\n    }\n\n    if (dispatchEvent(this.element, EVENT_CROP_START, {\n      originalEvent: e,\n      action: action\n    }) === false) {\n      return;\n    } // This line is required for preventing page zooming in iOS browsers\n\n\n    e.preventDefault();\n    this.action = action;\n    this.cropping = false;\n\n    if (action === ACTION_CROP) {\n      this.cropping = true;\n      addClass(this.dragBox, CLASS_MODAL);\n    }\n  },\n  cropMove: function cropMove(e) {\n    var action = this.action;\n\n    if (this.disabled || !action) {\n      return;\n    }\n\n    var pointers = this.pointers;\n    e.preventDefault();\n\n    if (dispatchEvent(this.element, EVENT_CROP_MOVE, {\n      originalEvent: e,\n      action: action\n    }) === false) {\n      return;\n    }\n\n    if (e.changedTouches) {\n      forEach(e.changedTouches, function (touch) {\n        // The first parameter should not be undefined (#432)\n        assign(pointers[touch.identifier] || {}, getPointer(touch, true));\n      });\n    } else {\n      assign(pointers[e.pointerId || 0] || {}, getPointer(e, true));\n    }\n\n    this.change(e);\n  },\n  cropEnd: function cropEnd(e) {\n    if (this.disabled) {\n      return;\n    }\n\n    var action = this.action,\n        pointers = this.pointers;\n\n    if (e.changedTouches) {\n      forEach(e.changedTouches, function (touch) {\n        delete pointers[touch.identifier];\n      });\n    } else {\n      delete pointers[e.pointerId || 0];\n    }\n\n    if (!action) {\n      return;\n    }\n\n    e.preventDefault();\n\n    if (!Object.keys(pointers).length) {\n      this.action = '';\n    }\n\n    if (this.cropping) {\n      this.cropping = false;\n      toggleClass(this.dragBox, CLASS_MODAL, this.cropped && this.options.modal);\n    }\n\n    dispatchEvent(this.element, EVENT_CROP_END, {\n      originalEvent: e,\n      action: action\n    });\n  }\n};\n\nvar change = {\n  change: function change(e) {\n    var options = this.options,\n        canvasData = this.canvasData,\n        containerData = this.containerData,\n        cropBoxData = this.cropBoxData,\n        pointers = this.pointers;\n    var action = this.action;\n    var aspectRatio = options.aspectRatio;\n    var left = cropBoxData.left,\n        top = cropBoxData.top,\n        width = cropBoxData.width,\n        height = cropBoxData.height;\n    var right = left + width;\n    var bottom = top + height;\n    var minLeft = 0;\n    var minTop = 0;\n    var maxWidth = containerData.width;\n    var maxHeight = containerData.height;\n    var renderable = true;\n    var offset; // Locking aspect ratio in \"free mode\" by holding shift key\n\n    if (!aspectRatio && e.shiftKey) {\n      aspectRatio = width && height ? width / height : 1;\n    }\n\n    if (this.limited) {\n      minLeft = cropBoxData.minLeft;\n      minTop = cropBoxData.minTop;\n      maxWidth = minLeft + Math.min(containerData.width, canvasData.width, canvasData.left + canvasData.width);\n      maxHeight = minTop + Math.min(containerData.height, canvasData.height, canvasData.top + canvasData.height);\n    }\n\n    var pointer = pointers[Object.keys(pointers)[0]];\n    var range = {\n      x: pointer.endX - pointer.startX,\n      y: pointer.endY - pointer.startY\n    };\n\n    var check = function check(side) {\n      switch (side) {\n        case ACTION_EAST:\n          if (right + range.x > maxWidth) {\n            range.x = maxWidth - right;\n          }\n\n          break;\n\n        case ACTION_WEST:\n          if (left + range.x < minLeft) {\n            range.x = minLeft - left;\n          }\n\n          break;\n\n        case ACTION_NORTH:\n          if (top + range.y < minTop) {\n            range.y = minTop - top;\n          }\n\n          break;\n\n        case ACTION_SOUTH:\n          if (bottom + range.y > maxHeight) {\n            range.y = maxHeight - bottom;\n          }\n\n          break;\n\n        default:\n      }\n    };\n\n    switch (action) {\n      // Move crop box\n      case ACTION_ALL:\n        left += range.x;\n        top += range.y;\n        break;\n      // Resize crop box\n\n      case ACTION_EAST:\n        if (range.x >= 0 && (right >= maxWidth || aspectRatio && (top <= minTop || bottom >= maxHeight))) {\n          renderable = false;\n          break;\n        }\n\n        check(ACTION_EAST);\n        width += range.x;\n\n        if (width < 0) {\n          action = ACTION_WEST;\n          width = -width;\n          left -= width;\n        }\n\n        if (aspectRatio) {\n          height = width / aspectRatio;\n          top += (cropBoxData.height - height) / 2;\n        }\n\n        break;\n\n      case ACTION_NORTH:\n        if (range.y <= 0 && (top <= minTop || aspectRatio && (left <= minLeft || right >= maxWidth))) {\n          renderable = false;\n          break;\n        }\n\n        check(ACTION_NORTH);\n        height -= range.y;\n        top += range.y;\n\n        if (height < 0) {\n          action = ACTION_SOUTH;\n          height = -height;\n          top -= height;\n        }\n\n        if (aspectRatio) {\n          width = height * aspectRatio;\n          left += (cropBoxData.width - width) / 2;\n        }\n\n        break;\n\n      case ACTION_WEST:\n        if (range.x <= 0 && (left <= minLeft || aspectRatio && (top <= minTop || bottom >= maxHeight))) {\n          renderable = false;\n          break;\n        }\n\n        check(ACTION_WEST);\n        width -= range.x;\n        left += range.x;\n\n        if (width < 0) {\n          action = ACTION_EAST;\n          width = -width;\n          left -= width;\n        }\n\n        if (aspectRatio) {\n          height = width / aspectRatio;\n          top += (cropBoxData.height - height) / 2;\n        }\n\n        break;\n\n      case ACTION_SOUTH:\n        if (range.y >= 0 && (bottom >= maxHeight || aspectRatio && (left <= minLeft || right >= maxWidth))) {\n          renderable = false;\n          break;\n        }\n\n        check(ACTION_SOUTH);\n        height += range.y;\n\n        if (height < 0) {\n          action = ACTION_NORTH;\n          height = -height;\n          top -= height;\n        }\n\n        if (aspectRatio) {\n          width = height * aspectRatio;\n          left += (cropBoxData.width - width) / 2;\n        }\n\n        break;\n\n      case ACTION_NORTH_EAST:\n        if (aspectRatio) {\n          if (range.y <= 0 && (top <= minTop || right >= maxWidth)) {\n            renderable = false;\n            break;\n          }\n\n          check(ACTION_NORTH);\n          height -= range.y;\n          top += range.y;\n          width = height * aspectRatio;\n        } else {\n          check(ACTION_NORTH);\n          check(ACTION_EAST);\n\n          if (range.x >= 0) {\n            if (right < maxWidth) {\n              width += range.x;\n            } else if (range.y <= 0 && top <= minTop) {\n              renderable = false;\n            }\n          } else {\n            width += range.x;\n          }\n\n          if (range.y <= 0) {\n            if (top > minTop) {\n              height -= range.y;\n              top += range.y;\n            }\n          } else {\n            height -= range.y;\n            top += range.y;\n          }\n        }\n\n        if (width < 0 && height < 0) {\n          action = ACTION_SOUTH_WEST;\n          height = -height;\n          width = -width;\n          top -= height;\n          left -= width;\n        } else if (width < 0) {\n          action = ACTION_NORTH_WEST;\n          width = -width;\n          left -= width;\n        } else if (height < 0) {\n          action = ACTION_SOUTH_EAST;\n          height = -height;\n          top -= height;\n        }\n\n        break;\n\n      case ACTION_NORTH_WEST:\n        if (aspectRatio) {\n          if (range.y <= 0 && (top <= minTop || left <= minLeft)) {\n            renderable = false;\n            break;\n          }\n\n          check(ACTION_NORTH);\n          height -= range.y;\n          top += range.y;\n          width = height * aspectRatio;\n          left += cropBoxData.width - width;\n        } else {\n          check(ACTION_NORTH);\n          check(ACTION_WEST);\n\n          if (range.x <= 0) {\n            if (left > minLeft) {\n              width -= range.x;\n              left += range.x;\n            } else if (range.y <= 0 && top <= minTop) {\n              renderable = false;\n            }\n          } else {\n            width -= range.x;\n            left += range.x;\n          }\n\n          if (range.y <= 0) {\n            if (top > minTop) {\n              height -= range.y;\n              top += range.y;\n            }\n          } else {\n            height -= range.y;\n            top += range.y;\n          }\n        }\n\n        if (width < 0 && height < 0) {\n          action = ACTION_SOUTH_EAST;\n          height = -height;\n          width = -width;\n          top -= height;\n          left -= width;\n        } else if (width < 0) {\n          action = ACTION_NORTH_EAST;\n          width = -width;\n          left -= width;\n        } else if (height < 0) {\n          action = ACTION_SOUTH_WEST;\n          height = -height;\n          top -= height;\n        }\n\n        break;\n\n      case ACTION_SOUTH_WEST:\n        if (aspectRatio) {\n          if (range.x <= 0 && (left <= minLeft || bottom >= maxHeight)) {\n            renderable = false;\n            break;\n          }\n\n          check(ACTION_WEST);\n          width -= range.x;\n          left += range.x;\n          height = width / aspectRatio;\n        } else {\n          check(ACTION_SOUTH);\n          check(ACTION_WEST);\n\n          if (range.x <= 0) {\n            if (left > minLeft) {\n              width -= range.x;\n              left += range.x;\n            } else if (range.y >= 0 && bottom >= maxHeight) {\n              renderable = false;\n            }\n          } else {\n            width -= range.x;\n            left += range.x;\n          }\n\n          if (range.y >= 0) {\n            if (bottom < maxHeight) {\n              height += range.y;\n            }\n          } else {\n            height += range.y;\n          }\n        }\n\n        if (width < 0 && height < 0) {\n          action = ACTION_NORTH_EAST;\n          height = -height;\n          width = -width;\n          top -= height;\n          left -= width;\n        } else if (width < 0) {\n          action = ACTION_SOUTH_EAST;\n          width = -width;\n          left -= width;\n        } else if (height < 0) {\n          action = ACTION_NORTH_WEST;\n          height = -height;\n          top -= height;\n        }\n\n        break;\n\n      case ACTION_SOUTH_EAST:\n        if (aspectRatio) {\n          if (range.x >= 0 && (right >= maxWidth || bottom >= maxHeight)) {\n            renderable = false;\n            break;\n          }\n\n          check(ACTION_EAST);\n          width += range.x;\n          height = width / aspectRatio;\n        } else {\n          check(ACTION_SOUTH);\n          check(ACTION_EAST);\n\n          if (range.x >= 0) {\n            if (right < maxWidth) {\n              width += range.x;\n            } else if (range.y >= 0 && bottom >= maxHeight) {\n              renderable = false;\n            }\n          } else {\n            width += range.x;\n          }\n\n          if (range.y >= 0) {\n            if (bottom < maxHeight) {\n              height += range.y;\n            }\n          } else {\n            height += range.y;\n          }\n        }\n\n        if (width < 0 && height < 0) {\n          action = ACTION_NORTH_WEST;\n          height = -height;\n          width = -width;\n          top -= height;\n          left -= width;\n        } else if (width < 0) {\n          action = ACTION_SOUTH_WEST;\n          width = -width;\n          left -= width;\n        } else if (height < 0) {\n          action = ACTION_NORTH_EAST;\n          height = -height;\n          top -= height;\n        }\n\n        break;\n      // Move canvas\n\n      case ACTION_MOVE:\n        this.move(range.x, range.y);\n        renderable = false;\n        break;\n      // Zoom canvas\n\n      case ACTION_ZOOM:\n        this.zoom(getMaxZoomRatio(pointers), e);\n        renderable = false;\n        break;\n      // Create crop box\n\n      case ACTION_CROP:\n        if (!range.x || !range.y) {\n          renderable = false;\n          break;\n        }\n\n        offset = getOffset(this.cropper);\n        left = pointer.startX - offset.left;\n        top = pointer.startY - offset.top;\n        width = cropBoxData.minWidth;\n        height = cropBoxData.minHeight;\n\n        if (range.x > 0) {\n          action = range.y > 0 ? ACTION_SOUTH_EAST : ACTION_NORTH_EAST;\n        } else if (range.x < 0) {\n          left -= width;\n          action = range.y > 0 ? ACTION_SOUTH_WEST : ACTION_NORTH_WEST;\n        }\n\n        if (range.y < 0) {\n          top -= height;\n        } // Show the crop box if is hidden\n\n\n        if (!this.cropped) {\n          removeClass(this.cropBox, CLASS_HIDDEN);\n          this.cropped = true;\n\n          if (this.limited) {\n            this.limitCropBox(true, true);\n          }\n        }\n\n        break;\n\n      default:\n    }\n\n    if (renderable) {\n      cropBoxData.width = width;\n      cropBoxData.height = height;\n      cropBoxData.left = left;\n      cropBoxData.top = top;\n      this.action = action;\n      this.renderCropBox();\n    } // Override\n\n\n    forEach(pointers, function (p) {\n      p.startX = p.endX;\n      p.startY = p.endY;\n    });\n  }\n};\n\nvar methods = {\n  // Show the crop box manually\n  crop: function crop() {\n    if (this.ready && !this.cropped && !this.disabled) {\n      this.cropped = true;\n      this.limitCropBox(true, true);\n\n      if (this.options.modal) {\n        addClass(this.dragBox, CLASS_MODAL);\n      }\n\n      removeClass(this.cropBox, CLASS_HIDDEN);\n      this.setCropBoxData(this.initialCropBoxData);\n    }\n\n    return this;\n  },\n  // Reset the image and crop box to their initial states\n  reset: function reset() {\n    if (this.ready && !this.disabled) {\n      this.imageData = assign({}, this.initialImageData);\n      this.canvasData = assign({}, this.initialCanvasData);\n      this.cropBoxData = assign({}, this.initialCropBoxData);\n      this.renderCanvas();\n\n      if (this.cropped) {\n        this.renderCropBox();\n      }\n    }\n\n    return this;\n  },\n  // Clear the crop box\n  clear: function clear() {\n    if (this.cropped && !this.disabled) {\n      assign(this.cropBoxData, {\n        left: 0,\n        top: 0,\n        width: 0,\n        height: 0\n      });\n      this.cropped = false;\n      this.renderCropBox();\n      this.limitCanvas(true, true); // Render canvas after crop box rendered\n\n      this.renderCanvas();\n      removeClass(this.dragBox, CLASS_MODAL);\n      addClass(this.cropBox, CLASS_HIDDEN);\n    }\n\n    return this;\n  },\n\n  /**\n   * Replace the image's src and rebuild the cropper\n   * @param {string} url - The new URL.\n   * @param {boolean} [hasSameSize] - Indicate if the new image has the same size as the old one.\n   * @returns {Cropper} this\n   */\n  replace: function replace(url) {\n    var hasSameSize = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n    if (!this.disabled && url) {\n      if (this.isImg) {\n        this.element.src = url;\n      }\n\n      if (hasSameSize) {\n        this.url = url;\n        this.image.src = url;\n\n        if (this.ready) {\n          this.viewBoxImage.src = url;\n          forEach(this.previews, function (element) {\n            element.getElementsByTagName('img')[0].src = url;\n          });\n        }\n      } else {\n        if (this.isImg) {\n          this.replaced = true;\n        }\n\n        this.options.data = null;\n        this.uncreate();\n        this.load(url);\n      }\n    }\n\n    return this;\n  },\n  // Enable (unfreeze) the cropper\n  enable: function enable() {\n    if (this.ready && this.disabled) {\n      this.disabled = false;\n      removeClass(this.cropper, CLASS_DISABLED);\n    }\n\n    return this;\n  },\n  // Disable (freeze) the cropper\n  disable: function disable() {\n    if (this.ready && !this.disabled) {\n      this.disabled = true;\n      addClass(this.cropper, CLASS_DISABLED);\n    }\n\n    return this;\n  },\n\n  /**\n   * Destroy the cropper and remove the instance from the image\n   * @returns {Cropper} this\n   */\n  destroy: function destroy() {\n    var element = this.element;\n\n    if (!element[NAMESPACE]) {\n      return this;\n    }\n\n    element[NAMESPACE] = undefined;\n\n    if (this.isImg && this.replaced) {\n      element.src = this.originalUrl;\n    }\n\n    this.uncreate();\n    return this;\n  },\n\n  /**\n   * Move the canvas with relative offsets\n   * @param {number} offsetX - The relative offset distance on the x-axis.\n   * @param {number} [offsetY=offsetX] - The relative offset distance on the y-axis.\n   * @returns {Cropper} this\n   */\n  move: function move(offsetX) {\n    var offsetY = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : offsetX;\n    var _this$canvasData = this.canvasData,\n        left = _this$canvasData.left,\n        top = _this$canvasData.top;\n    return this.moveTo(isUndefined(offsetX) ? offsetX : left + Number(offsetX), isUndefined(offsetY) ? offsetY : top + Number(offsetY));\n  },\n\n  /**\n   * Move the canvas to an absolute point\n   * @param {number} x - The x-axis coordinate.\n   * @param {number} [y=x] - The y-axis coordinate.\n   * @returns {Cropper} this\n   */\n  moveTo: function moveTo(x) {\n    var y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : x;\n    var canvasData = this.canvasData;\n    var changed = false;\n    x = Number(x);\n    y = Number(y);\n\n    if (this.ready && !this.disabled && this.options.movable) {\n      if (isNumber(x)) {\n        canvasData.left = x;\n        changed = true;\n      }\n\n      if (isNumber(y)) {\n        canvasData.top = y;\n        changed = true;\n      }\n\n      if (changed) {\n        this.renderCanvas(true);\n      }\n    }\n\n    return this;\n  },\n\n  /**\n   * Zoom the canvas with a relative ratio\n   * @param {number} ratio - The target ratio.\n   * @param {Event} _originalEvent - The original event if any.\n   * @returns {Cropper} this\n   */\n  zoom: function zoom(ratio, _originalEvent) {\n    var canvasData = this.canvasData;\n    ratio = Number(ratio);\n\n    if (ratio < 0) {\n      ratio = 1 / (1 - ratio);\n    } else {\n      ratio = 1 + ratio;\n    }\n\n    return this.zoomTo(canvasData.width * ratio / canvasData.naturalWidth, null, _originalEvent);\n  },\n\n  /**\n   * Zoom the canvas to an absolute ratio\n   * @param {number} ratio - The target ratio.\n   * @param {Object} pivot - The zoom pivot point coordinate.\n   * @param {Event} _originalEvent - The original event if any.\n   * @returns {Cropper} this\n   */\n  zoomTo: function zoomTo(ratio, pivot, _originalEvent) {\n    var options = this.options,\n        canvasData = this.canvasData;\n    var width = canvasData.width,\n        height = canvasData.height,\n        naturalWidth = canvasData.naturalWidth,\n        naturalHeight = canvasData.naturalHeight;\n    ratio = Number(ratio);\n\n    if (ratio >= 0 && this.ready && !this.disabled && options.zoomable) {\n      var newWidth = naturalWidth * ratio;\n      var newHeight = naturalHeight * ratio;\n\n      if (dispatchEvent(this.element, EVENT_ZOOM, {\n        ratio: ratio,\n        oldRatio: width / naturalWidth,\n        originalEvent: _originalEvent\n      }) === false) {\n        return this;\n      }\n\n      if (_originalEvent) {\n        var pointers = this.pointers;\n        var offset = getOffset(this.cropper);\n        var center = pointers && Object.keys(pointers).length ? getPointersCenter(pointers) : {\n          pageX: _originalEvent.pageX,\n          pageY: _originalEvent.pageY\n        }; // Zoom from the triggering point of the event\n\n        canvasData.left -= (newWidth - width) * ((center.pageX - offset.left - canvasData.left) / width);\n        canvasData.top -= (newHeight - height) * ((center.pageY - offset.top - canvasData.top) / height);\n      } else if (isPlainObject(pivot) && isNumber(pivot.x) && isNumber(pivot.y)) {\n        canvasData.left -= (newWidth - width) * ((pivot.x - canvasData.left) / width);\n        canvasData.top -= (newHeight - height) * ((pivot.y - canvasData.top) / height);\n      } else {\n        // Zoom from the center of the canvas\n        canvasData.left -= (newWidth - width) / 2;\n        canvasData.top -= (newHeight - height) / 2;\n      }\n\n      canvasData.width = newWidth;\n      canvasData.height = newHeight;\n      this.renderCanvas(true);\n    }\n\n    return this;\n  },\n\n  /**\n   * Rotate the canvas with a relative degree\n   * @param {number} degree - The rotate degree.\n   * @returns {Cropper} this\n   */\n  rotate: function rotate(degree) {\n    return this.rotateTo((this.imageData.rotate || 0) + Number(degree));\n  },\n\n  /**\n   * Rotate the canvas to an absolute degree\n   * @param {number} degree - The rotate degree.\n   * @returns {Cropper} this\n   */\n  rotateTo: function rotateTo(degree) {\n    degree = Number(degree);\n\n    if (isNumber(degree) && this.ready && !this.disabled && this.options.rotatable) {\n      this.imageData.rotate = degree % 360;\n      this.renderCanvas(true, true);\n    }\n\n    return this;\n  },\n\n  /**\n   * Scale the image on the x-axis.\n   * @param {number} scaleX - The scale ratio on the x-axis.\n   * @returns {Cropper} this\n   */\n  scaleX: function scaleX(_scaleX) {\n    var scaleY = this.imageData.scaleY;\n    return this.scale(_scaleX, isNumber(scaleY) ? scaleY : 1);\n  },\n\n  /**\n   * Scale the image on the y-axis.\n   * @param {number} scaleY - The scale ratio on the y-axis.\n   * @returns {Cropper} this\n   */\n  scaleY: function scaleY(_scaleY) {\n    var scaleX = this.imageData.scaleX;\n    return this.scale(isNumber(scaleX) ? scaleX : 1, _scaleY);\n  },\n\n  /**\n   * Scale the image\n   * @param {number} scaleX - The scale ratio on the x-axis.\n   * @param {number} [scaleY=scaleX] - The scale ratio on the y-axis.\n   * @returns {Cropper} this\n   */\n  scale: function scale(scaleX) {\n    var scaleY = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : scaleX;\n    var imageData = this.imageData;\n    var transformed = false;\n    scaleX = Number(scaleX);\n    scaleY = Number(scaleY);\n\n    if (this.ready && !this.disabled && this.options.scalable) {\n      if (isNumber(scaleX)) {\n        imageData.scaleX = scaleX;\n        transformed = true;\n      }\n\n      if (isNumber(scaleY)) {\n        imageData.scaleY = scaleY;\n        transformed = true;\n      }\n\n      if (transformed) {\n        this.renderCanvas(true, true);\n      }\n    }\n\n    return this;\n  },\n\n  /**\n   * Get the cropped area position and size data (base on the original image)\n   * @param {boolean} [rounded=false] - Indicate if round the data values or not.\n   * @returns {Object} The result cropped data.\n   */\n  getData: function getData$$1() {\n    var rounded = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    var options = this.options,\n        imageData = this.imageData,\n        canvasData = this.canvasData,\n        cropBoxData = this.cropBoxData;\n    var data;\n\n    if (this.ready && this.cropped) {\n      data = {\n        x: cropBoxData.left - canvasData.left,\n        y: cropBoxData.top - canvasData.top,\n        width: cropBoxData.width,\n        height: cropBoxData.height\n      };\n      var ratio = imageData.width / imageData.naturalWidth;\n      forEach(data, function (n, i) {\n        data[i] = n / ratio;\n      });\n\n      if (rounded) {\n        // In case rounding off leads to extra 1px in right or bottom border\n        // we should round the top-left corner and the dimension (#343).\n        var bottom = Math.round(data.y + data.height);\n        var right = Math.round(data.x + data.width);\n        data.x = Math.round(data.x);\n        data.y = Math.round(data.y);\n        data.width = right - data.x;\n        data.height = bottom - data.y;\n      }\n    } else {\n      data = {\n        x: 0,\n        y: 0,\n        width: 0,\n        height: 0\n      };\n    }\n\n    if (options.rotatable) {\n      data.rotate = imageData.rotate || 0;\n    }\n\n    if (options.scalable) {\n      data.scaleX = imageData.scaleX || 1;\n      data.scaleY = imageData.scaleY || 1;\n    }\n\n    return data;\n  },\n\n  /**\n   * Set the cropped area position and size with new data\n   * @param {Object} data - The new data.\n   * @returns {Cropper} this\n   */\n  setData: function setData$$1(data) {\n    var options = this.options,\n        imageData = this.imageData,\n        canvasData = this.canvasData;\n    var cropBoxData = {};\n\n    if (this.ready && !this.disabled && isPlainObject(data)) {\n      var transformed = false;\n\n      if (options.rotatable) {\n        if (isNumber(data.rotate) && data.rotate !== imageData.rotate) {\n          imageData.rotate = data.rotate;\n          transformed = true;\n        }\n      }\n\n      if (options.scalable) {\n        if (isNumber(data.scaleX) && data.scaleX !== imageData.scaleX) {\n          imageData.scaleX = data.scaleX;\n          transformed = true;\n        }\n\n        if (isNumber(data.scaleY) && data.scaleY !== imageData.scaleY) {\n          imageData.scaleY = data.scaleY;\n          transformed = true;\n        }\n      }\n\n      if (transformed) {\n        this.renderCanvas(true, true);\n      }\n\n      var ratio = imageData.width / imageData.naturalWidth;\n\n      if (isNumber(data.x)) {\n        cropBoxData.left = data.x * ratio + canvasData.left;\n      }\n\n      if (isNumber(data.y)) {\n        cropBoxData.top = data.y * ratio + canvasData.top;\n      }\n\n      if (isNumber(data.width)) {\n        cropBoxData.width = data.width * ratio;\n      }\n\n      if (isNumber(data.height)) {\n        cropBoxData.height = data.height * ratio;\n      }\n\n      this.setCropBoxData(cropBoxData);\n    }\n\n    return this;\n  },\n\n  /**\n   * Get the container size data.\n   * @returns {Object} The result container data.\n   */\n  getContainerData: function getContainerData() {\n    return this.ready ? assign({}, this.containerData) : {};\n  },\n\n  /**\n   * Get the image position and size data.\n   * @returns {Object} The result image data.\n   */\n  getImageData: function getImageData() {\n    return this.sized ? assign({}, this.imageData) : {};\n  },\n\n  /**\n   * Get the canvas position and size data.\n   * @returns {Object} The result canvas data.\n   */\n  getCanvasData: function getCanvasData() {\n    var canvasData = this.canvasData;\n    var data = {};\n\n    if (this.ready) {\n      forEach(['left', 'top', 'width', 'height', 'naturalWidth', 'naturalHeight'], function (n) {\n        data[n] = canvasData[n];\n      });\n    }\n\n    return data;\n  },\n\n  /**\n   * Set the canvas position and size with new data.\n   * @param {Object} data - The new canvas data.\n   * @returns {Cropper} this\n   */\n  setCanvasData: function setCanvasData(data) {\n    var canvasData = this.canvasData;\n    var aspectRatio = canvasData.aspectRatio;\n\n    if (this.ready && !this.disabled && isPlainObject(data)) {\n      if (isNumber(data.left)) {\n        canvasData.left = data.left;\n      }\n\n      if (isNumber(data.top)) {\n        canvasData.top = data.top;\n      }\n\n      if (isNumber(data.width)) {\n        canvasData.width = data.width;\n        canvasData.height = data.width / aspectRatio;\n      } else if (isNumber(data.height)) {\n        canvasData.height = data.height;\n        canvasData.width = data.height * aspectRatio;\n      }\n\n      this.renderCanvas(true);\n    }\n\n    return this;\n  },\n\n  /**\n   * Get the crop box position and size data.\n   * @returns {Object} The result crop box data.\n   */\n  getCropBoxData: function getCropBoxData() {\n    var cropBoxData = this.cropBoxData;\n    var data;\n\n    if (this.ready && this.cropped) {\n      data = {\n        left: cropBoxData.left,\n        top: cropBoxData.top,\n        width: cropBoxData.width,\n        height: cropBoxData.height\n      };\n    }\n\n    return data || {};\n  },\n\n  /**\n   * Set the crop box position and size with new data.\n   * @param {Object} data - The new crop box data.\n   * @returns {Cropper} this\n   */\n  setCropBoxData: function setCropBoxData(data) {\n    var cropBoxData = this.cropBoxData;\n    var aspectRatio = this.options.aspectRatio;\n    var widthChanged;\n    var heightChanged;\n\n    if (this.ready && this.cropped && !this.disabled && isPlainObject(data)) {\n      if (isNumber(data.left)) {\n        cropBoxData.left = data.left;\n      }\n\n      if (isNumber(data.top)) {\n        cropBoxData.top = data.top;\n      }\n\n      if (isNumber(data.width) && data.width !== cropBoxData.width) {\n        widthChanged = true;\n        cropBoxData.width = data.width;\n      }\n\n      if (isNumber(data.height) && data.height !== cropBoxData.height) {\n        heightChanged = true;\n        cropBoxData.height = data.height;\n      }\n\n      if (aspectRatio) {\n        if (widthChanged) {\n          cropBoxData.height = cropBoxData.width / aspectRatio;\n        } else if (heightChanged) {\n          cropBoxData.width = cropBoxData.height * aspectRatio;\n        }\n      }\n\n      this.renderCropBox();\n    }\n\n    return this;\n  },\n\n  /**\n   * Get a canvas drawn the cropped image.\n   * @param {Object} [options={}] - The config options.\n   * @returns {HTMLCanvasElement} - The result canvas.\n   */\n  getCroppedCanvas: function getCroppedCanvas() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    if (!this.ready || !window.HTMLCanvasElement) {\n      return null;\n    }\n\n    var canvasData = this.canvasData;\n    var source = getSourceCanvas(this.image, this.imageData, canvasData, options); // Returns the source canvas if it is not cropped.\n\n    if (!this.cropped) {\n      return source;\n    }\n\n    var _this$getData = this.getData(),\n        initialX = _this$getData.x,\n        initialY = _this$getData.y,\n        initialWidth = _this$getData.width,\n        initialHeight = _this$getData.height;\n\n    var ratio = source.width / Math.floor(canvasData.naturalWidth);\n\n    if (ratio !== 1) {\n      initialX *= ratio;\n      initialY *= ratio;\n      initialWidth *= ratio;\n      initialHeight *= ratio;\n    }\n\n    var aspectRatio = initialWidth / initialHeight;\n    var maxSizes = getAdjustedSizes({\n      aspectRatio: aspectRatio,\n      width: options.maxWidth || Infinity,\n      height: options.maxHeight || Infinity\n    });\n    var minSizes = getAdjustedSizes({\n      aspectRatio: aspectRatio,\n      width: options.minWidth || 0,\n      height: options.minHeight || 0\n    }, 'cover');\n\n    var _getAdjustedSizes = getAdjustedSizes({\n      aspectRatio: aspectRatio,\n      width: options.width || (ratio !== 1 ? source.width : initialWidth),\n      height: options.height || (ratio !== 1 ? source.height : initialHeight)\n    }),\n        width = _getAdjustedSizes.width,\n        height = _getAdjustedSizes.height;\n\n    width = Math.min(maxSizes.width, Math.max(minSizes.width, width));\n    height = Math.min(maxSizes.height, Math.max(minSizes.height, height));\n    var canvas = document.createElement('canvas');\n    var context = canvas.getContext('2d');\n    canvas.width = normalizeDecimalNumber(width);\n    canvas.height = normalizeDecimalNumber(height);\n    context.fillStyle = options.fillColor || 'transparent';\n    context.fillRect(0, 0, width, height);\n    var _options$imageSmoothi = options.imageSmoothingEnabled,\n        imageSmoothingEnabled = _options$imageSmoothi === void 0 ? true : _options$imageSmoothi,\n        imageSmoothingQuality = options.imageSmoothingQuality;\n    context.imageSmoothingEnabled = imageSmoothingEnabled;\n\n    if (imageSmoothingQuality) {\n      context.imageSmoothingQuality = imageSmoothingQuality;\n    } // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D.drawImage\n\n\n    var sourceWidth = source.width;\n    var sourceHeight = source.height; // Source canvas parameters\n\n    var srcX = initialX;\n    var srcY = initialY;\n    var srcWidth;\n    var srcHeight; // Destination canvas parameters\n\n    var dstX;\n    var dstY;\n    var dstWidth;\n    var dstHeight;\n\n    if (srcX <= -initialWidth || srcX > sourceWidth) {\n      srcX = 0;\n      srcWidth = 0;\n      dstX = 0;\n      dstWidth = 0;\n    } else if (srcX <= 0) {\n      dstX = -srcX;\n      srcX = 0;\n      srcWidth = Math.min(sourceWidth, initialWidth + srcX);\n      dstWidth = srcWidth;\n    } else if (srcX <= sourceWidth) {\n      dstX = 0;\n      srcWidth = Math.min(initialWidth, sourceWidth - srcX);\n      dstWidth = srcWidth;\n    }\n\n    if (srcWidth <= 0 || srcY <= -initialHeight || srcY > sourceHeight) {\n      srcY = 0;\n      srcHeight = 0;\n      dstY = 0;\n      dstHeight = 0;\n    } else if (srcY <= 0) {\n      dstY = -srcY;\n      srcY = 0;\n      srcHeight = Math.min(sourceHeight, initialHeight + srcY);\n      dstHeight = srcHeight;\n    } else if (srcY <= sourceHeight) {\n      dstY = 0;\n      srcHeight = Math.min(initialHeight, sourceHeight - srcY);\n      dstHeight = srcHeight;\n    }\n\n    var params = [srcX, srcY, srcWidth, srcHeight]; // Avoid \"IndexSizeError\"\n\n    if (dstWidth > 0 && dstHeight > 0) {\n      var scale = width / initialWidth;\n      params.push(dstX * scale, dstY * scale, dstWidth * scale, dstHeight * scale);\n    } // All the numerical parameters should be integer for `drawImage`\n    // https://github.com/fengyuanchen/cropper/issues/476\n\n\n    context.drawImage.apply(context, [source].concat(_toConsumableArray(params.map(function (param) {\n      return Math.floor(normalizeDecimalNumber(param));\n    }))));\n    return canvas;\n  },\n\n  /**\n   * Change the aspect ratio of the crop box.\n   * @param {number} aspectRatio - The new aspect ratio.\n   * @returns {Cropper} this\n   */\n  setAspectRatio: function setAspectRatio(aspectRatio) {\n    var options = this.options;\n\n    if (!this.disabled && !isUndefined(aspectRatio)) {\n      // 0 -> NaN\n      options.aspectRatio = Math.max(0, aspectRatio) || NaN;\n\n      if (this.ready) {\n        this.initCropBox();\n\n        if (this.cropped) {\n          this.renderCropBox();\n        }\n      }\n    }\n\n    return this;\n  },\n\n  /**\n   * Change the drag mode.\n   * @param {string} mode - The new drag mode.\n   * @returns {Cropper} this\n   */\n  setDragMode: function setDragMode(mode) {\n    var options = this.options,\n        dragBox = this.dragBox,\n        face = this.face;\n\n    if (this.ready && !this.disabled) {\n      var croppable = mode === DRAG_MODE_CROP;\n      var movable = options.movable && mode === DRAG_MODE_MOVE;\n      mode = croppable || movable ? mode : DRAG_MODE_NONE;\n      options.dragMode = mode;\n      setData(dragBox, DATA_ACTION, mode);\n      toggleClass(dragBox, CLASS_CROP, croppable);\n      toggleClass(dragBox, CLASS_MOVE, movable);\n\n      if (!options.cropBoxMovable) {\n        // Sync drag mode to crop box when it is not movable\n        setData(face, DATA_ACTION, mode);\n        toggleClass(face, CLASS_CROP, croppable);\n        toggleClass(face, CLASS_MOVE, movable);\n      }\n    }\n\n    return this;\n  }\n};\n\nvar AnotherCropper = WINDOW.Cropper;\n\nvar Cropper =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Create a new Cropper.\n   * @param {Element} element - The target element for cropping.\n   * @param {Object} [options={}] - The configuration options.\n   */\n  function Cropper(element) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    _classCallCheck(this, Cropper);\n\n    if (!element || !REGEXP_TAG_NAME.test(element.tagName)) {\n      throw new Error('The first argument is required and must be an <img> or <canvas> element.');\n    }\n\n    this.element = element;\n    this.options = assign({}, DEFAULTS, isPlainObject(options) && options);\n    this.cropped = false;\n    this.disabled = false;\n    this.pointers = {};\n    this.ready = false;\n    this.reloading = false;\n    this.replaced = false;\n    this.sized = false;\n    this.sizing = false;\n    this.init();\n  }\n\n  _createClass(Cropper, [{\n    key: \"init\",\n    value: function init() {\n      var element = this.element;\n      var tagName = element.tagName.toLowerCase();\n      var url;\n\n      if (element[NAMESPACE]) {\n        return;\n      }\n\n      element[NAMESPACE] = this;\n\n      if (tagName === 'img') {\n        this.isImg = true; // e.g.: \"img/picture.jpg\"\n\n        url = element.getAttribute('src') || '';\n        this.originalUrl = url; // Stop when it's a blank image\n\n        if (!url) {\n          return;\n        } // e.g.: \"http://example.com/img/picture.jpg\"\n\n\n        url = element.src;\n      } else if (tagName === 'canvas' && window.HTMLCanvasElement) {\n        url = element.toDataURL();\n      }\n\n      this.load(url);\n    }\n  }, {\n    key: \"load\",\n    value: function load(url) {\n      var _this = this;\n\n      if (!url) {\n        return;\n      }\n\n      this.url = url;\n      this.imageData = {};\n      var element = this.element,\n          options = this.options;\n\n      if (!options.rotatable && !options.scalable) {\n        options.checkOrientation = false;\n      } // Only IE10+ supports Typed Arrays\n\n\n      if (!options.checkOrientation || !window.ArrayBuffer) {\n        this.clone();\n        return;\n      } // XMLHttpRequest disallows to open a Data URL in some browsers like IE11 and Safari\n\n\n      if (REGEXP_DATA_URL.test(url)) {\n        if (REGEXP_DATA_URL_JPEG.test(url)) {\n          this.read(dataURLToArrayBuffer(url));\n        } else {\n          this.clone();\n        }\n\n        return;\n      }\n\n      var xhr = new XMLHttpRequest();\n      var clone = this.clone.bind(this);\n      this.reloading = true;\n      this.xhr = xhr;\n      xhr.ontimeout = clone;\n      xhr.onabort = clone;\n      xhr.onerror = clone;\n\n      xhr.onprogress = function () {\n        if (xhr.getResponseHeader('content-type') !== MIME_TYPE_JPEG) {\n          xhr.abort();\n        }\n      };\n\n      xhr.onload = function () {\n        _this.read(xhr.response);\n      };\n\n      xhr.onloadend = function () {\n        _this.reloading = false;\n        _this.xhr = null;\n      }; // Bust cache when there is a \"crossOrigin\" property to avoid browser cache error\n\n\n      if (options.checkCrossOrigin && isCrossOriginURL(url) && element.crossOrigin) {\n        url = addTimestamp(url);\n      }\n\n      xhr.open('GET', url);\n      xhr.responseType = 'arraybuffer';\n      xhr.withCredentials = element.crossOrigin === 'use-credentials';\n      xhr.send();\n    }\n  }, {\n    key: \"read\",\n    value: function read(arrayBuffer) {\n      var options = this.options,\n          imageData = this.imageData;\n      var orientation = resetAndGetOrientation(arrayBuffer);\n      var rotate = 0;\n      var scaleX = 1;\n      var scaleY = 1;\n\n      if (orientation > 1) {\n        // Generate a new Data URL with the orientation value set to 1\n        // as some iOS browsers will render image with its orientation\n        this.url = arrayBufferToDataURL(arrayBuffer, MIME_TYPE_JPEG);\n\n        var _parseOrientation = parseOrientation(orientation);\n\n        rotate = _parseOrientation.rotate;\n        scaleX = _parseOrientation.scaleX;\n        scaleY = _parseOrientation.scaleY;\n      }\n\n      if (options.rotatable) {\n        imageData.rotate = rotate;\n      }\n\n      if (options.scalable) {\n        imageData.scaleX = scaleX;\n        imageData.scaleY = scaleY;\n      }\n\n      this.clone();\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      var element = this.element,\n          url = this.url;\n      var crossOrigin;\n      var crossOriginUrl;\n\n      if (this.options.checkCrossOrigin && isCrossOriginURL(url)) {\n        crossOrigin = element.crossOrigin;\n\n        if (crossOrigin) {\n          crossOriginUrl = url;\n        } else {\n          crossOrigin = 'anonymous'; // Bust cache when there is not a \"crossOrigin\" property\n\n          crossOriginUrl = addTimestamp(url);\n        }\n      }\n\n      this.crossOrigin = crossOrigin;\n      this.crossOriginUrl = crossOriginUrl;\n      var image = document.createElement('img');\n\n      if (crossOrigin) {\n        image.crossOrigin = crossOrigin;\n      }\n\n      image.src = crossOriginUrl || url;\n      this.image = image;\n      image.onload = this.start.bind(this);\n      image.onerror = this.stop.bind(this);\n      addClass(image, CLASS_HIDE);\n      element.parentNode.insertBefore(image, element.nextSibling);\n    }\n  }, {\n    key: \"start\",\n    value: function start() {\n      var _this2 = this;\n\n      var image = this.isImg ? this.element : this.image;\n      image.onload = null;\n      image.onerror = null;\n      this.sizing = true;\n      var IS_SAFARI = WINDOW.navigator && /(Macintosh|iPhone|iPod|iPad).*AppleWebKit/i.test(WINDOW.navigator.userAgent);\n\n      var done = function done(naturalWidth, naturalHeight) {\n        assign(_this2.imageData, {\n          naturalWidth: naturalWidth,\n          naturalHeight: naturalHeight,\n          aspectRatio: naturalWidth / naturalHeight\n        });\n        _this2.sizing = false;\n        _this2.sized = true;\n\n        _this2.build();\n      }; // Modern browsers (except Safari)\n\n\n      if (image.naturalWidth && !IS_SAFARI) {\n        done(image.naturalWidth, image.naturalHeight);\n        return;\n      }\n\n      var sizingImage = document.createElement('img');\n      var body = document.body || document.documentElement;\n      this.sizingImage = sizingImage;\n\n      sizingImage.onload = function () {\n        done(sizingImage.width, sizingImage.height);\n\n        if (!IS_SAFARI) {\n          body.removeChild(sizingImage);\n        }\n      };\n\n      sizingImage.src = image.src; // iOS Safari will convert the image automatically\n      // with its orientation once append it into DOM (#279)\n\n      if (!IS_SAFARI) {\n        sizingImage.style.cssText = 'left:0;' + 'max-height:none!important;' + 'max-width:none!important;' + 'min-height:0!important;' + 'min-width:0!important;' + 'opacity:0;' + 'position:absolute;' + 'top:0;' + 'z-index:-1;';\n        body.appendChild(sizingImage);\n      }\n    }\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      var image = this.image;\n      image.onload = null;\n      image.onerror = null;\n      image.parentNode.removeChild(image);\n      this.image = null;\n    }\n  }, {\n    key: \"build\",\n    value: function build() {\n      if (!this.sized || this.ready) {\n        return;\n      }\n\n      var element = this.element,\n          options = this.options,\n          image = this.image; // Create cropper elements\n\n      var container = element.parentNode;\n      var template = document.createElement('div');\n      template.innerHTML = TEMPLATE;\n      var cropper = template.querySelector(\".\".concat(NAMESPACE, \"-container\"));\n      var canvas = cropper.querySelector(\".\".concat(NAMESPACE, \"-canvas\"));\n      var dragBox = cropper.querySelector(\".\".concat(NAMESPACE, \"-drag-box\"));\n      var cropBox = cropper.querySelector(\".\".concat(NAMESPACE, \"-crop-box\"));\n      var face = cropBox.querySelector(\".\".concat(NAMESPACE, \"-face\"));\n      this.container = container;\n      this.cropper = cropper;\n      this.canvas = canvas;\n      this.dragBox = dragBox;\n      this.cropBox = cropBox;\n      this.viewBox = cropper.querySelector(\".\".concat(NAMESPACE, \"-view-box\"));\n      this.face = face;\n      canvas.appendChild(image); // Hide the original image\n\n      addClass(element, CLASS_HIDDEN); // Inserts the cropper after to the current image\n\n      container.insertBefore(cropper, element.nextSibling); // Show the image if is hidden\n\n      if (!this.isImg) {\n        removeClass(image, CLASS_HIDE);\n      }\n\n      this.initPreview();\n      this.bind();\n      options.initialAspectRatio = Math.max(0, options.initialAspectRatio) || NaN;\n      options.aspectRatio = Math.max(0, options.aspectRatio) || NaN;\n      options.viewMode = Math.max(0, Math.min(3, Math.round(options.viewMode))) || 0;\n      addClass(cropBox, CLASS_HIDDEN);\n\n      if (!options.guides) {\n        addClass(cropBox.getElementsByClassName(\"\".concat(NAMESPACE, \"-dashed\")), CLASS_HIDDEN);\n      }\n\n      if (!options.center) {\n        addClass(cropBox.getElementsByClassName(\"\".concat(NAMESPACE, \"-center\")), CLASS_HIDDEN);\n      }\n\n      if (options.background) {\n        addClass(cropper, \"\".concat(NAMESPACE, \"-bg\"));\n      }\n\n      if (!options.highlight) {\n        addClass(face, CLASS_INVISIBLE);\n      }\n\n      if (options.cropBoxMovable) {\n        addClass(face, CLASS_MOVE);\n        setData(face, DATA_ACTION, ACTION_ALL);\n      }\n\n      if (!options.cropBoxResizable) {\n        addClass(cropBox.getElementsByClassName(\"\".concat(NAMESPACE, \"-line\")), CLASS_HIDDEN);\n        addClass(cropBox.getElementsByClassName(\"\".concat(NAMESPACE, \"-point\")), CLASS_HIDDEN);\n      }\n\n      this.render();\n      this.ready = true;\n      this.setDragMode(options.dragMode);\n\n      if (options.autoCrop) {\n        this.crop();\n      }\n\n      this.setData(options.data);\n\n      if (isFunction(options.ready)) {\n        addListener(element, EVENT_READY, options.ready, {\n          once: true\n        });\n      }\n\n      dispatchEvent(element, EVENT_READY);\n    }\n  }, {\n    key: \"unbuild\",\n    value: function unbuild() {\n      if (!this.ready) {\n        return;\n      }\n\n      this.ready = false;\n      this.unbind();\n      this.resetPreview();\n      this.cropper.parentNode.removeChild(this.cropper);\n      removeClass(this.element, CLASS_HIDDEN);\n    }\n  }, {\n    key: \"uncreate\",\n    value: function uncreate() {\n      if (this.ready) {\n        this.unbuild();\n        this.ready = false;\n        this.cropped = false;\n      } else if (this.sizing) {\n        this.sizingImage.onload = null;\n        this.sizing = false;\n        this.sized = false;\n      } else if (this.reloading) {\n        this.xhr.onabort = null;\n        this.xhr.abort();\n      } else if (this.image) {\n        this.stop();\n      }\n    }\n    /**\n     * Get the no conflict cropper class.\n     * @returns {Cropper} The cropper class.\n     */\n\n  }], [{\n    key: \"noConflict\",\n    value: function noConflict() {\n      window.Cropper = AnotherCropper;\n      return Cropper;\n    }\n    /**\n     * Change the default options.\n     * @param {Object} options - The new default options.\n     */\n\n  }, {\n    key: \"setDefaults\",\n    value: function setDefaults(options) {\n      assign(DEFAULTS, isPlainObject(options) && options);\n    }\n  }]);\n\n  return Cropper;\n}();\n\nassign(Cropper.prototype, render, preview, events, handlers, change, methods);\n\nexport default Cropper;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/cropperjs/dist/cropper.esm.js\n// module id = null\n// module chunks = ","<template>\r\n<!-- 图片裁剪 -->\r\n  <div class=\"vue-box\">\r\n    <img :src=\"imgUrl\" alt id=\"img\" :style=\"imgStyle\">\r\n    <input type=\"file\" class=\"file\"  accept=\"image/*\"  @change=\"change($event)\">\r\n  </div>\r\n</template>\r\n<script>\r\nimport Cropper from \"cropperjs\";\r\nexport default {\r\n  props: {\r\n    imgStyle: {\r\n      //裁剪后的图像显示\r\n      type: Object,\r\n      default: {\r\n        width: \"50px\",\r\n        height: \"50px\",\r\n        \"border-radius\": \"50%\"\r\n      }\r\n    },\r\n    // 定义的宽高比\r\n    widthRate: {\r\n      type: Number,\r\n      default: 500\r\n    },\r\n    // 定义的宽高比\r\n    heightRate: {\r\n      type: Number,\r\n      default: 500\r\n    },\r\n    imgUrl: {\r\n      type: String,\r\n      default: function() {\r\n        return \"\";\r\n      }\r\n    }\r\n  },\r\n  data() {\r\n    return {};\r\n  },\r\n  mounted() {\r\n   \r\n  },\r\n  methods: {\r\n    change(event) {\r\n      let image = document.getElementById(\"img\"); //预览对象\r\n      this.clip(event, {\r\n        resultObj: image,\r\n        aspectWithRatio: Number(this.widthRate),\r\n        aspectHeightRatio: Number(this.heightRate)\r\n      });\r\n    },\r\n    //初始化方法\r\n    initilize(opt) {\r\n      let self = this;\r\n      this.options = opt;\r\n      //创建dom\r\n      this.createElement();\r\n      this.resultObj = opt.resultObj;\r\n      //初始化裁剪对象\r\n      this.cropper = new Cropper(this.preview, {\r\n        aspectRatio: opt.aspectWithRatio / opt.aspectHeightRatio,\r\n        // aspectRatio: 1/1,\r\n        autoCropArea: opt.autoCropArea || 0.8,\r\n        viewMode: 2,\r\n        guides: true,\r\n        cropBoxResizable: true, //是否通过拖动来调整剪裁框的大小\r\n        cropBoxMovable: true, //是否通过拖拽来移动剪裁框。\r\n        dragCrop: false,\r\n        dragMode: \"move\", //‘crop’: 可以产生一个新的裁剪框3 ‘move’: 只可以移动3 ‘none’: 什么也不处理\r\n        center: true,\r\n        zoomable: true, //是否允许放大图像。\r\n        zoomOnTouch: true, //是否可以通过拖动触摸来放大图像。\r\n        scalable: true,\r\n        // minCropBoxHeight: 750,\r\n        // minCropBoxWidth: 750,\r\n        background: false,\r\n        checkOrientation: true,\r\n        checkCrossOrigin: true,\r\n        zoomable: false,\r\n        zoomOnWheel: false,\r\n        center: false,\r\n        toggleDragModeOnDblclick: false,\r\n        ready: function() {\r\n          // console.log(self.cropper.rotate(90))\r\n          if (opt.aspectRatio == \"Free\") {\r\n            let cropBox = self.cropper.cropBox;\r\n            cropBox.querySelector(\"span.cropper-view-box\").style.outline =\r\n              \"none\";\r\n            self.cropper.disable();\r\n          }\r\n        }\r\n      });\r\n    },\r\n    //创建一些必要的DOM，用于图片裁剪\r\n    createElement() {\r\n      //初始化图片为空对象\r\n      this.preview = null;\r\n      // <img src=\"../../assets/app/loading.gif\">\r\n      let str =\r\n        '<div><img id=\"clip_image\" src=\"originUrl\"></div><button type=\"button\" id=\"cancel_clip\">取消</button><button type=\"button\" id=\"clip_button\">确定</button>';\r\n      str +=\r\n        '<div class=\"crop_loading\"><div class=\"crop_content\"><div class=\"crop_text\">图片修剪中...</div></div></div>';\r\n      str +=\r\n        '<div class=\"crop_success\"><div class=\"crop_success_text\">上传成功</div></div></div>';\r\n\r\n      //   let body = document.getElementsByTagName('body')[0];\r\n      let app = document.getElementById(\"setAvatar\");\r\n      this.reagion = document.createElement(\"div\");\r\n      this.reagion.id = \"clip_container\";\r\n      this.reagion.className = \"container\";\r\n      this.reagion.innerHTML = str;\r\n      //添加创建好的DOM元素\r\n      app.appendChild(this.reagion);\r\n      this.preview = document.getElementById(\"clip_image\");\r\n\r\n      //绑定一些方法\r\n      this.initFunction();\r\n    },\r\n    //初始化一些函数绑定\r\n    initFunction() {\r\n      let self = this;\r\n      this.clickBtn = document.getElementById(\"clip_button\");\r\n      this.cancelBtn = document.getElementById(\"cancel_clip\");\r\n      //确定事件\r\n      this.addEvent(this.clickBtn, \"click\", function() {\r\n        self.crop();\r\n      });\r\n      //取消事件\r\n      this.addEvent(this.cancelBtn, \"click\", function() {\r\n        self.destoried();\r\n      });\r\n      //清空input的值\r\n      this.addEvent(this.fileObj, \"click\", function() {\r\n        this.value = \"\";\r\n      });\r\n    },\r\n    //外部接口，用于input['file']对象change时的调用\r\n    clip(e, opt) {\r\n      let self = this;\r\n\r\n      this.fileObj = e.srcElement;\r\n\r\n      let files = e.target.files || e.dataTransfer.files;\r\n\r\n      if (!files.length) return false; //不是图片直接返回\r\n\r\n      //调用初始化方法\r\n      this.initilize(opt);\r\n\r\n      //获取图片文件资源\r\n      this.picValue = files[0];\r\n\r\n      console.log(this.picValue);\r\n\r\n      //调用方法转成url格式\r\n      this.originUrl = this.getObjectURL(this.picValue);\r\n\r\n      //每次替换图片要重新得到新的url\r\n      if (this.cropper) {\r\n        this.cropper.replace(this.originUrl);\r\n      }\r\n    },\r\n    //图片转码方法\r\n    getObjectURL(file) {\r\n      let url = null;\r\n      if (window.createObjectURL != undefined) {\r\n        // basic\r\n        url = window.createObjectURL(file);\r\n      } else if (window.URL != undefined) {\r\n        // mozilla(firefox)\r\n        url = window.URL.createObjectURL(file);\r\n      } else if (window.webkitURL != undefined) {\r\n        // webkit or chrome\r\n        url = window.webkitURL.createObjectURL(file);\r\n      }\r\n      return url;\r\n    },\r\n    //点击确定进行裁剪\r\n    crop() {\r\n      let self = this;\r\n      let image = new Image();\r\n      let croppedCanvas;\r\n      let roundedCanvas;\r\n\r\n      // Crop\r\n      document.querySelector(\".crop_loading\").style.display = \"block\";\r\n\r\n      setTimeout(function() {\r\n        croppedCanvas = self.cropper.getCroppedCanvas();\r\n        // Round\r\n        roundedCanvas = self.getRoundedCanvas(croppedCanvas);\r\n\r\n        let imgData = roundedCanvas.toDataURL();\r\n        image.src = imgData;\r\n\r\n        //判断图片是否大于100k,不大于直接上传，反之压缩\r\n        if (imgData.length < 100 * 1024) {\r\n          self.resultObj.src = imgData;\r\n          //图片上传\r\n          self.postImg(imgData);\r\n        } else {\r\n          image.onload = function() {\r\n            //压缩处理\r\n            let data = self.compress(image, self.Orientation);\r\n            self.resultObj.src = data;\r\n            //图片上传\r\n            self.postImg(data);\r\n          };\r\n        }\r\n      }, 20);\r\n    },\r\n    //获取裁剪图片资源\r\n    getRoundedCanvas(sourceCanvas) {\r\n      let canvas = document.createElement(\"canvas\");\r\n      let context = canvas.getContext(\"2d\");\r\n      let width = sourceCanvas.width;\r\n      let height = sourceCanvas.height;\r\n\r\n      canvas.width = width;\r\n      canvas.height = height;\r\n\r\n      context.imageSmoothingEnabled = true;\r\n      context.drawImage(sourceCanvas, 0, 0, width, height);\r\n      context.globalCompositeOperation = \"destination-in\";\r\n      context.beginPath();\r\n      context.rect(0, 0, width, height);\r\n      context.fill();\r\n\r\n      return canvas;\r\n    },\r\n    //销毁原来的对象\r\n    destoried() {\r\n      let self = this;\r\n      //移除事件\r\n      this.removeEvent(this.clickBtn, \"click\", null);\r\n      this.removeEvent(this.cancelBtn, \"click\", null);\r\n      this.removeEvent(this.fileObj, \"click\", null);\r\n      //移除裁剪框\r\n      this.reagion.parentNode.removeChild(this.reagion);\r\n\r\n      //销毁裁剪对象\r\n      this.cropper.destroy();\r\n      this.cropper = null;\r\n    },\r\n    //图片上传\r\n    postImg(imageData) {\r\n      // console.log(imageData)\r\n\r\n      this.$emit(\"callback\", imageData);\r\n      //这边写图片的上传\r\n      let self = this;\r\n      self.destoried();\r\n\r\n      // window.setTimeout( function () {\r\n      //   document.querySelector('.crop_loading').style.display = 'none';\r\n      //   document.querySelector('.crop_success').style.display = 'block';\r\n      //   //裁剪完后摧毁对象\r\n      //     self.destoried();\r\n      // },3000)\r\n    },\r\n    //图片旋转\r\n    rotateImg(img, direction, canvas) {\r\n      //最小与最大旋转方向，图片旋转4次后回到原方向\r\n      const min_step = 0;\r\n      const max_step = 3;\r\n      if (img == null) return;\r\n      //img的高度和宽度不能在img元素隐藏后获取，否则会出错\r\n      let height = img.height;\r\n      let width = img.width;\r\n      let step = 2;\r\n      if (step == null) {\r\n        step = min_step;\r\n      }\r\n      if (direction == \"right\") {\r\n        step++;\r\n        //旋转到原位置，即超过最大值\r\n        step > max_step && (step = min_step);\r\n      } else {\r\n        step--;\r\n        step < min_step && (step = max_step);\r\n      }\r\n      //旋转角度以弧度值为参数\r\n      let degree = (step * 90 * Math.PI) / 180;\r\n      let ctx = canvas.getContext(\"2d\");\r\n      switch (step) {\r\n        case 0:\r\n          canvas.width = width;\r\n          canvas.height = height;\r\n          ctx.drawImage(img, 0, 0);\r\n          break;\r\n        case 1:\r\n          canvas.width = height;\r\n          canvas.height = width;\r\n          ctx.rotate(degree);\r\n          ctx.drawImage(img, 0, -height);\r\n          break;\r\n        case 2:\r\n          canvas.width = width;\r\n          canvas.height = height;\r\n          ctx.rotate(degree);\r\n          ctx.drawImage(img, -width, -height);\r\n          break;\r\n        case 3:\r\n          canvas.width = height;\r\n          canvas.height = width;\r\n          ctx.rotate(degree);\r\n          ctx.drawImage(img, -width, 0);\r\n          break;\r\n      }\r\n    },\r\n    //图片压缩\r\n    compress(img, Orientation) {\r\n      let canvas = document.createElement(\"canvas\");\r\n      let ctx = canvas.getContext(\"2d\");\r\n      //瓦片canvas\r\n      let tCanvas = document.createElement(\"canvas\");\r\n      let tctx = tCanvas.getContext(\"2d\");\r\n      let initSize = img.src.length;\r\n      let width = img.width;\r\n      let height = img.height;\r\n\r\n      //如果图片大于四百万像素，计算压缩比并将大小压至400万以下\r\n      let ratio;\r\n      if ((ratio = (width * height) / 4000000) > 1) {\r\n        console.log(\"大于400万像素\");\r\n        ratio = Math.sqrt(ratio);\r\n        width /= ratio;\r\n        height /= ratio;\r\n      } else {\r\n        ratio = 1;\r\n      }\r\n      canvas.width = width;\r\n      canvas.height = height;\r\n      //        铺底色\r\n      ctx.fillStyle = \"#fff\";\r\n      ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n      //如果图片像素大于100万则使用瓦片绘制\r\n      let count;\r\n      if ((count = (width * height) / 1000000) > 1) {\r\n        count = ~~(Math.sqrt(count) + 1); //计算要分成多少块瓦片\r\n        //            计算每块瓦片的宽和高\r\n        let nw = ~~(width / count);\r\n        let nh = ~~(height / count);\r\n        tCanvas.width = nw;\r\n        tCanvas.height = nh;\r\n        for (let i = 0; i < count; i++) {\r\n          for (let j = 0; j < count; j++) {\r\n            tctx.drawImage(\r\n              img,\r\n              i * nw * ratio,\r\n              j * nh * ratio,\r\n              nw * ratio,\r\n              nh * ratio,\r\n              0,\r\n              0,\r\n              nw,\r\n              nh\r\n            );\r\n            ctx.drawImage(tCanvas, i * nw, j * nh, nw, nh);\r\n          }\r\n        }\r\n      } else {\r\n        ctx.drawImage(img, 0, 0, width, height);\r\n      }\r\n      //修复ios上传图片的时候 被旋转的问题\r\n      if (Orientation != \"\" && Orientation != 1) {\r\n        switch (Orientation) {\r\n          case 6: //需要顺时针（向左）90度旋转\r\n            this.rotateImg(img, \"left\", canvas);\r\n            break;\r\n          case 8: //需要逆时针（向右）90度旋转\r\n            this.rotateImg(img, \"right\", canvas);\r\n            break;\r\n          case 3: //需要180度旋转\r\n            this.rotateImg(img, \"right\", canvas); //转两次\r\n            this.rotateImg(img, \"right\", canvas);\r\n            break;\r\n        }\r\n      }\r\n      //进行最小压缩\r\n      // let ndata = canvas.toDataURL( 'image/jpeg' , 0.1);\r\n      let ndata = canvas.toDataURL(\"image/png\", 0.1);\r\n      console.log(\"压缩前：\" + initSize);\r\n      console.log(\"压缩后：\" + ndata.length);\r\n      console.log(\r\n        \"压缩率：\" + ~~((100 * (initSize - ndata.length)) / initSize) + \"%\"\r\n      );\r\n      tCanvas.width = tCanvas.height = canvas.width = canvas.height = 0;\r\n\r\n      return ndata;\r\n    },\r\n    //添加事件\r\n    addEvent(obj, type, fn) {\r\n      if (obj.addEventListener) {\r\n        obj.addEventListener(type, fn, false);\r\n      } else {\r\n        obj.attachEvent(\"on\" + type, fn);\r\n      }\r\n    },\r\n    //移除事件\r\n    removeEvent(obj, type, fn) {\r\n      if (obj.removeEventListener) {\r\n        obj.removeEventListener(type, fn, false);\r\n      } else {\r\n        obj.detachEvent(\"on\" + type, fn);\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n<style scoped>\r\n.vue-box {\r\n  position: relative;\r\n  width: 100%;\r\n  height: 100%;\r\n  min-height: 0.4rem;\r\n}\r\n\r\n.vue-box .file {\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100%;\r\n  opacity: 0;\r\n  top: 0;\r\n  left: 0;\r\n  z-index: 99;\r\n  cursor: pointer;\r\n}\r\n\r\nimg {\r\n  width: 200px;\r\n  height: 200px;\r\n  border-radius: 50%;\r\n}\r\n\r\nh3 {\r\n  text-align: center;\r\n}\r\n\r\nh1,\r\nh2 {\r\n  font-weight: normal;\r\n}\r\n\r\nul {\r\n  list-style-type: none;\r\n  padding: 0;\r\n}\r\n\r\nli {\r\n  display: inline-block;\r\n  margin: 0 10px;\r\n}\r\n\r\na {\r\n  color: #42b983;\r\n}\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/my/Cropper.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"vue-box\"},[_c('img',{style:(_vm.imgStyle),attrs:{\"src\":_vm.imgUrl,\"alt\":\"\",\"id\":\"img\"}}),_vm._v(\" \"),_c('input',{staticClass:\"file\",attrs:{\"type\":\"file\",\"accept\":\"image/*\"},on:{\"change\":function($event){_vm.change($event)}}})])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-50a0eb7d\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/my/Cropper.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-50a0eb7d\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./Cropper.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./Cropper.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./Cropper.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-50a0eb7d\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./Cropper.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-50a0eb7d\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/my/Cropper.vue\n// module id = null\n// module chunks = ","<template>\r\n  <div id=\"my-warpper\">\r\n    <van-nav-bar title=\"会员中心\" :left-arrow='false' />\r\n    <!-- <img class=\"user-poster\" src=\"https://img.yzcdn.cn/public_files/2017/10/23/8690bb321356070e0b8c4404d087f8fd.png\"> -->\r\n    <div class=\"avatar\" v-if=\"!userName\">\r\n      <img src=\"http://img4.imgtn.bdimg.com/it/u=198369807,133263955&fm=27&gp=0.jpg\" alt srcset>\r\n      <p @click=\"login\">登录/注册</p>\r\n    </div>\r\n    <div class=\"avatar\" v-else>\r\n      <img :src=\"userName.avatar\" :onerror=\"defaultImg\">\r\n      <p class=\"usename\">欢迎您：{{userName.nickname}}</p>\r\n      <p @click=\"loginOut\">退出登录</p>\r\n      <van-icon name=\"setting\" class=\"setting\" @click=\"setting\"/>\r\n    </div>\r\n    <div class=\"user-links van-row\">\r\n      <div\r\n        class=\"van-col van-col--6 numlist\"\r\n        v-for=\"(val,index) in tabs\"\r\n        :key=\"val.status\"\r\n        @click=\"status(val.status)\"\r\n      >\r\n        <i class=\"van-icon\" :class=\"val.icon\"></i>\r\n        <span>{{val.title}}</span>\r\n        <span class=\"num\" v-if=\"orderNum && orderNum[index]!=0\">{{orderNum[index]}}</span>\r\n      </div>\r\n    </div>\r\n    <van-cell-group class=\"user-group\">\r\n      <van-cell icon=\"records\" title=\"全部订单\" is-link @click=\"myOrder\"/>\r\n    </van-cell-group>\r\n\r\n    <van-cell-group>\r\n      <van-cell icon=\"exchange\" title=\"收藏商品\" is-link @click=\"collection\"/>\r\n      <van-cell icon=\"gold-coin\" @click=\"address\" title=\"地址管理\" is-link/>\r\n      <van-cell icon=\"gift\" title=\"最近浏览\" is-link @click=\"browse\"/>\r\n    </van-cell-group>\r\n    <van-popup v-model=\"show\" position=\"right\" class=\"popup\" :overlay=\"false\">\r\n      <van-nav-bar\r\n        title=\"个人资料\"\r\n        left-arrow\r\n        @click-left=\"goBack\"\r\n      />\r\n      <van-cell-group>\r\n        <p @click=\"github\">\r\n          <van-field\r\n            class=\"border-bottom\"\r\n            value='https://github.com/yzbgyq/Vue-shopping'\r\n            disabled\r\n            clearable\r\n            label=\"github\"\r\n          />\r\n        </p>\r\n        <div id=\"setAvatar\" class=\"set-avatar border-bottom\">\r\n          <span>头像</span>\r\n          <div>\r\n            <img v-if=\"userName\" :onerror=\"defaultImg\" :src=\"tempAvatar || userName.avatar\" alt srcset>\r\n            <van-icon name=\"arrow\"/>\r\n          </div>\r\n          <div class=\"cropper\">\r\n            <Cropper :imgStyle=\"imgStyle\" @callback=\"callback\"/>\r\n          </div>\r\n        </div>\r\n        <p @click=\"noName\">\r\n          <van-field\r\n            class=\"border-bottom\"\r\n            v-model=\"username\"\r\n            disabled\r\n            clearable\r\n            label=\"用户名\"\r\n          />\r\n        </p>\r\n\r\n        <van-field v-model=\"nickname\" clearable label=\"昵称\" placeholder=\"请输入昵称\"/>\r\n        <p @click=\"showGender=true\" class=\"gender\">\r\n          <van-field\r\n            class=\"border-bottom\"\r\n            v-model=\"gender\"\r\n            clearable\r\n            disabled\r\n            label=\"性别\"\r\n            placeholder=\"男\"\r\n          />\r\n        </p>\r\n\r\n        <van-field v-model=\"email\" clearable label=\"邮箱\" placeholder=\"请输入邮箱\"/>\r\n        <p @click=\"showBirth = true;\" class=\"birth\">\r\n          <van-field v-model=\"birth\" clearable disabled label=\"出生年月\" placeholder=\"出生年月\"/>\r\n        </p>\r\n      </van-cell-group>\r\n      <van-popup v-model=\"showBirth\" position=\"bottom\" :overlay=\"true\">\r\n        <van-datetime-picker\r\n          v-model=\"currentDate\"\r\n          type=\"date\"\r\n          :min-date=\"minDate\"\r\n          :max-date=\"maxDate\"\r\n          @confirm=\"confirm\"\r\n          @cancel=\"showBirth = false\"\r\n        />\r\n      </van-popup>\r\n      <van-popup v-model=\"showGender\" position=\"bottom\" :overlay=\"true\">\r\n        <van-picker\r\n          class=\"gender-picker\"\r\n          :columns=\"columns\"\r\n          @change=\"onChange\"\r\n          show-toolbar\r\n          title=\"性别\"\r\n          @cancel=\"showGender=false\"\r\n          @confirm=\"showGender=false\"\r\n        />\r\n      </van-popup>\r\n      <div class=\"normal\">\r\n        <van-button\r\n          size=\"normal\"\r\n          class=\"normal-btn\"\r\n          type=\"primary\"\r\n          @click=\"post\"\r\n          :loading=\"loading\"\r\n        >保存</van-button>\r\n        <van-button @click=\"show=false\" size=\"normal\" class=\"normal-btn normal-btn-default\">取消</van-button>\r\n      </div>\r\n    </van-popup>\r\n    <transition name='fade'>\r\n      <router-view />\r\n    </transition>   \r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Cropper from \"@/components/my/Cropper\";\r\nimport { mapGetters, mapMutations } from \"vuex\";\r\nexport default {\r\n    name: \"My\",\r\n    components: {\r\n        Cropper\r\n    },\r\n\r\n    data() {\r\n        return {\r\n            show: false,\r\n            nickname: \"\",\r\n            username: \"\",\r\n            defaultImg: 'this.src=\"' + require('img/vue.jpg') + '\"',\r\n            gender: \"男\",\r\n            email: \"\",\r\n            currentDate: new Date(),\r\n            columns: [\"男\", \"女\", \"保密\"],\r\n            maxDate: new Date(),\r\n            minDate: new Date(1937, 12, 31),\r\n            birth: \"\", // ,出生年月\r\n            showBirth: false,\r\n            showGender: false,\r\n            year: \"\",\r\n            month: \"\",\r\n            day: \"\",\r\n            loading: false,\r\n            orderNum: \"\", //订单数量，\r\n            // 0,待付款 1，待发货 2，待收货 3，评价 4，已完成\r\n            tabs: [\r\n                { status: 1, icon: \"van-icon-pending-payment\", title: \"待付款\" },\r\n                { status: 2, icon: \"van-icon-pending-deliver\", title: \"待发货\" },\r\n                { status: 3, icon: \"van-icon-logistics\", title: \"待收货\" },\r\n                { status: 4, icon: \"van-icon-pending-orders\", title: \"评价\" },\r\n                { status: 5, icon: \"van-icon-exchange\", title: \"已完成\" }\r\n            ],\r\n            imgStyle: {\r\n                width: \"55px\",\r\n                height: \"55px\",\r\n                \"border-radius\": \"50%\",\r\n                display: \"none\"\r\n            },\r\n            tempAvatar: '',   //裁剪的临时图片\r\n        };\r\n    },\r\n\r\n    computed: {\r\n        ...mapGetters([\"userName\"])\r\n    },\r\n\r\n\r\n    methods: {\r\n        goBack() {\r\n            this.show = false\r\n            setTimeout(() => {\r\n                this.tempAvatar = ''\r\n            }, 300);\r\n        },\r\n\r\n        callback(img) {\r\n            console.log(img);\r\n\r\n            this.tempAvatar = img;\r\n        },\r\n        ...mapMutations({\r\n            setName: \"USERNAME\"\r\n        }),\r\n\r\n        noName() {\r\n            this.$toast(\"用户名暂时不能修改哟~~\");\r\n        },\r\n\r\n        login() {\r\n            this.$router.push({ path: \"/login\" });\r\n        },\r\n\r\n        address() {\r\n            if (this.userName) {\r\n                this.$router.push({ path: \"/address\" });\r\n            } else {\r\n                this.$router.push({ path: \"/login\" });\r\n            }\r\n        },\r\n\r\n        collection() {\r\n            this.$router.push({ path: \"/collection\" });\r\n        },\r\n\r\n        // 退出登录\r\n        async loginOut() {\r\n            try {\r\n                const { data } = await this.Api.loginOut();\r\n                if (data.code == 0) {\r\n                    window.location.reload();\r\n                    localStorage.clear();\r\n                }\r\n            } catch (error) {\r\n                this.$toast(\"网络错误\");\r\n            }\r\n        },\r\n\r\n        // 最近浏览\r\n        browse() {\r\n            this.$router.push({ path: \"/browse\" });\r\n        },\r\n\r\n        myOrder() {\r\n            this.$router.push({ path: \"/order\" });\r\n        },\r\n\r\n        // 修改用户资料\r\n        async setting() {\r\n            this.show = true;\r\n            try {\r\n                const { data } = await this.Api.user();\r\n                if (data.code == 200) {\r\n                    this.username = data.userInfo.username;\r\n                    this.gender = data.userInfo.gender;\r\n                    this.birth = data.userInfo.year + \"年\" + data.userInfo.month + \"月\" + data.userInfo.day + \"日\";\r\n                    this.year = data.userInfo.year;\r\n                    this.month = data.userInfo.month;\r\n                    this.day = data.userInfo.day;\r\n                    this.email = data.userInfo.email;\r\n                    this.id = data.userInfo._id;\r\n                    this.nickname = data.userInfo.nickname;\r\n                }\r\n            } catch (error) {\r\n                this.$toast(\"获取用户信息失败\");\r\n            }\r\n        },\r\n\r\n        confirm(val) {\r\n            let d = new Date(val);\r\n            this.year = d.getFullYear();\r\n            this.month = d.getMonth() + 1;\r\n            this.day = d.getDate();\r\n            this.birth = this.year + \"年\" + this.month + \"月\" + this.day + \"日\";\r\n            this.showBirth = false;\r\n        },\r\n\r\n        onChange(picker, value) {\r\n            this.gender = value;\r\n        },\r\n\r\n        // 保存\r\n        async post() {\r\n            this.loading = true;\r\n            let datas = {\r\n                gender: this.gender,\r\n                email: this.email,\r\n                year: this.year,\r\n                month: this.month,\r\n                day: this.day,\r\n                id: this.id,\r\n                nickname: this.nickname,\r\n                avatar: this.tempAvatar ? this.tempAvatar : undefined\r\n            };\r\n            try {\r\n                const { data } = await this.Api.saveUser(datas);\r\n                if (data.code == 200) {\r\n                    this.loading = false;\r\n                    this.setName(data.user);\r\n                    this.$toast(data.msg);\r\n                } else {\r\n                    this.$toast(data.msg);\r\n                    this.loading = false;\r\n                }\r\n            } catch (error) {\r\n                this.loading = false;\r\n                this.$toast(\"修改失败,网络错误\");\r\n            }\r\n        },\r\n\r\n        status(i) {\r\n            if (i == 4) {\r\n                this.$router.push({ path: \"/evaluate\" });\r\n            } else {\r\n                if (i == 5) {\r\n                    i = 4\r\n                }\r\n                this.$router.push({ path: \"/order\", query: { status: i } });\r\n            }\r\n        },\r\n\r\n        github() {\r\n            window.open('https://github.com/yzbgyq/Vue-shopping', '_blank');\r\n        }\r\n    },\r\n\r\n    async created() {\r\n        try {\r\n            const { data } = await this.Api.getOrderNum();\r\n            if (data.code == 200) {\r\n                this.orderNum = data.numList;\r\n            }\r\n        } catch (error) {\r\n            this.$toast(\"网络错误\");\r\n        }\r\n    },\r\n};\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.avatar {\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  text-align: center;\r\n  align-items: center;\r\n  background: #e30c7b;\r\n  padding: 10% 0 10% 0;\r\n  box-sizing: border-box;\r\n  position: relative;\r\n  img {\r\n    width: 70px;\r\n    height: 70px;\r\n    border-radius: 50%;\r\n  }\r\n  p {\r\n    color: #fff;\r\n    font-size: 14px;\r\n    margin-top: 20px;\r\n  }\r\n}\r\n.user {\r\n  &-poster {\r\n    width: 100%;\r\n    height: 100%;\r\n    display: block;\r\n  }\r\n  &-group {\r\n    margin-bottom: 0.3rem;\r\n  }\r\n  &-links {\r\n    padding: 15px 0;\r\n    font-size: 14px;\r\n    text-align: center;\r\n    background-color: #fff;\r\n    .van-icon {\r\n      display: block;\r\n      font-size: 24px;\r\n      margin-bottom: 10px;\r\n    }\r\n  }\r\n}\r\n.van-cell {\r\n  width: 100%;\r\n  display: -webkit-box;\r\n  display: -webkit-flex;\r\n  display: flex;\r\n  padding: 10px 15px;\r\n  box-sizing: border-box;\r\n  position: relative;\r\n  background-color: #fff;\r\n  color: #333;\r\n  font-size: 14px;\r\n  overflow: hidden;\r\n  align-items: center;\r\n  .van-cell__left-icon {\r\n    font-size: 16px;\r\n    line-height: 24px;\r\n    margin-right: 5px;\r\n  }\r\n  .van-cell__right-icon {\r\n    color: #999;\r\n    font-size: 12px;\r\n    line-height: 35px;\r\n    margin-left: 5px;\r\n  }\r\n}\r\n.usename {\r\n  font-weight: 700;\r\n  font-size: 18px !important;\r\n}\r\n.setting {\r\n  color: #eee;\r\n  font-size: 20px;\r\n  position: absolute;\r\n  top: 5px;\r\n  right: 5px;\r\n  padding: 10px;\r\n}\r\n.popup {\r\n  height: 100%;\r\n  width: 100%;\r\n  background: #fff;\r\n}\r\n.normal {\r\n  margin-top: 50px;\r\n  text-align: center;\r\n}\r\n.normal-btn {\r\n  width: 80%;\r\n}\r\n.normal-btn-default {\r\n  margin-top: 10px;\r\n}\r\n.numlist {\r\n  position: relative;\r\n  width: 20%;\r\n}\r\n.numlist .num {\r\n  position: absolute;\r\n  right: 15px;\r\n  top: -8px;\r\n  color: #fff;\r\n  background: #e0322b;\r\n  display: inline-block;\r\n  width: 20px;\r\n  height: 20px;\r\n  line-height: 20px;\r\n  font-size: 14px;\r\n  border-radius: 50%;\r\n}\r\n.set-avatar {\r\n  height: 80px;\r\n  line-height: 80px;\r\n  display: flex;\r\n  padding: 0 15px;\r\n  position: relative;\r\n  span {\r\n    flex: 0 0 75%;\r\n  }\r\n  div {\r\n    flex: 1;\r\n    img {\r\n      width: 55px;\r\n      height: 55px;\r\n      border-radius: 50%;\r\n      margin-right: 5px;\r\n    }\r\n  }\r\n}\r\n.cropper {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n}\r\n\r\n\r\n\r\n</style>\n\n\n// WEBPACK FOOTER //\n// src/pages/My.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"my-warpper\"}},[_c('van-nav-bar',{attrs:{\"title\":\"会员中心\",\"left-arrow\":false}}),_vm._v(\" \"),(!_vm.userName)?_c('div',{staticClass:\"avatar\"},[_c('img',{attrs:{\"src\":\"http://img4.imgtn.bdimg.com/it/u=198369807,133263955&fm=27&gp=0.jpg\",\"alt\":\"\",\"srcset\":\"\"}}),_vm._v(\" \"),_c('p',{on:{\"click\":_vm.login}},[_vm._v(\"登录/注册\")])]):_c('div',{staticClass:\"avatar\"},[_c('img',{attrs:{\"src\":_vm.userName.avatar,\"onerror\":_vm.defaultImg}}),_vm._v(\" \"),_c('p',{staticClass:\"usename\"},[_vm._v(\"欢迎您：\"+_vm._s(_vm.userName.nickname))]),_vm._v(\" \"),_c('p',{on:{\"click\":_vm.loginOut}},[_vm._v(\"退出登录\")]),_vm._v(\" \"),_c('van-icon',{staticClass:\"setting\",attrs:{\"name\":\"setting\"},on:{\"click\":_vm.setting}})],1),_vm._v(\" \"),_c('div',{staticClass:\"user-links van-row\"},_vm._l((_vm.tabs),function(val,index){return _c('div',{key:val.status,staticClass:\"van-col van-col--6 numlist\",on:{\"click\":function($event){_vm.status(val.status)}}},[_c('i',{staticClass:\"van-icon\",class:val.icon}),_vm._v(\" \"),_c('span',[_vm._v(_vm._s(val.title))]),_vm._v(\" \"),(_vm.orderNum && _vm.orderNum[index]!=0)?_c('span',{staticClass:\"num\"},[_vm._v(_vm._s(_vm.orderNum[index]))]):_vm._e()])})),_vm._v(\" \"),_c('van-cell-group',{staticClass:\"user-group\"},[_c('van-cell',{attrs:{\"icon\":\"records\",\"title\":\"全部订单\",\"is-link\":\"\"},on:{\"click\":_vm.myOrder}})],1),_vm._v(\" \"),_c('van-cell-group',[_c('van-cell',{attrs:{\"icon\":\"exchange\",\"title\":\"收藏商品\",\"is-link\":\"\"},on:{\"click\":_vm.collection}}),_vm._v(\" \"),_c('van-cell',{attrs:{\"icon\":\"gold-coin\",\"title\":\"地址管理\",\"is-link\":\"\"},on:{\"click\":_vm.address}}),_vm._v(\" \"),_c('van-cell',{attrs:{\"icon\":\"gift\",\"title\":\"最近浏览\",\"is-link\":\"\"},on:{\"click\":_vm.browse}})],1),_vm._v(\" \"),_c('van-popup',{staticClass:\"popup\",attrs:{\"position\":\"right\",\"overlay\":false},model:{value:(_vm.show),callback:function ($$v) {_vm.show=$$v},expression:\"show\"}},[_c('van-nav-bar',{attrs:{\"title\":\"个人资料\",\"left-arrow\":\"\"},on:{\"click-left\":_vm.goBack}}),_vm._v(\" \"),_c('van-cell-group',[_c('p',{on:{\"click\":_vm.github}},[_c('van-field',{staticClass:\"border-bottom\",attrs:{\"value\":\"https://github.com/yzbgyq/Vue-shopping\",\"disabled\":\"\",\"clearable\":\"\",\"label\":\"github\"}})],1),_vm._v(\" \"),_c('div',{staticClass:\"set-avatar border-bottom\",attrs:{\"id\":\"setAvatar\"}},[_c('span',[_vm._v(\"头像\")]),_vm._v(\" \"),_c('div',[(_vm.userName)?_c('img',{attrs:{\"onerror\":_vm.defaultImg,\"src\":_vm.tempAvatar || _vm.userName.avatar,\"alt\":\"\",\"srcset\":\"\"}}):_vm._e(),_vm._v(\" \"),_c('van-icon',{attrs:{\"name\":\"arrow\"}})],1),_vm._v(\" \"),_c('div',{staticClass:\"cropper\"},[_c('Cropper',{attrs:{\"imgStyle\":_vm.imgStyle},on:{\"callback\":_vm.callback}})],1)]),_vm._v(\" \"),_c('p',{on:{\"click\":_vm.noName}},[_c('van-field',{staticClass:\"border-bottom\",attrs:{\"disabled\":\"\",\"clearable\":\"\",\"label\":\"用户名\"},model:{value:(_vm.username),callback:function ($$v) {_vm.username=$$v},expression:\"username\"}})],1),_vm._v(\" \"),_c('van-field',{attrs:{\"clearable\":\"\",\"label\":\"昵称\",\"placeholder\":\"请输入昵称\"},model:{value:(_vm.nickname),callback:function ($$v) {_vm.nickname=$$v},expression:\"nickname\"}}),_vm._v(\" \"),_c('p',{staticClass:\"gender\",on:{\"click\":function($event){_vm.showGender=true}}},[_c('van-field',{staticClass:\"border-bottom\",attrs:{\"clearable\":\"\",\"disabled\":\"\",\"label\":\"性别\",\"placeholder\":\"男\"},model:{value:(_vm.gender),callback:function ($$v) {_vm.gender=$$v},expression:\"gender\"}})],1),_vm._v(\" \"),_c('van-field',{attrs:{\"clearable\":\"\",\"label\":\"邮箱\",\"placeholder\":\"请输入邮箱\"},model:{value:(_vm.email),callback:function ($$v) {_vm.email=$$v},expression:\"email\"}}),_vm._v(\" \"),_c('p',{staticClass:\"birth\",on:{\"click\":function($event){_vm.showBirth = true;}}},[_c('van-field',{attrs:{\"clearable\":\"\",\"disabled\":\"\",\"label\":\"出生年月\",\"placeholder\":\"出生年月\"},model:{value:(_vm.birth),callback:function ($$v) {_vm.birth=$$v},expression:\"birth\"}})],1)],1),_vm._v(\" \"),_c('van-popup',{attrs:{\"position\":\"bottom\",\"overlay\":true},model:{value:(_vm.showBirth),callback:function ($$v) {_vm.showBirth=$$v},expression:\"showBirth\"}},[_c('van-datetime-picker',{attrs:{\"type\":\"date\",\"min-date\":_vm.minDate,\"max-date\":_vm.maxDate},on:{\"confirm\":_vm.confirm,\"cancel\":function($event){_vm.showBirth = false}},model:{value:(_vm.currentDate),callback:function ($$v) {_vm.currentDate=$$v},expression:\"currentDate\"}})],1),_vm._v(\" \"),_c('van-popup',{attrs:{\"position\":\"bottom\",\"overlay\":true},model:{value:(_vm.showGender),callback:function ($$v) {_vm.showGender=$$v},expression:\"showGender\"}},[_c('van-picker',{staticClass:\"gender-picker\",attrs:{\"columns\":_vm.columns,\"show-toolbar\":\"\",\"title\":\"性别\"},on:{\"change\":_vm.onChange,\"cancel\":function($event){_vm.showGender=false},\"confirm\":function($event){_vm.showGender=false}}})],1),_vm._v(\" \"),_c('div',{staticClass:\"normal\"},[_c('van-button',{staticClass:\"normal-btn\",attrs:{\"size\":\"normal\",\"type\":\"primary\",\"loading\":_vm.loading},on:{\"click\":_vm.post}},[_vm._v(\"保存\")]),_vm._v(\" \"),_c('van-button',{staticClass:\"normal-btn normal-btn-default\",attrs:{\"size\":\"normal\"},on:{\"click\":function($event){_vm.show=false}}},[_vm._v(\"取消\")])],1)],1),_vm._v(\" \"),_c('transition',{attrs:{\"name\":\"fade\"}},[_c('router-view')],1)],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-7a9951e0\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/pages/My.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-7a9951e0\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!less-loader?{\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./My.vue\")\n}\nvar normalizeComponent = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./My.vue\"\nimport __vue_script__ from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./My.vue\"\n/* template */\nimport __vue_template__ from \"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-7a9951e0\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./My.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-7a9951e0\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/pages/My.vue\n// module id = null\n// module chunks = "],"sourceRoot":""}